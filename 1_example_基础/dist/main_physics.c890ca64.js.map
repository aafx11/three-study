{"version":3,"sources":["../node_modules/three/build/three.module.js","../node_modules/three/examples/jsm/controls/OrbitControls.js","../src/dat/color/toString.js","../src/dat/utils/common.js","../src/dat/color/interpret.js","../src/dat/color/math.js","../src/dat/color/Color.js","../src/dat/controllers/Controller.js","../src/dat/dom/dom.js","../src/dat/controllers/BooleanController.js","../src/dat/controllers/OptionController.js","../src/dat/controllers/StringController.js","../src/dat/controllers/NumberController.js","../src/dat/controllers/NumberControllerBox.js","../src/dat/controllers/NumberControllerSlider.js","../src/dat/controllers/FunctionController.js","../src/dat/controllers/ColorController.js","../src/dat/utils/css.js","../src/dat/gui/saveDialogue.html.js","../src/dat/controllers/ControllerFactory.js","../src/dat/utils/requestAnimationFrame.js","../src/dat/dom/CenteredDiv.js","../src/dat/gui/GUI.js","../src/dat/index.js","../node_modules/cannon-es/dist/cannon-es.js","main/main_physics.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","l","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","_cache","warnOnce","message","SRGBToLinear","LinearToSRGB","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","DisplayP3ToLinearSRGB","color","convertSRGBToLinear","LinearSRGBToDisplayP3","convertLinearToSRGB","TO_LINEAR","_TO_LINEAR","_defineProperty","FROM_LINEAR","_FROM_LINEAR","ColorManagement","enabled","legacyMode","workingColorSpace","colorSpace","convert","sourceColorSpace","targetColorSpace","sourceToLinear","targetFromLinear","concat","fromWorkingColorSpace","toWorkingColorSpace","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","width","height","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_this2","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_super2","options","_this3","isRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","WebGLRenderTarget","_RenderTarget","_super3","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_super4","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super5","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super6","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super7","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super8","count","_this9","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$b","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$a","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","boundingBox","computeBoundingBox","_box$3","union","geometry","attributes","position","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$9","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super9","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","childResult","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","_EventDispatcher4","_super10","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","toString","setValues","newValue","currentValue","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","_color","getHexString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","MeshBasicMaterial","_Material","_super11","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","fromHalfFloat","DataUtils","_vector$8","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","gpuType","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super12","Uint8BufferAttribute","_BufferAttribute2","_super13","Uint8ClampedBufferAttribute","_BufferAttribute3","_super14","Int16BufferAttribute","_BufferAttribute4","_super15","Uint16BufferAttribute","_BufferAttribute5","_super16","Int32BufferAttribute","_BufferAttribute6","_super17","Uint32BufferAttribute","_BufferAttribute7","_super18","Float16BufferAttribute","_BufferAttribute8","_super19","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super20","Float64BufferAttribute","_BufferAttribute10","_super21","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$7","BufferGeometry","_EventDispatcher5","_super22","_this14","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$5","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super23","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","getVertexPosition","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super24","widthSegments","heightSegments","depthSegments","_this16","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super25","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super26","_this18","PerspectiveCamera","_Camera","_super27","fov","aspect","_this19","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super28","renderTarget","_this20","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super29","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super30","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$4","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super31","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","mode","setMode","drawArrays","renderInstances","primcount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super32","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","useLegacyLights","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super33","_this25","isMeshDepthMaterial","_Material4","_super34","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","_compareToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","compareFunction","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super35","_this27","isArrayCamera","Group","_Object3D4","_super36","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","_Texture4","_super37","_this29","WebXRManager","_EventDispatcher6","_super38","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","createCanvasElement","display","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepare","getProgram","material2","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","_WebGLRenderer","_super39","FogExp2","Fog","Scene","_Object3D5","_super40","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$5","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super41","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super42","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super43","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$3","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super44","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super45","_this36","isBone","DataTexture","_Texture5","_super46","_this37","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super47","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh","_sphere$2","InstancedMesh","_Mesh2","_super48","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","_Material6","_super49","_this40","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super50","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super51","_this42","LineLoop","_Line2","_super52","_this43","_Material7","_super53","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super54","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super55","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super56","_this47","CompressedTexture","_Texture8","_super57","_this48","CompressedArrayTexture","_CompressedTexture","_super58","_this49","CompressedCubeTexture","_CompressedTexture2","_super59","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_super60","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_super61","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this52","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super62","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super63","curveType","_this54","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super64","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super65","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_super66","_this57","isLineCurve","LineCurve3","_Curve6","_super67","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_super68","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super69","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super70","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super71","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super72","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super73","phiStart","phiLength","_this64","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super74","capSegments","radialSegments","_this65","CircleGeometry","_BufferGeometry4","_super75","thetaStart","thetaLength","_this66","segment","CylinderGeometry","_BufferGeometry5","_super76","radiusTop","radiusBottom","openEnded","_this67","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super77","_this68","PolyhedronGeometry","_BufferGeometry6","_super78","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super79","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super80","thresholdAngle","_this71","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super81","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super82","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super83","_this74","OctahedronGeometry","_PolyhedronGeometry3","_super84","_this75","RingGeometry","_BufferGeometry9","_super85","innerRadius","outerRadius","thetaSegments","phiSegments","_this76","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super86","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super87","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super88","_this79","TorusGeometry","_BufferGeometry12","_super89","tube","tubularSegments","_this80","TorusKnotGeometry","_BufferGeometry13","_super90","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super91","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super92","_this83","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super93","_this84","RawShaderMaterial","_ShaderMaterial","_super94","_this85","_Material9","_super95","_this86","_MeshStandardMaterial","_super96","_this87","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_toConsumableArray","_Material10","_super97","_this88","_Material11","_super98","_this89","_Material12","_super99","_this90","_Material13","_super100","_this91","_Material14","_super101","_this92","_LineBasicMaterial","_super102","_this93","arraySlice","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super103","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super104","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super105","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super106","ColorKeyframeTrack","_KeyframeTrack2","_super107","NumberKeyframeTrack","_KeyframeTrack3","_super108","QuaternionLinearInterpolant","_Interpolant4","_super109","QuaternionKeyframeTrack","_KeyframeTrack4","_super110","StringKeyframeTrack","_KeyframeTrack5","_super111","VectorKeyframeTrack","_KeyframeTrack6","_super112","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super113","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_super114","_this96","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super115","CompressedTextureLoader","_Loader3","_super116","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super117","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super118","urls","DataTextureLoader","_Loader6","_super119","texData","TextureLoader","_Loader7","_super120","Light","_Object3D11","_super121","_this97","HemisphereLight","_Light","_super122","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super123","_this99","isSpotLightShadow","SpotLight","_Light2","_super124","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super125","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_super126","_this102","DirectionalLightShadow","_LightShadow3","_super127","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_super128","_this104","AmbientLight","_Light5","_super129","_this105","RectAreaLight","_Light6","_super130","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super131","_this107","MaterialLoader","_Loader8","_super132","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super133","_this109","BufferGeometryLoader","_Loader9","_super134","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super135","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super136","_this110","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super137","bufferCopy","decodeAudioData","audioBuffer","handleError","HemisphereLightProbe","_LightProbe","_super138","_this111","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_super139","_this112","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super140","_this113","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super141","_this114","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super142","_this115","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super143","_this116","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","UniformsGroup","_EventDispatcher8","_super144","_this117","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super145","_this118","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super146","_this119","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super147","_this120","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super148","sphereSize","_this121","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super149","_this122","GridHelper","_LineSegments2","_super150","_this123","PolarGridHelper","_LineSegments3","_super151","sectors","rings","_this124","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super152","_this125","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super153","_this126","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super154","_this127","Box3Helper","_LineSegments6","_super155","_this128","PlaneHelper","_Line3","_super156","_this129","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super157","headLength","headWidth","_this130","setDirection","setColor","AxesHelper","_LineSegments7","_super158","_this131","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","_three","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","Boolean","valueOf","_changeEvent","_startEvent","_endEvent","_plane","TILT_LIMIT","OrbitControls","touchAction","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","quat","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","performCursorZoom","clampDistance","zoomChanged","newRadius","prevRadius","radiusDelta","dollyDirection","mouseBefore","mouse","mouseAfter","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","updateMouseParameters","rect","getBoundingClientRect","clientX","clientY","dist","handleMouseDownRotate","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","pointer","passive","forceCSSHex","__state","conversionName","str","ARR_EACH","ARR_SLICE","Common","each","isObject","isUndefined","toCall","args","itr","BREAK","fnc","func","callImmediately","timeout","delayed","callNow","Function","INTERPRETATIONS","isString","original","isNumber","toReturn","interpret","family","litmus","conversions","conversion","tmpComponent","ColorMath","hi","NaN","hex_with_component","componentIndex","colorToString","write","defineRGBComponent","componentHexIndex","recalculateRGB","defineHSVComponent","recalculateHSV","math","component_from_hex","extend","hsv_to_rgb","rgb_to_hsv","COMPONENTS","rgb_to_hex","Controller","initialValue","createElement","__onChange","__onFinishChange","updateDisplay","EVENT_MAP","EVENT_MAP_INV","CSS_VALUE_PIXELS","cssValueToPixels","isNull","dom","elem","selectable","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","hor","vertical","horizontal","eventType","aux","className","evt","createEvent","initMouseEvent","bubbles","cancelable","clickCount","initKeyboardEvent","initKeyEvent","defaults","altKey","keyCode","charCode","initEvent","newBool","bool","attachEvent","detachEvent","classes","removeAttribute","getComputedStyle","el","offsetParent","offsetLeft","offsetTop","activeElement","href","BooleanController","__prev","__checkbox","onChange","appendChild","checked","OptionController","opts","__select","opt","innerHTML","desiredValue","selectedIndex","isActive","StringController","__input","onBlur","blur","numDecimals","NumberController","_params","__min","__max","__step","__impliedStep","LN10","__precision","_v","minValue","maxValue","stepValue","roundToDecimal","decimals","tenTo","NumberControllerBox","__truncationSuspended","prevY","attempted","onFinish","onMouseDrag","onMouseUp","NumberControllerSlider","__background","__foreground","addClass","bgRect","onTouchEnd","pct","FunctionController","__button","fire","ColorController","__color","__temp","makeSelectable","__selector","__saturation_field","__field_knob","__field_knob_border","__hue_knob","__hue_field","__input_textShadow","removeClass","valueField","fieldDown","fieldDownH","setSV","fieldUpSV","setH","fieldUpH","toOriginal","fieldRect","mismatch","flip","_flip","toHexString","marginTop","vendors","linearGradient","vendor","cssText","hueGradient","css","indoc","doc","link","rel","getElementsByTagName","cssContent","injected","head","saveDialogContents","ControllerFactory","isFunction","isBoolean","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","CenteredDiv","backgroundElement","makeFullscreen","hide","webkitTransform","layout","defer","innerWidth","getWidth","innerHeight","getHeight","inject","styleSheet","CSS_NAMESPACE","HIDE_KEY_CODE","CLOSE_BUTTON_HEIGHT","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceVirgin","autoPlaceContainer","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","DEFAULT_WIDTH","autoPlace","preset","hideable","resizable","scrollable","useLocalStorage","getItem","getLocalStorageHash","saveToLocalStorage","titleRow","closeOnTop","revert","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","setItem","CLASS_MAIN","savedGui","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","onClickTitle","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","getSaveObject","saveToLocalStorageIfPossible","resetWidth","toggleHide","gui","CLASS_CONTROLLER_ROW","CLASS_TOO_TALL","CLASS_DRAG","_keydownHandler","which","removeChild","__li","subfolder","removeFolder","newGuiParams","folders","li","folder","parentElement","getOffset","__save_row","__resize_handle","offsetHeight","debounce","saveDialogueContents","remembered","getCurrentPreset","presetName","newDom","liBefore","removeListeners","markPresetModified","modified","__preset_select","augmentController","__gui","nextSibling","nextElementSibling","firstElementChild","listen","pc","pb","returned","oldName","wasListening","newController","fakeEvent","stopPropagation","borderLeftColor","isModified","recallSavedValue","matchedIndex","controllerMap","presetMap","factoryArgs","before","addPresetOption","setSelected","showHideExplain","explain","addSaveMenu","div","firstChild","gears","button2","button3","select","getElementById","localStorageCheckBox","saveLocally","newConstructorTextArea","show","save","prompt","saveAs","addResizeHandle","pmouseX","drag","dragStop","dragStart","setWidth","useInitialValues","savedValues","setPresetSelectIndex","updateDisplays","controllerArray","domImport","GUIImport","ObjectCollisionMatrix","bi","temp","setNumObjects","Mat3","setZero","setTrace","getTrace","Vec3","vmult","smult","mmult","A","solve","nr","nc","eqns","np","kp","multiplier","row","column","sep","reverse_eqns","M","vx","vy","vz","vadd","vsub","crossmat","invN","ninv","lengthSquared","distanceSquared","vmul","isZero","norm","Vec3_tangents_n","inorm","randVec","Vec3_tangents_randVec","almostEquals","almostZero","isAntiparallelTo","antip_neg","UNIT_X","UNIT_Y","UNIT_Z","AABB","lowerBound","upperBound","skinSize","tmp$1","aabb","overlaps","l1","l2","overlapsX","overlapsY","overlapsZ","volume","contains","getCorners","toLocalFrame","corners","transformIntoFrame_corners","corner","pointToLocal","toWorldFrame","pointToWorld","overlapsRay","dirFracX","dirFracY","dirFracZ","t4","t5","t6","ArrayCollisionMatrix","EventTarget","includes","hasAnyEventListener","toAxisAngle","targetAxis","setFromVectors","sfv_t1","sfv_t2","mult","aw","bw","inorm2","normalizeFast","toEuler","heading","attitude","bank","sqx","sqy","sqz","toQuat","omega","cosom","sinom","scale0","scale1","integrate","angularFactor","half_dt","SHAPE_TYPES","SPHERE","PLANE","BOX","COMPOUND","CONVEXPOLYHEDRON","HEIGHTFIELD","PARTICLE","CYLINDER","TRIMESH","idCounter","boundingSphereRadius","collisionResponse","collisionFilterGroup","collisionFilterMask","updateBoundingSphereRadius","calculateLocalInertia","mass","calculateWorldAABB","pos","types","Transform","worldPoint","pointToLocalFrame","localPoint","pointToWorldFrame","vectorToWorldFrame","localVector","tmpQuat$1","vectorToLocalFrame","worldVector","ConvexPolyhedron","faceNormals","computeNormals","worldVertices","worldVerticesNeedsUpdate","worldFaceNormals","worldFaceNormalsNeedsUpdate","uniqueAxes","uniqueEdges","computeEdges","edge","numVertices","found","getFaceNormal","computeNormal","clipAgainstHull","posA","quatA","hullB","posB","quatB","separatingNormal","minDist","maxDist","WorldNormal","closestFaceB","dmax","worldVertsB1","worldb","clipFaceAgainstHull","findSeparatingAxis","faceListA","faceListB","faceANormalWS3","Worldnormal1","deltaC","worldEdge0","worldEdge1","Cross","dmin","hullA","numFacesA","fi","testSepAxis","numFacesB","e0","e1","maxminA","maxminB","maxA","minA","maxB","minB","aabbmax","aabbmin","computeLocalAABB","getPlaneConstantOfFace","face_i","faceANormalWS","edge0","WorldEdge0","worldPlaneAnormal1","planeNormalWS1","worldA1","localPlaneNormal","planeNormalWS","worldVertsB2","pVtxIn","pVtxOut","closestFaceA","polyA","connectedFaces","numVerticesA","otherFace","localPlaneEq","planeEqWS","clipFaceAgainstPlane","inVertices","outVertices","planeConstant","n_dot_first","n_dot_last","numVerts","firstVertex","lastVertex","vi","newv","computeWorldVertices","verts","worldVerts","computeWorldFaceNormals","worldNormals","max2","norm2","minx","miny","minz","maxx","maxy","maxz","tempWorldVertex","getAveragePointLocal","transformAllPoints","pointIsInside","positiveResult","pointInside","vToP","r1","vToPointInside","r2","project_worldVertex","localAxis","project_localAxis","localOrigin","project_localOrigin","vs","Box","halfExtents","convexPolyhedronRepresentation","updateConvexPolyhedronRepresentation","V","calculateInertia","getSideNormals","sixTargetVectors","sides","ex","forEachWorldCorner","worldCornerTempPos","worldCornersTemp","wc","BODY_TYPES","DYNAMIC","STATIC","KINEMATIC","BODY_SLEEP_STATES","AWAKE","SLEEPY","SLEEPING","Body","world","vlambda","previousPosition","interpolatedPosition","initPosition","velocity","initVelocity","invMass","linearDamping","allowSleep","sleepState","sleepSpeedLimit","sleepTimeLimit","timeLastSleepy","wakeUpAfterNarrowphase","torque","initQuaternion","previousQuaternion","interpolatedQuaternion","initAngularVelocity","shapeOffsets","shapeOrientations","inertia","invInertia","invInertiaWorld","invMassSolve","invInertiaSolve","invInertiaWorldSolve","fixedRotation","angularDamping","linearFactor","aabbNeedsUpdate","boundingRadius","wlambda","isTrigger","updateMassProperties","wakeUp","prevState","wakeupEvent","sleep","sleepTick","speedSquared","speedLimitSquared","sleepyEvent","sleepEvent","updateSolveMassProperties","orientation","updateBoundingRadius","removeShape","updateAABB","tmpVec","tmpQuat","bodyQuat","shapeAABB","updateAABB_shapeAABB","updateInertiaWorld","I","m1","uiw_m1","m2","uiw_m2","uiw_m3","applyForce","relativePoint","rotForce","Body_applyForce_rotForce","applyLocalForce","localForce","worldForce","Body_applyLocalForce_worldForce","relativePointWorld","Body_applyLocalForce_relativePointWorld","applyTorque","applyImpulse","impulse","velo","Body_applyImpulse_velo","rotVelo","Body_applyImpulse_rotVelo","applyLocalImpulse","localImpulse","worldImpulse","Body_applyLocalImpulse_worldImpulse","Body_applyLocalImpulse_relativePoint","Body_updateMassProperties_halfExtents","fixed","getVelocityAtWorldPoint","quatNormalize","quatNormalizeFast","angularVelo","iMdt","COLLIDE_EVENT_NAME","Broadphase","useBoundingBoxes","dirty","collisionPairs","needBroadphaseCollision","bodyA","bodyB","intersectionTest","pairs1","pairs2","doBoundingBoxBroadphase","doBoundingSphereBroadphase","Broadphase_collisionPairs_r","boundingRadiusSum2","makePairsUnique","Broadphase_makePairsUnique_temp","Broadphase_makePairsUnique_p1","Broadphase_makePairsUnique_p2","id1","id2","pairIndex","setWorld","boundingSphereCheck","sa","sb","aabbQuery","GridBroadphase","aabbMin","aabbMax","nx","ny","nz","nbins","bins","binLengths","bodies","xstep","ystep","zstep","zmax","ymin","zmin","xmult","ymult","zmult","binsizeX","binsizeY","binsizeZ","binRadius","Nbins","addBoxToBins","xoff0","yoff0","zoff0","xoff1","yoff1","zoff1","xoff","yoff","zoff","idx","si","worldNormalNeedsUpdate","computeWorldNormal","worldNormal","xreset","yreset","zreset","GridBroadphase_collisionPairs_d","xi","yi","zi","binLength","bin","NaiveBroadphase","RaycastResult","rayFromWorld","rayToWorld","hitNormalWorld","hitPointWorld","hasHit","hitFaceIndex","shouldStop","abort","_Shape$types$SPHERE","_Shape$types$PLANE","_Shape$types$BOX","_Shape$types$CYLINDER","_Shape$types$CONVEXPO","_Shape$types$HEIGHTFI","_Shape$types$TRIMESH","RAY_MODES","CLOSEST","ANY","ALL","_intersectSphere","_intersectPlane","_intersectBox","_intersectConvex","_intersectHeightfield","_intersectTrimesh","checkCollisionResponse","skipBackfaces","intersectWorld","updateDirection","getAABB","tmpAABB$1","tmpArray","broadphase","intersectBodies","intersectBody","intersectBody_xi","qi","intersectBody_qi","intersectShape","distanceFromIntersection","intersectMethod","reportedShape","planeToFrom","planeToTo","n_dot_dir","planePointToFrom","dir_scaled_with_t","reportIntersection","localRay","intersectHeightfield_localRay","intersectHeightfield_index","iMinX","iMinY","iMaxX","iMaxY","getIndexOfPosition","getAabbAtIndex","getConvexTrianglePillar","pillarOffset","worldPillarOffset","pillarConvex","intersectConvexOptions","intersectionPoint","Ray_intersectSphere_intersectionPoint","Ray_intersectSphere_normal","intersectConvex_minDistNormal","intersectConvex_normal","intersectConvex_vector","intersectConvex_minDistIntersect","faceList","fromToDistance","Nfaces","faceNormal","intersectTrimesh_normal","intersectTrimesh_triangles","treeTransform","intersectTrimesh_treeTransform","localDirection","intersectTrimesh_localDirection","localFrom","intersectTrimesh_localFrom","localTo","intersectTrimesh_localTo","worldIntersectPoint","intersectTrimesh_worldIntersectPoint","intersectTrimesh_worldNormal","fromToDistanceSquared","tree","rayQuery","trianglesIndex","getVertex","squaredDistance","SAPBroadphase","checkBounds","axisIndex","biPos","bjPos","ri","rj","boundA2","boundB1","insertionSortX","insertionSortY","insertionSortZ","axisList","_addBodyHandler","_removeBodyHandler","sortList","autoDetectAxis","sumX","sumX2","sumY","sumY2","sumZ","sumZ2","centerX","centerY","centerZ","varianceX","varianceY","varianceZ","Utils","Constraint","collideConnected","wakeUpBodies","equations","eqs","JacobianElement","spatial","rotational","multiplyElement","Equation","minForce","maxForce","eps","jacobianElementA","jacobianElementB","setSpookParams","stiffness","relaxation","timeStep","computeB","GW","computeGW","Gq","computeGq","GiMf","computeGiMf","GA","GB","xj","vj","wi","wj","computeGWlambda","ti","fj","tj","invMassi","invMassj","iMfi","iMfj","invIi_vmult_taui","invIj_vmult_tauj","computeGiMGt","invIi","invIj","addToWlambda","deltalambda","addToWlambda_temp","computeC","ContactEquation","restitution","ni","rixn","ContactEquation_computeB_temp1","rjxn","ContactEquation_computeB_temp2","penetrationVec","ContactEquation_computeB_temp3","ePlusOne","getImpactVelocityAlongNormal","ContactEquation_getImpactVelocityAlongNormal_vi","ContactEquation_getImpactVelocityAlongNormal_vj","ContactEquation_getImpactVelocityAlongNormal_xi","ContactEquation_getImpactVelocityAlongNormal_xj","relVel","ContactEquation_getImpactVelocityAlongNormal_relVel","PointToPointConstraint","pivotA","pivotB","equationX","equationY","equationZ","ConeEquation","axisA","axisB","nj","nixnj","tmpVec1$2","njxni","tmpVec2$2","RotationalEquation","maxAngle","tmpVec1$1","tmpVec2$1","ConeTwistConstraint","coneEquation","twistEquation","twistAngle","twist","DistanceConstraint","eq","distanceEquation","halfDist","LockConstraint","halfWay","xA","xB","yA","yB","zA","zB","rotationalEquation1","rotationalEquation2","r3","rotationalEquation3","motorEquation","LockConstraint_update_tmpVec1","LockConstraint_update_tmpVec2","RotationalMotorEquation","targetVelocity","HingeConstraint","rotational1","rotational2","motor","enableMotor","disableMotor","setMotorSpeed","speed","setMotorMaxForce","worldAxisA","HingeConstraint_update_tmpVec1","worldAxisB","HingeConstraint_update_tmpVec2","FrictionEquation","slipForce","rixt","FrictionEquation_computeB_temp1","rjxt","FrictionEquation_computeB_temp2","ContactMaterial","friction","contactEquationStiffness","contactEquationRelaxation","frictionEquationStiffness","frictionEquationRelaxation","Spring","restLength","damping","localAnchorA","localAnchorB","worldAnchorA","setWorldAnchorA","worldAnchorB","setWorldAnchorB","getWorldAnchorA","getWorldAnchorB","applyForce_r","r_unit","applyForce_r_unit","applyForce_u","applyForce_f","applyForce_tmp","applyForce_worldAnchorA","applyForce_worldAnchorB","applyForce_ri","applyForce_rj","ri_x_f","applyForce_ri_x_f","rj_x_f","applyForce_rj_x_f","rlen","WheelInfo","chassisConnectionPointLocal","chassisConnectionPointWorld","directionLocal","directionWorld","axleLocal","axleWorld","suspensionRestLength","suspensionMaxLength","suspensionStiffness","dampingCompression","dampingRelaxation","frictionSlip","forwardAcceleration","sideAcceleration","steering","deltaRotation","rollInfluence","maxSuspensionForce","isFrontWheel","clippedInvContactDotSuspension","suspensionRelativeVelocity","suspensionForce","slipInfo","skidInfo","suspensionLength","maxSuspensionTravel","useCustomSlidingRotationalSpeed","customSlidingRotationalSpeed","sliding","engineForce","brake","sideImpulse","forwardImpulse","raycastResult","worldTransform","isInContact","updateWheel","chassis","relpos","chassis_velocity_at_contactPoint","projVel","inv","RaycastVehicle","chassisBody","wheelInfos","indexRightAxis","indexForwardAxis","indexUpAxis","constraints","preStepCallback","currentVehicleSpeedKmHour","numWheelsOnGround","addWheel","setSteeringValue","wheelIndex","wheel","applyEngineForce","setBrake","addToWorld","addBody","that","updateVehicle","getVehicleAxisWorld","numWheels","updateWheelTransform","forwardWorld","castRay","updateSuspension","updateFriction","hitNormalWorldScaledWithProj","fwd","vel","proj","proj2","chassisMass","w_it","susp_length","current_length","length_diff","projected_rel_vel","susp_damping","removeFromWorld","removeBody","rayvector","castRay_rayvector","castRay_target","updateWheelTransformWorld","raylen","oldState","rayTest","groundObject","hitDistance","minSuspensionLength","maxSuspensionLength","tmpVec4","tmpVec5","tmpVec6","steeringOrn","rotatingOrn","getWheelTransformWorld","surfNormalWS_scaled_proj","updateFriction_surfNormalWS_scaled_proj","forwardWS","updateFriction_forwardWS","axle","updateFriction_axle","axlei","wheelTrans","directions","surfNormalWS","resolveSingleBilateral","sideFrictionStiffness2","sideFactor","fwdFactor","rollingFriction","defaultRollingFrictionImpulse","maxImpulse","calcRollingFriction","maximp","maximpSide","maximpSquared","impulseSquared","rel_pos","rel_pos2","sideImp","calcRollingFriction_vel1","calcRollingFriction_vel2","calcRollingFriction_vel","body0","body1","frictionPosWorld","frictionDirectionWorld","j1","contactPosWorld","vel1","vel2","vrel","denom0","computeImpulseDenominator","denom1","jacDiagABInv","computeImpulseDenominator_r0","computeImpulseDenominator_c0","computeImpulseDenominator_vec","computeImpulseDenominator_m","r0","resolveSingleBilateral_vel1","resolveSingleBilateral_vel2","resolveSingleBilateral_vel","pos1","body2","pos2","normalLenSqr","rel_vel","contactDamping","massTerm","RigidVehicle","wheelBodies","wheelAxes","wheelForces","wheelBody","worldPosition","hingeConstraint","motorTargetVelocity","setWheelForce","applyWheelForce","bodyTorque","addConstraint","removeConstraint","getWheelSpeed","worldAxis","SPHSystem","particles","smoothingRadius","speedOfSound","viscosity","pressures","densities","neighbors","particle","getNeighbors","R2","SPHSystem_getNeighbors_dist","SPHSystem_update_dist","numNeighbors","a_pressure","SPHSystem_update_a_pressure","a_visc","SPHSystem_update_a_visc","gradW","SPHSystem_update_gradW","r_vec","SPHSystem_update_r_vec","SPHSystem_update_u","Pij","nabla","neighbor","gradw","nablaw","rVec","resultVec","Cylinder","numSegments","bottomface","topface","thetaN","Particle","tempNormal","Heightfield","updateMinValue","updateMaxValue","cacheEnabled","_cachedPillars","setHeightValueAtIndex","clearCachedConvexTrianglePillar","getRectMinMax","getTriangleAt","edgeClamp","getHeightAt_idx","lowerDist2","upperDist2","upper","getTriangle","getNormalAt","getNormalAt_a","getNormalAt_b","getNormalAt_c","getNormalAt_e0","getNormalAt_e1","getHeightAt","getHeightAt_a","getHeightAt_b","getHeightAt_c","barycentricWeights","getHeightAt_weights","getCacheConvexTrianglePillarKey","getUpperTriangle","getCachedConvexTrianglePillar","setCachedConvexTrianglePillar","convex","offsetResult","setHeightsFromImage","OctreeNode","insert","elementData","nodeData","maxDepth","subdivided","halfDiagonal","tmpAABB","removeEmptyNodes","Octree","Trimesh","updateEdges","updateNormals","updateTree","triangleAABB","i3","_getUnscaledVertex","getTrianglesInAABB","unscaledAABB","isx","isy","isz","setScale","wasUniform","isUniform","computeNormals_n","getEdgeVertex","edgeIndex","firstOrSecond","vertexStore","vertexIndex","getEdgeVector","vectorStore","getEdgeVector_va","getEdgeVector_vb","out","getWorldVertex","getTriangleVertices","cli_aabb","computeLocalAABB_worldVert","calculateWorldAABB_frame","calculateWorldAABB_aabb","createTorus","Solver","addEquation","removeEquation","removeAllEquations","GSSolver","iterations","tolerance","maxIter","tolSquared","Neq","Nbodies","invC","deltalambdaTot","GWlambda","lambdaj","invCs","GSSolver_solve_invCs","Bs","GSSolver_solve_Bs","GSSolver_solve_lambda","invDt","SplitSolver","subsolver","nodePool","createNode","visited","SplitSolver_solve_nodes","SplitSolver_solve_eqs","dummyWorld","SplitSolver_solve_dummyWorld","getUnvisitedNode","bfs","visitFunc","Neqs","sortById","Nnodes","bds","Pool","release","Nargs","constructObject","resize","Vec3Pool","COLLISION_TYPES","sphereSphere","spherePlane","boxBox","sphereBox","planeBox","convexConvex","sphereConvex","planeConvex","boxConvex","sphereHeightfield","boxHeightfield","convexHeightfield","sphereParticle","planeParticle","boxParticle","convexParticle","cylinderCylinder","sphereCylinder","planeCylinder","boxCylinder","convexCylinder","heightfieldCylinder","particleCylinder","sphereTrimesh","planeTrimesh","Narrowphase","contactPointPool","frictionEquationPool","frictionResult","v3pool","currentContactMaterial","defaultContactMaterial","enableFrictionReduction","createContactEquation","sj","overrideShapeA","overrideShapeB","cm","matA","matB","createFrictionEquationsFromContact","contactEquation","outArray","shapeA","shapeB","mug","frictionGravity","gravity","reducedMass","pool","createFrictionFromAverage","numContacts","f1","f2","averageNormal","averageContactPointA","averageContactPointB","invNumContacts","getContacts","oldcontacts","frictionPool","tmpQuat1","qj","tmpQuat2","tmpVec1","tmpVec2","bodyContactMaterial","getContactMaterial","justTest","shapeContactMaterial","resolverIndex","resolver","retval","shapeOverlapKeeper","bodyOverlapKeeper","rsi","rsj","contactEq","point_on_plane_to_sphere","plane_to_sphere_ortho","sphereBox_sides","box_to_sphere","R","side_ns","sphereBox_side_ns","side_ns1","sphereBox_side_ns1","side_ns2","sphereBox_side_ns2","side_h","side_penetrations","side_dot1","side_dot2","side_distance","nsides","ns","sphereBox_ns","ns1","sphereBox_ns1","ns2","sphereBox_ns2","h1","h2","dot1","dot2","sphere_to_corner","sphereBox_sphere_to_corner","edgeTangent","edgeCenter","orthogonal","Nsides","orthonorm","tdist","ndist","sepAxis","convexConvex_sepAxis","convexConvex_q","convex_to_sphere","worldCorner","sphereConvex_worldCorner","sphereConvex_sphereToCorner","nfaces","sphereConvex_worldNormal","sphereConvex_worldPoint","worldSpherePointClosestToPlane","sphereConvex_worldSpherePointClosestToPlane","sphereConvex_penetrationVec","penetration","worldPointToSphere","sphereConvex_sphereToWorldPoint","faceVerts","Nverts","worldVertex","pointInPolygon","penetrationVec2","penetrationSpherePoint","Nfaceverts","sphereConvex_edge","edgeUnit","sphereConvex_edgeUnit","v1_to_xi","xi_to_p","planeShape","convexShape","planePosition","convexPosition","planeQuat","convexQuat","planeBody","convexBody","planeConvex_v","planeConvex_normal","planeConvex_relpos","projected","planeConvex_projected","sphereShape","hfShape","spherePos","hfPos","sphereQuat","hfQuat","sphereBody","hfBody","sphereHeightfield_tmp2","localSpherePos","sphereHeightfield_tmp1","minMax","numContactsBefore","intersecting","convexPos","convexHeightfield_tmp2","convexHeightfield_faceList","localConvexPos","convexHeightfield_tmp1","particleSphere_normal","particlePlane_normal","particlePlane_relpos","particlePlane_projected","penetratedFaceIndex","penetratedFaceNormal","convexParticle_penetratedFaceNormal","worldPenetrationVec","convexParticle_worldPenetrationVec","minPenetration","local","convexParticle_local","cqj","convexParticle_vertexToParticle","trimeshShape","trimeshPos","trimeshQuat","trimeshBody","edgeVertexA","sphereTrimesh_edgeVertexA","edgeVertexB","sphereTrimesh_edgeVertexB","edgeVector","sphereTrimesh_edgeVector","edgeVectorUnit","sphereTrimesh_edgeVectorUnit","sphereTrimesh_localSpherePos","sphereTrimesh_tmp","localSphereAABB","sphereTrimesh_localSphereAABB","sphereTrimesh_v2","sphereTrimesh_relpos","sphereTrimesh_triangles","sphereRadius","sphereTrimesh_v","radiusSquared","positionAlongEdgeB","positionAlongEdgeA","sphereTrimesh_va","sphereTrimesh_vb","sphereTrimesh_vc","sphereTrimesh_normal","planePos","planeTrimesh_normal","planeTrimesh_relpos","planeTrimesh_projected","pointInPolygon_edge","pointInPolygon_edge_x_normal","pointInPolygon_vtp","edge_x_normal","vertex_to_p","OverlapKeeper","previous","getKey","tick","getDiff","additions","removals","al","bl","unpackAndPush","TupleDictionary","World","contacts","frictionEquations","quatNormalizeSkip","stepnumber","default_dt","nextId","hasActiveBodies","solver","narrowphase","collisionMatrix","collisionMatrixPrevious","contactmaterials","contactMaterialTable","defaultMaterial","doProfiling","profile","makeContactConstraints","accumulator","subsystems","addBodyEvent","removeBodyEvent","idToBodyMap","collisionMatrixTick","raycastClosest","raycastAll","tmpRay","raycastAny","getBodyById","getShapeById","addContactMaterial","cmat","removeContactMaterial","fixedStep","maxSubSteps","lastCallTime","timeSinceLastCalled","internalStep","substeps","World_step_p1","World_step_p2","profilingStart","World_step_frictionEquationPool","gx","gy","gz","Nsubsystems","Nconstraints","World_step_oldContacts","NoldContacts","NoldFrictionEquations","ncontacts","speedSquaredB","speedLimitSquaredB","speedSquaredA","speedLimitSquaredA","World_step_collideEvent","contact","emitContactEvents","ld","av","World_step_preStepEvent","clearForces","World_step_postStepEvent","hasBeginContact","hasEndContact","beginContactEvent","endContactEvent","hasBeginShapeContact","hasEndShapeContact","beginShapeContactEvent","endShapeContactEvent","globalThis","nowOffset","timing","navigationStart","THREE","_interopRequireWildcard","_OrbitControls","dat","CANNON","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","__esModule","default","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","cubeArr","cubeMaterial","createCube","cubeGeometry","sphereMaterial","cubeShape","cubeBody","sound","hitSound","HitEvent","impactStrength","sphereGeometry","floorShape","floorBody","floorMaterial","ambientLight","directionalLight","controls","axesHelper","clock","item","devicePixelRatio"],"mappings":"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OhBh5G,CAAC,MtBfHg5G,GAAc94F,KAAAA,CAAMqpK,OAAN,CAAcC,cAAd,CAA6B16I,QAA7B,CAAA,CAApB;ADQ8B,CAAC,CwBkB/B,IDVI9uC,AtBdEie,CsBcD,AtBdCA,GsBcEuhL,AtBdEzuL,IsBcE,AtBdFA,CAAKoF,KAAL,CAAW+J,KAAAA,CAAMjC,CAAjB,CAAV;ADOF,EwBkBE,EDVE,AvBREy2G,ECNEt3G,CAAAA,CDME,ECNErM,CDMC,GCNDA,CDMKgoB,ACNA5iB,KAAL,CAAW+J,IDMH,CAAC,ACNEA,CDMD,ACNO9C,CAAjB,CAAV;ADOF,EwBkBE,EDTE,AvBTEqjK,ECNE/rK,CAAAA,GDMI,ACNA3D,CsBeA,EvBTG,CuBSD/Q,AtBfF+Q,CsBeI,AtBfCoF,EDMEu0C,EuBSAjzB,CAAE,AtBfT,CAAWvX,CsBeD,IAAI,AtBfHA,CAAMxL,CAAjB,CDMY,ACNtB,CsBe4B,AvBTL,CuBSMuK,AvBTL,MuBSW;AvBRrC,EuBSE,ACSA,ExBlBIyhK,ECNEjsK,CAAAA,GAAIyL,IDMI,CCNJA,CAAMzL,CDMC1D,ACNjB,IDMqB,CAAC8D,GAAG,CAAE,EAAE,GAAGuB,gBAAS,CAACtF,OAAQ,CAAC;AAAC,EuBUpD,ACSA,ExBjBI6vK,ECPEtjK,CAAAA,GAAItM,IAAAA,CAAKoF,EDOE,GCPP,CAAW+J,KAAAA,CAAM7C,CAAjB,CAAV,cDOiByG,gBAAA;AuBSnB,EvBTmBC,AwBkBjB6sL,IvBxBMl9L,CAAAA,AuBwBD,CAACi9M,EvBxBIzwM,CDMO,CAAAygK,GCNPzgK,AuBwBG,CvBxBGxM,AuBwBF2iO,CvBxBJ,CAAQ/gM,MuBwBI,CxBlBL,ACNP,AuBwBa,CvBxBG,CDMTxxB,ACNP,CAAV,eDMiB;AuBUnB,EvBVmB,IAAAE,ACLX/M,CAAAA,GAAIiJ,EDKO,GAAA+D,ACLP/D,CAAMjJ,CAAN,CAAQq+B,OAAR,CAAgB,CDKT,ACLP,CDKOqrI,ACLjB,aDKiB,MD1BnB,qJAAAlnL,mBAAA,YAAAA,oBAAA,WAAAC,OAAA,SAAAA,OAAA,OAAAC,EAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,MAAA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AAlC,GAAwCD,CAAxC,GAA4C,GAAnD;AF7BJ,GE4BS,CuByBL,EDPEgjB,CAAC,CCOCg/M,CvBvBC,CsBgBCz2O,CAAC,EtBhBEg5G,SuBuBS,EvBvBTA,CuBuBY,CAAC,EAAE,CvBvBC,KAApB,EAA2B;AF7BpC,IAAMt1G,ACmCJ,EuBWI1D,ACOAu2O,CDPC,GAAG/2C,CtBhBC,CF9BG,EwB8CA,ACOA,CzBrDG,AE8BN,AuBuBIvjC,GvBvBG/7I,EF9BI,GE8BJA,CAAMg0B,EuBuBE,CvBvBR,CAAUpF,CuBuBC,CAAC,CAAC,CAAC,IvBvBd,CAAmB,EAAnB,CAAd;AF9BmBp1C,GE6Bd,CsBkBL,AvBXF0nH,EwBkBIm1H,CzBtDiB,CAAA7yO,CCoCrB,ACLO,CDKFf,GCLMq2G,CuBuBC,CAACmqF,CzBtDQ,ACoCV,GDpCUz/L,ACoCP,EwBkBK,ExBlBD0sB,CCLP4oF,AuBuBWy9H,GzBtDD,EE+BM,QDKF,CAAC,AwBkBU,CxBlBT,CCLpB,CuBuBgC,CvBvBC,CuBuBC,GAAG,CAAC,GAAG,CAAC,GAAGA,cAAc,GAAG,EAAE;AzBpDzE,IwB+CI,AxB/CE9yO,EyBqDA4yO,EDNEn8O,CxB/CG,EE8BA,CF9BG,CwB+CD,CtBjBF,AuBuBG,CDNC,ACMAokK,EvBvBEvgJ,CAAN,CuBuBQ,CAAC,CvBvBC,AuBuBA,GvBvBV,GAAgBb,CAAhB,GAAoB,GAApB,GAA0B1I,CAA1B,GAA8B,GAArC;EF9BY9Q,CE6BP,CDOP,AwBkBE,EDNE,AxBhDc,EAAE,CAAC,AE+Bd,CsBiBC,CAACqb,EtBjBE+5F,IsBiBI,CAAE,GAAEh5G,CAAE,EtBjBVg5G,EsBiBavhF,CAAE,EAAC,AtBjBA,CsBiBC,GAAG,IAAI,ItBjB5B,EAAkC;EF/BlB5zB,AyBuDvB,EDNE,AvBZFu9G,CuBYG,GxBjD0B,CCqC7B,CDrC+B,ACqC1By/D,CuBYI,AxBjDuB,AEgCvB,GAAA,GAAM5iK,CAAN,GDKO,ACLG,GDKA,ACLV,CDKW,ECLKb,CAAhB,GAAoB,GAApB,GAA0B1I,CAA1B,GAA8B,GAA9B,GAAoCD,CAApC,GAAwC,GAA/C;EFhCgC3Q,AyBwDlC,CvBzBO,CDOPs9G,EuBYI,CxBlDmC,EAAE,ACsCzC,ACLO,CFjCmC,ACsCrC2/C,GuBYM,AtBjBA/nD,IsBiBI,CAAC/5F,GvBZA,GuBYM,AvBZH0U,ACLRqlF,CsBiBa,GAAEh5G,CAAE,AtBjBD,GDKA,CuBYIy3B,CAAE,EAAC,CAAC,CtBjB5B,EAA+B;EFjCM1zB,AyByD5CsyO,EDNE,IxBnDgD,EAAE,AyByD5C,CzBzD6C,AEkC5C,AuBuBAvmO,KvBvBA,GAAQmO,CAAR,GAAY,IuBuBI,CvBvBhB,AuBuBiB,GvBvBGb,CAApB,GAAwB,EuBuBE,EAAEo5N,CvBvB5B,GAAgC9hO,CAAhC,GAAoC,AuBuBA,CAAC,EvBvB5C;EsBkBF,AxBpDuD1Q,AyB0DvD+xO,CvBzBO,CDOP,GDxC4D,EAAE,AEmCvD,AuBuBA,CzB1DwD,AyB0DvDv2O,GvBvBGw5G,CuBuBC,CAAC,SvBvBFA,KAAgB,UAApB,EAAgC;EsBkBvC,AxBrDiE/0G,ECyCjEm9G,AwBkBEh3D,CzB3DkE,EAAE,CyB2DhE,CxBlBN,CAAK02H,AwBkBGnhH,CvBvBC,GuBuBG,EvBvBH,CDKG,ECLK1hD,CDKF,ACLN,CDKO,ECLK,KAAZ,GAAoBb,CAApB,GAAwB,KAAxB,GAAgC1I,CAAhC,GAAoC,KAApC,GAA4CD,CAA5C,GAAgD,GAAvD;AsBkBJ,AxBtD0E,CAAC,EEmClE,CDOP2sG,AwBkBE+oC,IAAI,CxBlBN,ACLO,CDKF42B,AwBkBGs1D,GvBvBGr9H,IDKC,GAAGrlF,ICLJqlF,IDKY,CCLI,SAApB,EAA+B;AsBkBxC,AxBvD4Et/G,EyB6D1E,CAAC,CAAC,GzB7DwE,CAAAiK,GEsCjE,EFtCiE,GAAAA,AEsCjE,GAAQ0Z,CAAR,CFtCiE,EEsCrD,KAAZ,GAAoB3J,CAApB,GAAwB,KAAxB,GAAgCuD,CAAhC,GAAoC,GAA3C;AFrCJ,AyB6DA,GvBzBS,CFpCH/S,AC2CJ,KD3CS,AEsCF,GFtCK,CEsCD80G,WAAAA,KAAgB,UAApB,EAAgC;AuByBzCm/C,EDNEx4J,AxBzDcoE,EC4Cd,EwBmBI,CDNCpE,ACMAmQ,CDNA,AxBzDe,EwByDZ,AxBzDc,CAAC,AEuCd,KAAA,GAAQuN,CAAR,GAAY,AuBwBA,CAAC,IvBxBb,GAAoB3J,AuBwBA,CvBxBpB,CuBwBsBuiO,EvBxBE,KAAxB,GAAgCh/N,AuBwBA,CvBxBhC,AuBwBiC,GvBxBG,KAApC,GAA4CxC,CAA5C,GAAgD,GAAvD;EFvCuBxQ,EwB0DvB,AvBbFm9G,CD7C4B,EAAE,CwB0DxB,AxB1DyB,CwB0DxBniG,AvBbP,CAAK+hK,KuBaQ,GAAG,CAAC,CAAC,GvBbA,GAAG,CAAC,CAAC,CAAC;AwBoB1B,EDNE,AxB3DiC78K,EC8CjCi9G,KAAA,ACJO,CDIF6/D,CD9CqC,EAAE,CAAC,SC8C3B,ECJlB,CDIqBlwK,IAAI,CAACC,EAAE,CAAC,CAAC;AwBoBhC,EDNE,AxB5D+C5M,EyBkE3C8xO,UzBlEuD,EAAE,AyBkE7C,GAAG,IAAIjB,KAAK,CAACnzL,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;ADLnD,AxB7DiE,AGKjE,AsB8DA,CzBnEkE,GCgDhE,AE3CI4nI,AsB8DAgtD,QtB9DAhtD,GAAWnmK,GsB8DG,EtB9DHA,CAAM1pB,AsB8DA,IAAIo7O,KtB9DV,AsB8De,CtB9DCp4O,AsB8DA83I,OtB9DjC,OsB8D+C,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;ADL1D,AxB9DmEj7I,AGMnE,AsB8DA,IxBnBE,AE3CIiwL,AsB8DAwsD,GzBpE6D,CAAAjyO,KAAA,AGM7DylL,GHN6DzlL,AGMjDqf,EsB8DE,GzBpE+C,AGMjDA,AsB8DK,CtB9DC1pB,GsB8DGo7O,KAAK,CtB9Dd,AsB8Del/L,CtB9DCz0C,KAAlC,WsB8DkD,CAAC,CAAC;AzBnEpD,AGaA,AsBuDA,IzBpEM+C,ACiDJ+8G,AEpCIwoE,KFoCJ,CAAK1I,AEpCD0I,GAAS,GHbG,GAAG,CAAC,KCiDA,GAAG,CAAEj2J,QAAQ,CAAC,CAAC;ADjDdj6B,AyBqEvB,EDLE+lM,EvBdAr+E,AwBmBIprF,GzBrEiB,CAAA3xB,CCkDrB,AEpCO,CFoCF88K,AEpCE,AsBuDG,CtBxDG,EsBwDA,EDLAse,CAAC3tL,CAAC,ACKEmjO,EDLA,CAAC,AxBhEG,EyBqEC,CzBrED5wO,AyBqEEk8C,ExBnBH,EwBmBO,CxBnBJ5sB,AwBmBKuiN,OzBrEP,CCkDU,CAAC,CAAC,EwBmBO,EAAEC,cAAc,CAAC;ADH3D,AxBjEA,AyBqEAngN,IzBrEM1xB,EyBqEA,CAAC6/B,GtBtDG,MHfQ,CyBqED,EzBrEI,AGeX,CHfY,AyBqEF,IAAI,CtBtDd,AsBsDe,CtBtDNxhC,AsBsDO,MtBtDhB,EAAiB;AHfJjJ,AyBsEvBsvD,IxBnBE,CwBmBG,CAAC9xC,CzBtEiB,CAAA5S,CGgBdulL,AsBsDA,CAAC7zJ,GtBtDN,CAAU2zJ,EsBsDE,CAAC,GzBtEM,GAAArlL,AGgBTqlL,CAAUztL,IAAV,CAAe0pC,MHhBN,GGgBT,EAA0B,CAA1B,CAAV,EAAwC,UAAS3rC,GAAT,EAAc;AqBmD1D,AxBlEA,AyBuEA,IzBvEMsK,ACmDJ,AwBoBI8O,KAAK,CtBvDCvS,EsBuDE,EtBvDFA,EsBuDMm0O,CzBvEC,AGgBA,GHhBG,CAAC,AGgBJ,AsBuDI,CtBvDCnrD,AsBuDAvpI,IAAI,CAC1B,GtBxDiB,CAActmD,AsBwD3Bg7O,GtBxDa,CAAA,CsBwDR,CAACtlL,CtBxD4B/1D,MAAAA,CAAOkH,IAAP,CAAY7G,AsBwD3B,CAAC,EtBxDc,AsBwDZ,CtBxDT,CsBwDW,EtBxD6B,AsBwD3B,CAAC,CtBxD3B,CsByDJ,IAAIg7O,KAAK,CAAC7qJ,oBAAoB,CAAC;ADNjC,AxBnEwB1wF,EyB0EpB4yC,ExBtBF80E,EwBsBM,CzB1EgB,CAAA78G,AyB0Ed0wO,CxBtBR,CAAK7zD,CEnCIvkL,EsByDI,CAACkI,ItBzDV,CAAa,EHjBK,ECoDJ,CDpDIR,ECoDD,GEnCKrK,EFmCA,CEnCT,EAAc,GHjBT;AwBoExB,AxBnEA,AyB0EE,CAAC,CACH,CAAC,CzB3EKsK,ACoDJ48G,KAAA,CAAKigE,EEnCK,CAAC,IAAA,CAAK0I,GHjBK,ECoDH,CDpDM,CAAC,CCoDJ,GEnCV,CFmCc,AEnCG9vL,GAAAA,CAAIC,GAAJ,CAAjB,CAAL,EAAiC;AqBmDzC,AxBpE4BR,AyB4E5B2Z,KAAK,CAACoiB,CzB5EsB,CAAAjxB,MyB4Ed,CAAC+Q,EtB1DErb,CsB0DC,CAAC,CtB1DT,AsB0DU,CtB1DV,CsB0DY,CAAC,CtB1DCD,AsB0DA,CzB5EI,CyB4EF,CtB1DFA,AsB0DG,CzB5ECuK,AGkBAtK,AsB0DA,GtB1DJ,CAAd,aHlBkB;AwBiE5BR,AxBhEA,AyB4EA2Z,IzB5EM5O,ACqDJ,CwBuBG,CAAC8Z,CDZN,CAAA+gL,MCYc,CAACrtL,CAAC,EzB5EI,CyB4ED,CAAClB,CzB5EG,CAAC,EyB4EA,CAACC,EAAE,EDZ3B,CCY8B,CAAC,CDZ/BsuL,qBAAA;AAIA,AxBpEyB5lM,AyB6EzB2Z,IxBvBE,CwBuBG,CDTCqsL,ACSAt7J,CzB7EmB,AGeN,CHfM3/B,AGmBjBu5G,EqBiDE,CAAC,CrBrDQ,CAIN,IAJM,CAAb,CAAA,AsB8Da,GzB7EM,AyB6EH,GzB7EGv5G,CyB6EC,CAAC,CAAC,WzB7EH;AACzB,AyB6EAukD,EDTE,ExBpEItkD,ACsDJ08G,CE1CE,AsBiEC,CAAClqG,CtB1DC,EFmCL,AwBuBO,CxBvBFoqK,AwBuBGjuK,CtBjEN,CAAA,GsBiEW,CzB7EG,AyB6EF,GzB7EK,CAAC,ACsDL,GAAG,IAAI;AuBexB,AxBrEuB3Z,ICuDrB0nH,GDvDqB,CAAA18G,CCuDrB,CAAK68K,CElCI5+K,MAAP,EFkCY,CDvDO,ECuDJ,CDvDI+B,ECuDD,UDvDC;AwBsEvB,AxBrEA,AyB8EA,GtBvEe,CHPTC,gBAAgB,GAAG,CAAC;AAACjL,AyB+E3B,IxBvBE,AwBuBIk3M,GzB/EqB,CAAAjsM,CyB+EhB,GtBxDC,AsBwDE,IAAI0wO,KtBxDN,CsBwDY,CAAChF,CzB/EE,GAAA1rO,CyB+EG,CtBxDlB,AsBwDmB,CtBxDVhC,AsBwDW,MtBxDpB,EAAiB,KHvBF;AAC3B,AyB+EAiuM,EDTE,ExBtEIhsM,ACwDJw8G,CwBuBG,CAACojH,GxBvBJ,AEjCO36C,CFiCFrI,GEjCH,AsBwDS,CtBxDCmI,AsBwDAp0K,EzB/EI,CyB+ED,CAAC,CzB/EG,AyB+EF,CzB/EG,CyB+ED,CxBvBF,AwBuBG,CtBxDRo0K,CAAUztL,CFiCF,AwBuBG,EAAE,CtBxDb,AsBwDc,CxBvBF,AEjCG0pC,AsBwDA,CAAC,CAAC,OtBxDjB,EAA0B,CAA1B,CAAV,EAAwC,UAAS3rC,GAAT,EAAc;AqBgD1D,AxBvEuBP,AyBgFvB,IxBvBE0nH,GDzDqB,CAAAx8G,CCyDrB,CAAK68K,AEjCK3gL,IAAAA,GAAO,GHxBI,CCyDL,AEjCC,CAAKgpL,CHxBDllL,CCyDF,GAAG,GEjCL,CAAc3K,GAAd,CHxBI,AGwBJ,GAAqBL,MAAAA,CAAOkH,IAAP,CAAY7G,GAAZ,CAArB,GAAwC,EAArD;AqBgDN,AxBvEA,AyBgFA,IzBhFM4K,OGwBKhI,EHxBI,GAAG,CAAC,CGwBb,CAAa,UAAS3C,GAAT,EAAc;AHxBbR,AyBiFpB,EDTE2G,EvBdA,GD1DkB,CAAAwE,IGyBR,CqB+CCxE,CAAC0X,ErB/CF,CHzBQ,AGyBHgyK,GHzBGllL,EwBwEE,EAAE,IrB/CZ,CHzBQ,AGyBSlC,MAAAA,CAAOzI,GAAP,CAAjB,CAAJ,EAAmC;AHxB3C,AyBiFA,IDTI,AxBxEE4K,AC0DJs8G,IuBcMrpG,CvBdN,CAAK2pK,ED1DO,GAAG,CwBwED,AxBxEE,CGyBDxnL,EFiCD,CEjCN,CqB+CW,ArB/CX,CFiCS,EEjCKD,EqB+CE,AvBdH,CuBcI,ArB/CHA,CAAIC,CqB+CC,ErB/CL,CAAd;AHzBSR,IC2DjB0nH,EuBcIrpG,CxBzEa,CAAAjT,CC2DjB,CAAK68K,IuBcO,ExBzEK,CwByEF,CAAC,AvBdH,CuBcI,AxBzEA78K,EwByEE,AvBdH,CuBcI,EAAE,AvBdH,CuBcI,EAAE,AxBzER,CwByES,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AxBxE5C,AyBkFA,IDTI,AxBzEEC,AC2DJq8G,GErCiB,CAIXpD,CFiCN,CAAK4jE,EErCY,CAIN,CH1BG,GAAG,AGsBA,CHtBC,AGsBd,CAAA,SFqCmB,GAAG,IAAI,CAAC,CAAC;AD3DbloL,AyBmFrB,IDRI,AvBfF0nH,CExCE,EHpBiB,AG2Bd,CqBgDC,AxB3Ear8G,CwB2EZgT,AvBfP,CAAK8pK,CExCH,CAAA,KqBuDa,CxB3EI,EwB2ED9pK,CxB3EChT,AC4DH,GAAG,GAAG,CuBeI,AvBfH,CAAC,ED5DL;AACrB,AyBmFA,EDRE,ExB3EIC,AC4DJo8G,KAAA,CAAK0gE,CEhCIn/K,MAAP,IH5BmB,CC4DJ,ED5DO,CAAC,AC4DL,CD5DM,CAAC,GC4DF;AD5DEjJ,AyBoF7B,EDRE,CrB1Ea,IHFc,CAAAsL,iBAAA,GAAAA,iBAAA;AwB6E7B,AxB5EA,AyBoFA,IzBpFMC,AC6DJ,OE/BS,GH9BK,GAAG,CAAC,EG8BT,OAAA,CAAA,EAAW;AqB+CtB,AxB7EqBvL,AyBqFrB,IxBvBE,GD9DmB,CAAAuL,AG+BX+kL,MAAAA,GAASL,CH/BE,GAAA1kL,KG+BF0kL,CAAUztL,IH/BR,AG+BF,CAAe0pC,SAAf,CAAf;AqB+CJ,AxB7EA,AyBqFA,IzBrFM1gC,AC8DJk8G,KAAA,CAAK2gE,CE/BI,OH/BS,EC8DH,CD9DM,CAAC,CC8DJ,AE/BE,KF+BG;AuBgBzB,AxB9EyBroL,AyBsFzB,IxBvBE0nH,GD/DuB,CAAAl8G,CC+DvB,CAAK88K,AE/BGiI,IAAAA,GAAON,KHhCQ,GAAAzkL,AC+DH,CE/BLykL,CAAUztL,CF+BF,GAAG,AE/BX,CF+BY,AE/BG0pC,CF+BF,MD/DL,EGgCR,CAAX;AH/BN,AyBsFA,IzBtFMzgC,OGgCK,IAAInF,CAAAA,GAAIgqL,CHhCG,GAAG,CAAC,CGgCPA,CAAOjqL,MAAP,GAAgB,CAA7B,EAAgCC,CAAAA,IAAK,CAArC,EAAwCA,CAAAA,EAAxC,EAA6C;AHhCxBtG,EwBgFzByhB,EvBhBA,GDhEyB,CAAAhW,EwBgFjBgW,CAAA,EAAG,ErB/CE,CAAC6uK,MAAAA,CAAOhqL,CHjCI,AGiCX,CAAA,CAAUshG,CHjCCn8F,IGiCX,CAAgB,IAAhB,EAAsB8kL,IAAtB,CHjCW,AGiCZ,CAAP;AHhCR,AyBuFA,IDPI,AxBhFE7kL,ACgEJg8G,KAAA,CuBgBQtpG,AvBhBHhX,CuBgBI,GAAG,AvBhBH,GAAG,CuBgBI,CAACiX,IxBhFM,GAAG,CwBgFD,AxBhFE;AAACre,AyBwF9B,IDPIoe,CAAC,CAAC,AvBjBUlU,CuBiBT,AxBjFuB,CwBiFtB,AxBjFsBwB,ECgEV,CuBiBT,CAAC,AvBjBU,CE9BT6kL,IAAAA,CAAK,CAAL,CAAP,GF8B2B,IDhEH,GAAA7kL,mBAAA;AAC9B,AyBwFA,IDPI0S,AxBjFEzS,CwBiFD,ArBrDD,CqBqDE,AvBlB6B48K,CuBkB5B,CAAC,AvBlB6B,EAAE,CuBkB5B,CAAC,OvBlBoC,CD/D1B,GAAG,CAAC;AAACvoL,AyByF3B,GtB5Fe,CqBqFXoe,CAAC,CAAC,AvBnB4ChU,CuBmB3C,AxBlFoB,CwBkFnB,AxBlFmBuB,GwBkFhB,AvBnB4C,CuBmB3C,CvBnB6C,WD/D9B,CC+D0C,ED/D1CA,gBAAA;AAC3B,IwBkFIyS,AxBlFExS,CwBkFD,CAAC,AvBpBiE48K,CuBoBhE,CAAC,ArB9CA,GqB8CG,CAAC,AvBpBiE,EAAE,GE1BvE,CHpCY,GAAG,AGoCf,CHpCgB,AGoCPjoL,GAAT,EAAciwL,GAAd,EAAmB7nI,KAAnB,EAA0B;AHpCT3oD,AyB0FzB,IDPIoe,AvBrBuF,CuBqBtF,AvBrBuF,CuBqBtF,CAAC,AxBnFkB,CwBmFjB,AxBnFiBxS,AGqCjB,CAACrL,EqB8CE,CAAC,ArB9CR,EAAU,QHrCW,GAAAqL,cAAA;AACzB,AyB0FA,IDPIwS,AxBnFEvS,CwBmFD,CAAC,CAAC,CAAC,GAAG,CAAC,GxBnFK,GAAG,GAAG;AAAC7L,AyB2FxB,IDPIoe,AvBrBF,CuBqBG,CAAC,CAAC,AxBpFiB,CwBoFhB,AxBpFgBvS,GwBoFb,CAAC,OxBpFY,GAAAA,WAAA;AACxB,AyB2FA,IDPIuS,AxBpFEtS,AC+DJ47G,CuBqBG,CAAC,CAAC,CAAC,ArB7CAsoE,CFwBN,CAAKvH,CuBqBI,CAAC,IrB7CJuH,IHvCc,AGuCFzvL,EFwBD,CD/DM,AGuCLA,CAAI4C,CFwBF,CD/DM,KGuCpB,IAA2B5C,GAAAA,CAAI4C,OAAJ,KAAgB6sL,QAA/C,EAAyD;AHvChChwL,AyB4F7B,IDPIoe,CAAC,CAAC,AvBtBkBlU,CuBsBjB,AxBrFsB,CwBqFrB,AxBrFqB4B,EC+DD,AEvBlB3I,CqB6CC,CAAC,AvBtBkB8G,KEvBxB,CAAYumL,GAAZ,EAAiB7nI,CHxCM,AC+DM,CAACt+C,ED/DPyB,CGwCvB,CAAA,EFuBoC,YD/Db;AAC7B,AyB4FA,EDPE,ExBrFIC,CGsCF,CFwBwC5B,KEtBjC,CFsBuC,EAAEF,CEtBrC1J,GAAAA,CAAI8F,MAAJ,CFsB0C,CD9D5B,AC8D6BiE,GD9D1B,AGwCF/J,EFsBiC,CD9D5B,AGwCLA,CAAI8F,MAAJ,GAAa,CAAhC,EAAmC;AHxCVrG,AyB6FpC,EDPE,IvBxB+DoK,CD9D7B,CAAA2B,EGyC1BvL,CFqB4D,EAAEyJ,AErB9DzJ,GAAAA,KAAAA,CAAJ,GFqBuE,CAAC+J,KD9D1C,GAAAwB,uBAAA;AwBuFpC,AxBtFA,AyB6FA,IzB7FMC,AC6D4E,CAAC,KEpBzEiL,CAAAA,GAAAA,CHzCO,GAAG,CGyCVA,CAAJ,CHzCiB;AwBuFvB,AxBvFwBjX,AyB8FxB,OzB9FwB,CAAAgM,GG0CbxL,GAAAA,GAAM,CAAN,CH1Ca,CG0CJyW,CAAAA,CH1CIjL,EG0CAzL,GAAAA,CAAI8F,KH1CJ,CG0ClB,EAA8B7F,GAAAA,GAAMyW,CAApC,EAAuCzW,GAAAA,EAAvC,EAA8C;AHzCpD,IAAMyL,AC8DJ,QEpBUzL,GH1CK,AG0CLA,GH1CQ,CG0CDD,EH1CI,CG0CX,IAAciwL,GAAAA,CAAIhuL,IAAJ,CAASmmD,KAAT,EAAgBpoD,GAAAA,CAAIC,GAAJ,CAAhB,EAA0BA,GAA1B,CAAA,KAAmC,IAAA,CAAKiwL,KAA1D,EAAiE;AH1CjDzwL,AyB+FxB,EDNEimM,EvB1BAv+E,GD/DsB,CAAAz7G,CwByFfg6L,AvB1BP,CuB0BO,AvB1BFvd,EuB0BK,KvB1BE,ED/DU,CC+DP,ED/DOz8K,WAAA;AACxB,AyB+FA,IDNI,AxBzFEC,EC8Daq5F,GAAG,CuB2BZnnF,CAAC,AvB3Ba5T,GuB2BV,AxBzFE,GAAG,CwByFD,CAAC6T,CxBzFG,GC8DO,CAAChU,GuB2BH,GvB3BS;AD9DbrK,AyBgGvB,IDNIoe,CAAC,CAAC,AvB5BgCuqK,CuB4B/B,AxB1FgB,CwB0Ff,AxB1Fez8K,CC8DkB,EuB4B9B,AvB5BgC1B,CuB4B/B,MxB1FW,GAAA0B,EC8DyB,CAACzB,OD9D1B;AACvB,IwB0FI2T,AxB1FEjS,AC6DqD,CuB6BtD,AvB7BuD,AEzBjD,CqBsDL,CAAC,CAAC,GAAG,ArB9CA,CqB8CC,CxB1FG,GAAG,GAAG;AAACnM,AyBiGtB,IDNIoe,CAAC,CAAC,CAAC,AxB3Fe,CwB2Fd,AxB3FcjS,GwB2FX,ArB9CA,CqB8CC,GrB9CK3L,EH7CK,EG6ChB,CH7CgB2L,GG6CE5L,GAAlB,EAAuB,CH7CP;AACtB,AyBiGA,IDNI6d,AxB3FEhS,AC8DJ,CuB6BG,CAAC,CAAC,CAAC,GAAG,CAAC,ArB9CAokL,GAAAA,CAAIhuL,EH7CI,EG6CR,CH7CW,AG6CFmmD,GH7CK,EG6Cd,EAAgBpoD,GAAAA,CAAIC,IAAJ,CAAhB,EAA0BA,IAA1B,CAAA,KAAmC,IAAA,CAAKiwL,KAA5C,EAAmD;AH7ChCzwL,AyBkG3B,IDNIoe,AvB7BFspG,CuB6BG,CAAC,CAAC,AxB5FoB,CwB4FnB,AxB5FmBt7G,CC+DzB,CAAKw8K,CuB6BI,CAAC,KvB7BE,GAAGlhE,ED/DU,GAAAt7G,AC+DV,CAAKnD,MAAM,CAACoU,KAAK,CD/DP,AC+DQ,CAAC;AD9DpC,AyBkGA,IDNIe,AxB5FE/R,AC+DJq7G,CuB6BG,CAAC,CAAC,CAAC,CvB7BN,CAAKmhE,CuB6BI,CAAC,OvB7BI,GAAGnhE,ID/DS,CC+DT,CAAKpgH,CD/DO,GAAG,EC+DJ,CAACy0B,QAAQ,CAAC1e,KAAK,CAAC,CAAC;AD/DZrd,AyBmGnC,IDNIoe,AvB7BFspG,CuB6BG,CAAC,CAAC,AxB7F4B,CwB6F3B,AxB7F2Br7G,CCgEjC,CAAKy8K,CuB6BI,CAAC,GvB7BA,GAAGphE,KAAA,CAAKpgH,MDhEe,ACgET,CAACslD,EDhEQvgD,ECgEJ,oBDhEI;AACnC,AyBmGA,IDNI+R,AxB7FE9R,CwB6FD,CAAC,CAAC,CAAC,GAAG,CAAC,MxB7FQ,GAAG,GAAG;AAACtM,AyBoG3B,GtBlHe,CqB4GXoe,AvB7BF,CuB6BG,CAAC,CAAC,AxB9FoB,CwB8FnB,AxB9FmB9R,GwB8FhB,CAAC,UxB9Fe,GAAAA,cAAA;AAC3B,AyBoGA,EDNE,ExB9FIC,ACiEJm7G,KAAA,AEhBO,CFgBFqhE,QEhBE,KAAA,CAAS2H,EHjDU,CGiDnB,EHjDsB,AGiDR,CFgBI,EDjEO,CCiEJ,IAAI;ADjEC1wL,AyBqGnC,EDNE,KxB/FiC,CAAAuM,OGkDpBmkL,GAAX,EAAgB,CAAhB,CAAA,QHlD+B,GAAAnkL,sBAAA;AwBgGnC,AxB/FA,AyBqGA,GtBrHe,CHgBTC,ACkEJ,cDlEkB,GAAG,GAAG;AwBgG1B,AxBhG2BxM,AyBsG3B,IxBnCE,GDnEyB,CAAAwM,IGqDf,SAAA,CHrDe,GAAAA,IGqDf,CAASmkL,IAAT,EAAe51E,GHrDA,MGqDf,EAA0B61E,eAA1B,EAA2C;AHpDvD,AyBsGA,IzBtGMnkL,ACmEJ,IEdMokL,OAAAA,GAAAA,KAAAA,CAAJ,EHrDwB,GAAG,GAAG;AAAC7wL,AyBuGnC,EDLEkmM,KxBlGiC,CAAAz5L,EwBkGzBy5L,CAAC5qK,ArB3CA,MqB2CM,EAAE,IrB3CG,OHvDa,GAAA7uB,sBAAA;AACnC,IwBkGI,AxBlGEC,ACoEJg7G,KAAA,CuB8BQtpG,AvB9BH4qK,AEbKzoL,CqB2CD,ErB3CCA,CqB2CE,ErB3CI,EqB2CA,AxBlGE,CwBkGD8d,CrB3Cb,CHvDiB,ECoEH,CDpEM,ECoEH,CuB8BI,WvB9BQ;ADpERre,AyBwG3B,IDLIoe,CAAC,CAAC,AvB7BH,CuB6BI,AxBnGoB,CwBmGnB,AxBnGmB1R,EGwDf6jL,CqB2CDj1J,EvB7BD2tJ,CEdEsH,GqB2CK,ArB3CErkJ,CqB2CD3zB,CAAC,GxBnGQ,ACsER,CAAC6gB,EDtEO1sB,CCsEJ,AEdjB,aHxDqB;AAC3B,AyBwGA,IDLI0R,AxBnGEzR,ACuEJ,AwBiCIswO,CDLD,AvB5BF,CuB4BG,CAAC,CAAC,GAAG3hN,GCKK,CtBhDDw1J,EqB2CE,ACKE,CDLDj4K,CAAC,ECKI8iO,CtBhDjB,CAAA,EAAmB,CHxDG,CyBwGC,CAAC3qL,CzBxGC,GAAG,CyBwGC,CAAC,CAAC;AzBxGFhxD,AyByGnC,IDLIoe,AvB3BFspG,AwBgCIw1H,CDLD,CAAC,CAAC,AxBpG4B,CwBoG3B,AxBpG2BvwO,CCyEjC,CAAKu8K,CuB2BI5tJ,ECKI,GAAG,CDLD,CAACtO,ArB3CA,CqB2CC,CCKG2uN,EtBhDd,IsBgDoB,CxBhCJ,AwBgCK1kC,GzBzGM,ACyER,CwBgCM,CAAC,CzBzGCtqM,AyByGA,SxBhCI,aDzEJ;AACnC,AyByGA,EDLE,ExBpGIC,AyByGAuwO,ExB/BH,MEjBS,CFiBFl0D,AEjBG2H,IsBgDM,GAAG,ExB/BH,CAACvxK,CwB+BMs8N,EzBzGE,EC0EH,AEjBjB,CHzDuB,CGyDDhrD,AsBgDE,CAACr+I,CzBzGC,EGyDJq+I,CAAK/oF,IsBgDM,CtBhDX,AsBgDY,CtBhDDrnG,GAAX,EAAgBgwL,CsBgDG,CAAC,EtBhDpB,CAAA;AHzDKvwL,AyB0GnCk9O,EDLE,EvBzBA,CAAC,ED5EgC,CAAAtwO,CyB0G1B,CAACsiC,QAAQ,GAAGiuM,SzB1Gc,GAAAvwO,CyB0GD,qBzB1GC;AwBsGnC,AxBrGA,AyB0GA,IzB1GMC,AC6EJ66G,KAAA,CAAKyhE,AElBK4H,IH3DI,GAAG,AG2DPA,CH3DQ,EG2DEH,CFkBJ,GAAG,WElBCA,CFkBW,GElBQ,CAACC,OAApC;AqB2CN,AxBtGqB7wL,AyB2GrBk9O,MxB5BG,CD/EkB,CAAArwO,CyB2GZ,CAAC4gM,GxB5BA,CwB4BI,GxB5BA,AwB4BG,CzB3GI,AC+ENnmM,AwB4BG,CtB9CCupL,EH7DEhkL,GC+EA,CAACkvB,CElBhB,CAAA,IH7De,EC+ES,CAACxc,UAAU,CAAE,IAAI,CAACtW,MAAO,CAAC;AD9ExD,AyB2GAi0O,IzB3GMpwO,ACgFJ,CAAC,IwB2BM,CAACmnI,KzB3GO,CG6DD8b,EH7DI,AyB2GF,CzB3GG,AyB2GFktF,OtB9CHltF,CAAW+gC,EsB8CE,CAAC,ItB9Cd,EAAoB/1E,SAApB,CAAV;AH7DgB/6G,AyB4GtB,EDJEmmM,EvBtBAz+E,GDlFoB,CAAA56G,CCkFpB,CuBsBQq5L,AvBtBH/c,AEnBG2H,CqByCC9nL,MAAM,ArBzCX,EqByCa,AxBxGG,AG+DH,GH/DG6D,KCkFE,GAAG,GDlFL,OCkFgBy6G,UAAU,EAAG;ADjFnD,AyB4GA21H,IDJI,AxBxGEnwO,ECmFHw6G,EuBqBKt+G,CCIC,CAAC8yB,GzB5GK,AG+DF6rE,CqByCC,ExBxGI,ACmFL,CDnFM,ACmFLxxF,CEpBN,AsB6CU,CDJC,ArBzCA7V,AsB6CAsb,GtB7CX,AsB6Cc,CAAC,CDJC,ArBzCA00K,AsB6CA,CDJC,CCIC,CDJC,ACIA,CtB7CnB,AsB6CoB,CtB7CpB,CsB6CsB,CAAC,CAAC,CxBzBF,CAAE,SAAS,EAAElH,SAAU,CAAC;ADnFlCrpL,AyB6GpB,MDJMiJ,AvBrBH,CDpFiB,CAAA8D,ECoFb,CAACg8K,CuBqBI,GAAG,ExBzGK,EwByGDqd,CxBzGCr5L,GwByGG,CAAC,CAAC,IxBzGL,ECoFQ,GAAGw6G,UAAU;ADnFzC,AyB6GA21H,IDJI,AxBzGElwO,ACqFJ,CAAC,AErCC,IsB6DK,CAACslB,QzB7GU,EyB6GA,CzB7GG,AyB6GFS,CzB7GG,eyB6Ga,CAAC,IAAI4oN,MAAM,CAACv1C,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC/uL,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;AzB7GpDtX,AyB8GzBk3M,GtBtIe,CqBmIX,AvBpBFxvF,CwBuBG,CAACuvG,CzB9GmB,CAAAjqN,CCuFvB,CuBoBQoR,AvBpBHkrK,CuBoBI,ECGE,CDHC,ACGA4zD,IDHI,CAAC7+N,GxB3GM,CyB8GF,CAAC,CzB9GCrR,EwB2GE,IvBpBC,GAAG,KDvFN,OCuFkB;ADtF3C,IwB2GI/D,AxB3GEgE,ECwFH,IuBmBO,AvBnBH,CuBmBIsL,AvBnBHwwK,AEtBG,CqByCC,ExB3GI,CwB2GD3qK,CAAC,CAAC,AxB3GE,CwB2GD,AxB3GE,CwB2GD,CrBzCR,OAAA,CAAS7d,GFsBQ,AEtBjB,CFsBkBmW,CEtBJ,kBFsBuB,CAAE,SAAS,EAAE2yK,SAAU,CAAC;ADxFnDrpL,AyB+GrB,IDHIiJ,EvBnBD,CDzFkB,CAAAgE,AGmEb1M,EqByCE,AvBnBH,CuBmBIsY,AvBnBHkwK,AEtBAxoL,CqByCI,ArBzCA6f,GqByCGhC,CAAC,CAAC,CAAC,AxB5GG,CwB4GF,ArBzCf,EHnEiBnR,AGmEA,OAAO1M,GHnEP,ACyFO,AEtBAA,CAAI6f,EFsBD,IAAI,CEtBP,CAAA,CAAP;AHlErB,AyB+GA,IDHInX,AxB5GEiE,AC0FJ,CAAC,KuBkBO,CAAC8f,ArBzCAijK,CqByCC,GAAG7xK,CAAC,CAAC,CAAC,CAAC,CrBzCR6xK,CHnEY,AGmEFztL,GHnEK,CAAC,AGmEhB,CAAejC,GAAf,CAAP;AHnEwBP,AyBgH5B,GtB1Ie,CqBuIX,AvBjBF0nH,GD5F0B,CAAAx6G,CC4F1B,CAAKq8K,CuBiBItgL,MAAM,EvBjBD,GAAG,GD5FS,GAAAiE,MC4FG,WD5FH;AAC5B,AyBgHA,EDHE,ExB7GIC,EC6FHw7C,KAAK,CAACigI,GExBM,CHrEG,GAAG,AC6FL,CD7FM,AC6FLtrK,IAAI,AExBN,CFwBQqrC,KAAK,CAAC1/C,IExBd,CAAS1I,CFwBY,CAAC,CExBtB,EAAc;AHrENP,AyBiHvB,EDHE,IvBhBC2oD,CD9FoB,CAAAx7C,GC8Ff,AExBG5M,CFwBFsoL,EExBEtoL,KAAQwE,CHtEI,CC8FL,CAACuY,CD9FInQ,GC8FA,CAAEw7C,CExBrB,IFwB0B,CAACrhD,ED9FR,IC8Fc,CAACy0B,QAAS,CAAC;AuBiBhD,AxB9GA,AyBiHA,GtB7Ie,CH4BT3uB,EC8FHu7C,KAAK,CAACmgI,KD9FU,AC8FL,GD9FQ,AC8FLngI,CD9FM,IC8FD,CAACrhD,MAAM,CAACslD,IAAI;AuBiBlC,AxB/GwB5sD,AyBkHxB,IxBlBE,CAAC,EDhGqB,CAAAoN,EGwEd,SAAA,EHxEc,GAAAA,CGwEd,CAAS7M,GAAT,EAAc,MHxEA;AwBgHxB,AxB/GA,AyBkHA,IzBlHM8M,ACiGJq6G,KAAA,CAAKzhH,CEzBI1F,GAAAA,CFyBC,GAAG,CEzBI,EHxEI,EGwEnB,CHxEsB,CAAC,KCiGA;AuBe3B,AxBhH4BP,GG7Bb,GFgIZ2oD,CDnGyB,CAAAt7C,GCmGpB,CAACpE,MAAM,CAACqU,IAAI,CAAEqrC,CDnGM,GAAAt7C,CCmGD,CAACu7K,OAAQ,CAAC,ODnGT;AAC5B,AyBmHA,IzBnHMt7K,AyBmHAw8N,ExBhBHnhL,KAAK,CAACrhD,IDnGS,ECmGH,CDnGM,ACmGLy0B,CDnGM,MyBmHM,CxBhBJ,CAACze,CwBgBM,GxBhBF,CAAEqrC,AwBgBIgzL,KxBhBC,CAAC9yD,AwBgBI,CAACwoC,QxBhBK,CAAC,MwBgBS,CACvDirB,YAAY,EACZa,aAAa,EAAE;AzBrHMn9O,EwBkHrBqmM,ACIAirB,IxBlBC3oK,CuBcI09I,AxBlHgB,CwBkHf9oL,AxBlHejQ,CwBkHd,CCIC,CDJCrE,AvBdH,CAAC3B,AwBkBG,GAAG,EDJE,CvBdF,CuBcI,AvBdHslD,CDpGO,GAAAt/C,ACoGH,GAAGq7C,KAAK,CAACmgI,GDpGN,ECoGW;ADnGlC,EyBqHiB,EDHb,AxBlHEv7K,ECqGHo7C,EuBaK1/C,GvBbA,CAAC3B,EuBaK,ExBlHI,ECqGH,CuBaI,AxBlHE,ACqGL2lD,CDrGM,IwBkHE,CAAC,EAAE,cvBbW,CAAC,CAAC;ADrGjBjtD,EyBsHrBssN,IDHIrjN,AvBbH0/C,CDtGoB,CAAAp7C,GCsGf,CuBaI,AvBbHuJ,CwBgBI,EDHE,ACGA,GAAG,CDHCsvL,ACGA,CzBtHI,GwBmHA,AxBnHA74L,CwBmHC,CAAC,AvBbH,CAAEq5K,SDtGD,GCsGc,CAAC;ADrGtC,AyBsHA,CACA,CAAC,EDJG,AxBnHEp5K,ECuGHm7C,KAAK,CAACl2B,KDvGU,CCuGJ,CAAC,CDvGM,ACuGL,CDvGM;AAACzyB,IwBqHpB,EvBZDoE,CDzGqB,CAAAoJ,EwBqHd4Q,CAAC,AvBZH,GuBYM,AvBZHorK,IuBYO,CAACnrK,AvBZH,CAAC6xF,CDzGO,GAAA1iG,ACyGH,GuBYM,UxBrHH;AACxB,AyBwHA,IDHI,AxBrHEC,AC0GJ,CAAC,KuBWO8K,CAAC,GAAGgF,CAAC,CAAChF,CAAC,IxBrHM,GAAG,CAAC;AAACvY,AyByH5Bk3M,IDHI,CCGC,CAACuhC,CzBzHsB,CAAAhrO,EwBsHlBoL,CAAC,GAAG0E,CAAC,CAAC1E,CAAC,OCGO,CzBzHI,AyByHHixN,GzBzHGr8N,iBAAA,EyByHmB,CAAC;AzBxHhD,IwBsHI,AxBtHEC,AC2GJ,AErCO,MqBgDCsf,CAAC,GAAGzP,ArBhDIhd,CqBgDH,CAACysB,CAAC,ArBhDR,EAAc,IHtEE,GAAG,CAAC;AAAChtB,AyB0H9B,IDHIiJ,AvBXFy+G,GD5G4B,CAAAh6G,CC4G5B,CuBWQ,AvBXH+kB,CuBWIla,ArBhDAnS,CqBgDC,GAAGgY,CAAC,AvBXH,AErCFhY,CqBgDM,ArBhDA7F,CqBgDC,CAAC,AvBXH,CErCL,CAAP,CqBgDkBgY,CAAC,GAAG6F,CAAC,AxBvHG,CwBuHF,CAAC,CAAC,AxBvHA1Q,CC4GF,EuBWKmL,CAAC,GAAGuF,CAAC,CAAC,CAAC,CAAC,GAAG4O,CAAC,IxBvHf;AAC9B,AyB0HAkqL,GtBrDE,CqBkDEjuM,AxBvHE0E,AGnCS,CsB6JV,CxBbF,AwBaGm8N,IDHI,AvBVD3pN,CuBUEtH,CAAC,GAAGuF,CAAC,AvBVD,CuBUE,CAAC,CAAC,AvBVD,ED7GK,CwBuHD7F,CAAC,AvBVDme,CD7GI,CAAC,CwBuHDtY,CAAC,CAAC,ACGA,CDHC,CAAC,CCGC0rN,EDHEjxN,CAAC,GAAGuF,AvBVR,CuBUS,AvBVR,CuBUS,AvBVR,CuBUS,CAAC,GAAG4O,CAAC,QCGQ;AzB1HzBhtB,IwBwHxBiJ,GxBxHwB,CAAA0E,EwBwHlB,CAACqf,ArB/CAnD,CqB+CC,GAAGzL,CAAC,ArB/CLyL,CqB+CM,ArB/CAC,CqB+CC,CAAC,GAAGvR,CAAC,CrB/CZ,CHzEiB,CwBwHF6F,CAAC,CAAC,AxBxHAzQ,AGyEA,CqB+CC,CAAC,GAAGkL,CAAC,GAAGuF,CAAC,ArB/CD7d,CqB+CE,CAAC,CAAC,ArB/Cb,EAAc,CqB+CEysB,CAAC,AxBxHjB;AAC5B,AyB2HA,IDHI,AxBxHEpf,EC8GH,KuBUQ3E,ArB/CA1I,GAAAA,CAAIoG,EqB+CE,QxBxHU,CGyEhB,EHzEmB,CAAC,EGyEAkjB,KAA3B;AHzE4B7pB,AyB4HhC,EDHE,CrB7Ja,CsBgKTo9O,ExBbH,CD/G6B,CAAAxvO,EC+GvB67K,IAAI,EwBaK,CxBbF,EwBaK,ExBbD33J,EwBaKypN,KAAK,CzB5HE,AyB4HDpkF,GzB5HCvpJ,MC+GF,CAAC,CAAC,CAACwlB,AwBaU,CAAC,QAAQ,EAAE,CzB5HtB,EyB4HyB,CAAC,GxBbP,CAAE9rB,MAAM,CAAC88B,EAAE,EAAE,IAAI1N,cAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;AD9GxF,AyB4HA44B,EDHE,ExBzHIzhD,CyB4HD,CxBbF,AwBaG2P,GAAG,CxBbAksK,AwBaC0zD,EtBjDE,SH3EW,AC+GH,AEpCR,CsBiDU,CAAC,CzB5HG,AC+GH3zD,CD/GI,GC+GA,CAACpsK,AEpChB,CAAS9c,GAAT,CFoCqB,CAAC,AEpCR,CFoCS,CAACqjB,MAAM,CAAC,CAAC;AuBW5C,AxB1H4B5jB,AyB6H5B,IAAMq9O,ExBZH,CDjHyB,CAAAxvO,ECiHnB87K,CErCEppL,GAAAA,KAAQL,CsBiDG,ExBZD,CwBYI,EzB7HG,ACiHJ,AErCLA,CAAOK,CsBiDGg7O,CzB7HD1tO,CCiHA6oB,AErCT,CAAf,EsBiD8B,CAACqgI,UxBZA,CAAC,CDjHR,ACiHS,IwBYc,CAAC,QAAQ,EAAE,GAAG,CAAC;ADFlE,AxBzHA,AyB4HAsmF,GtBnKe,CHuCTvvO,ECgHH,IAAM87K,GDhHM,GAAG,AyB4HF,CAACn/I,EzB5HI,KCgHE,GAAG,AwBYC,GAAG,CxBZA3Y,GwBYI,cxBZM,CAAC,CAAC;ADhHpB9xB,AyB6HtBsvD,KAAK,CxBZF,AwBYG9xC,CzB7HgB,CAAA1P,CyB6Hb,CxBZA+7K,AwBYCwzD,EtBhDE,KH7EU,GAAAvvO,CG6EV,KsBgDc,CAAC,CxBZA,CDjHL,AG6EV,CAASvN,CFoCS,EEpClB,EFoCsBm2B,AEpCR,cFoCe,CAAC,CAAC;ADhH3C,AyB8HA,EDHE4vK,ExB3HIv4L,AyB8HAs8C,ExBZH,CuBSIi8I,CAACtsL,CAAC,CvBTA8vK,CuBSE,ArB9CAvpL,CsBiDG,EtBjDHA,CFqCG,AwBYG,GxBZA,CAAC,AErCCA,AsBiDEg7O,GxBZAlkO,AErCF9W,EsBiDO,CzB9HC,AG6EF,AsBiDE0lH,CxBZF,AErCrB,CFqCsB3uG,CDlHI,CCkHF,EDlHK,OyB8HO,CAAC,CAAC;AzB9HRtX,AyB+HlCqqD,GtBvKe,CqBoKX,EvBRD,CDpH+B,CAAAt8C,AyB+H1B,CDHC,ACGA4hB,IDHIrpB,AvBRH,CuBQI,ECGE,CDHC,ACGAm4J,CDHC,EAAEn4J,CAAC,CvBRFmsB,CwBWI,CDHC,ACGAkqK,IDHI,AvBRHlqK,CuBQIpU,AxB5HK,ACoHT,EAAG,CDpHMtQ,EyB+HA,EAAE0wJ,CDHC,CAACp4J,ICGI,CAACw2L,CDHC,EAAEv2L,CAAC,EAAE,EAAE,ExB5HjB,CyB+HoB,CAAC;AzB9HvD,AyB+HA+jD,IzB/HMr8C,EwB4HA,EvBPF,AwBUI,CAACqmF,CDHC,CAACh2E,CvBPD0d,AEtCE,MsBgDM,CDHC,ACGA7U,CDHC5gB,AvBPF,CuBOG,ArB7CT,CqB6CU,CvBPDqiD,EDrHM,CwB4HD3uC,ACGA,CDHC,CxB5HG,ACqHJ,CAAC1S,AEtCf,AsBgDiB,CtBhDR/G,CH/EY,EG+ErB,AsBgDqB,ExBVA,AEtCP,CFsCQw7B,QAAQ;ADrHR/7B,AyBgIlC+lB,IDHI,GxB7H8B,CAAA/X,ACuH9BmS,AwBSI,CAACswI,EtBhDElwJ,EsBgDE,CxBTH,AEvCCA,AsBgDG81L,CxBTH/4K,IAAI,AEvCI/c,CFuCFw7B,EEvCEx7B,GAAM,AsBgDA,CAAC8pD,CtBhDtB,CFuCsB,CDvHQ,ACuHP,CAACzsC,EDvHM5P,CCuHH,CAAE26C,AwBSC,CAAC4+D,IxBTG,CAACt+G,KwBSM,CxBTC,AwBSA,CxBTC,MDvHb;AAClC,AyBiIA,EDJE,CrBvKa,CH0CTgF,AyBiIAqvO,QAAQ,GAAG,IAAIr2D,iBzBjIiB,GAAG,GAAG,KyBiIV,CAACrvJ,MAAM,EAAEyyB,QAAQ,CAACk9D,UAAU,CAAC;AzBjIlBvnH,AyBkI7Cs9O,EDJE,KxB9H2C,CAAArvO,ACwHzC,AwBUI,CAACy5K,ItBhDI,SAAA,AsBgDS,GAAG,IAAI,EtBhDhB,CAASnnL,GAAT,EAAc,GHlFkB,GAAA0N,gCAAA;AwB+H7C,AxB9HA,AyBmIA,IzBnIMC,AyBmIAqvO,IxBXFp9N,GEtCO5f,GFsCD,AEtCCA,AsBiDK,CxBXLw2B,EwBWQ,EtBjDA,EsBiDIwkN,GtBjDZ,EsBiDiB,CAACz4D,CtBjDDviL,EFsCF,CAAEkpL,AEtCAlpL,IFsCK,CDxHK,ACwHJ,AEtCE,CsBiDG,CAAC,CzBnIC,AyBmIA,CtBjDrC,AsBiDsC,EzBnIE;AwB+H5C,AxB/H6CP,AyBoI7CsvD,GtB/Ke,EsB+KV,CAAC9xC,CzBpIuC,CAAAtP,CyBoIpC,CAACqvO,UAAU,CAAC,mBzBpIwB,GAAArvO,gCAAA;AwBgI7C,AxB/HA,AyBqIA,IzBrIMC,AyBqIAqvO,IxBZF,CwBYO,GAAG,EtBjDA,EsBiDIjC,KAAK,CAAC/6E,CtBjDV,IHpFe,AyBqIA,CAAC,CAAC,CzBrIC,GAAG,AGoFrB,CAASjgK,GAAT,EAAc;AHpFQP,AyBuIpC,OzBvIoC,CAAAmO,AC0HhC86K,CwBaKr5H,EtBlDErvD,GAAAA,CsBkDIqvD,CAAA,CxBbF,CAAC9nB,AwBaK,QtBlDOkpJ,KHrFU,CC0HR,CAAE7wK,CD1HMhS,AGqFhC,KFqCiC,CAAC,iBD1HF;AACpC,EwBiIEo4L,ACMA,EzBvIIn4L,EyBuIAmnK,CDNCgxB,CAAChhL,AvBNJ,IAAKojC,EuBMK,CCMC,CDNC1/C,CvBNF,CD3HM,AC2HLo/K,AwBYGm1D,GzBvIK,CwBiID,CCMC,CDNC,ACMAz8E,CzBvIG,GC2HF,IAAI38J,AwBYG,CAAC,CAAC,GxBZA,KAAKolL,KAAK,CAACt5E,IAAI,EAAG;AD3HxBlwG,CG7C5B,CsBqLE,EDNE,GxBlIwB,CwBkIpBiJ,AxBlIoBmF,EC6HvB27K,IuBKS,KAAK,CvBLJ,CAAEC,CD7HW,EwBkIJ,CAAC,AxBlIG57K,EwBkID,YxBlIC,EC6HS,CAAC,CAAE,CAAC;AD5HzC,AIpDA,EqB4LE8oM,EzBxII7oM,AIpDA4iL,EoBsLAhoL,CCMC,CxBVH,AwBUIwqB,IDNI,ACMA,CAAC,CAAC,CDNC,ECME,EDNEuyK,ApBtLb/U,CqB4Lc,ErB5LI,AqB4LF1b,CDNC,AxBlIE,AIlDvB,CoBoLsB,CAAC,CxBlIG,IAAI,CyBwID,CAAC;AzBxICv1K,EyByI/B,EDNE,GxBnI6B,CAAAqO,ACgI7B,EGjLQypD,EHiLHnP,IGjLGmP,CHiLE,AGjLKo5H,CHiLJxJ,OGlLb,EJkD+B,GAAAr5K,CCgIL,EAAG,gBDhIE;AACjC,EyByIE,EDLE,AxBpIEC,MwBoIIk4L,AvBHLvd,CuBGM,GAAG,CpBrLG,GoBqLC,CAAC5qK,AvBHL,CAACgB,KAAK,CDjIQ,CwBoID,ExBpII,ACiIP4qK,IDjIW,UCiIG,CAAC5qK,KAAK,GAAGspC,KAAK,CAACg/H,aAAa;ADjI9B3nL,EyB0IlC,EDLE,GxBrIgC,CAAAsO,EwBqI1BmuI,AvBHLwsC,CuBGM,GAAG1jK,KvBHA,CuBGM,AvBHL6T,AGlLO,CoBqLD/a,EvBHH,IAAI4rK,EuBGO,CxBrIO,GAAA37K,QCkIA,CAAC8qB,GAAG,GAAGuvB,KAAK,CAACg/H,CDlIb,YCkI0B;ADjI9D,EyB0IE00D,EDLE,AxBrIE9tO,ICmIF,CAAC,AwBOI,CDLCmuI,ACKAv5I,CDLC,CpBrLG,EoBqLA8F,CvBFH,EDnIQ,AyB0IF,CAAC,EDLE,AxBrIE,CwBqIDoV,ApBrLP,GJgDY,CIhDZ,CAAS8yK,EqB0LJssD,CDLU,GCKN,ErB1LT,AqB0Lc,ErB1LK;AJgDNz9O,IwBsIvB,ACKA,GzB3IuB,CAAAuO,EwBsIjB8T,AvBDL4mK,EGpLW/gK,CoBqLH,GAAGs+K,ApBrLAt+K,CoBqLC,CAAC,CAAC,AvBDL,AGpLSipK,CoBqLH,AvBDL9xK,CDrIY,GAAA9Q,CCqIP,EGpLG4iL,CAASluG,CHoLRgnG,IGpLD,CAAe,GJ+CX,MCqIW,CAAC5qK,KAAK,qBGpLrB,CAAb;AJgDV,IAAM7Q,AyB2IFivO,EDLMn7N,ECKF,CDLK,ACKJouC,CxBNJu4H,EuBCWud,ApBrLFt+K,CoBqLG,ACKJ,CDLK,ACKJ6T,CDLK,CAAC,ApBrLN7T,GHoLA,CAACkR,CGpLQ,CqB0LD,CxBNJ,AwBMK9b,ErB1Lb,EHoLY2sK,AGpLO,AqB0LF,CAACwzD,EzB3II,EyB2IA,CzB3IG,AyB2IFhtF,IzB3IM,AyB2IF,CAAC10H,GxBNF,CAAC3C,GAAG,CwBMM,CAAC;AzB3IPp5B,IyB4IpC,EDLMuiB,CxBvI8B,CAAA/T,ACuIpC,CuBAS,GAAGg4L,CAAC,CAAC,CAAC,CAAC,CpBrLD,KAAP,YJ8C4B,GAAAh4L,0BAAA;AACxC,IAAMC,AyB4IFgvO,EDLMj7N,ECKF,CDLK,ACKJkuC,GDLO81I,CAAC,ACKJ,CDLK,ACKJl0K,CDLK,CAAC,QCKI,CAAChV,IAAI,CzB5IG,AyB4IFmgO,GzB5IK,CyB4ID,CAAChtF,EzB5II,EyB4IA,CAACn+H,UAAU,CAAC;AzB5IXtyB,EyB6ItC,CAAC,CAAC,EDLMyiB,CxBxI8B,CAAAhU,ACwIpC,CuBAS,GAAG+3L,CAAC,CAAC,CAAC,ApBpLF,CoBoLG,kBxBxIoB,GAAA/3L,0BAAA;AACxC,EyB8IE6uO,EzB9II5uO,EwBwIIgU,GAAG,CCMH,CAAC+P,CDNK+zK,CAAC,CAAC,CAAC,CAAC,CpBpLD,AqB0LF,CAAC,CAAC,GrB3LF,OJ6Cc,GAAG,IAAI;AAACxmM,EyB+IrCqqD,IDNQ1nC,CxBzI6B,CAAAjU,ACyInC,CuBAS,CCMH,CAACkhD,CDNK42I,AvBARvuL,CuBAS,CAAC,CAAC,AvBAR,AGpLM+iC,CoBoLG,CCMH,CxBNH2N,AwBMI2G,KxBNC,AGpLFtU,AqB0LM,CxBNHwsI,AGnLN,CqByLW5vJ,GrBzLX,GACA1P,AqBwLiB,CAAC,CzB/IO,EIzCzBA,CJyCyBxZ,AIzCpB,CAAL,CAAA,CHkLqB,AGlLb0mC,QAAR,CAAA,CADA,GACqBltB,IAAAA,CAAK,CAAL,CAAA,CAAQktB,CJyCJ,OIzCJ,CAAA,CADrB,GAEAltB,IAAAA,CAAK,CAAL,CAAA,CAAQktB,QAAR,CAAA,CAFA,GAEqBltB,IAAAA,CAAK,CAAL,CAAA,CAAQktB,QAAR,CAAA,CAFrB,GAGAltB,IAAAA,CAAK,CAAL,CAAA,CAAQktB,QAAR,CAAA,CAHA,GAGqBltB,IAAAA,CAAK,CAAL,CAAA,CAAQktB,QAAR,CAAA,CAJlB,EAIsC,CAJtC;AJ4CjB,EyB+IE8e,EzB/IIvlD,EwByIIiU,EvBAN,CuBAS,ApBvLH,GoBuLM4jL,AvBARtuL,CuBAS,CAAC,CAAC,AvBAR,CuBAS,EvBANywC,KAAK,AwBMI,CxBNH8+H,AwBMI73H,KzB/IO,CyB+ID,CAAC,CzB/IG,IAAI,GCyIH;ADzII5vD,AyBgJvC,MDNU6iB,CxB1I6B,AIrDjB,CJqDiBlU,AC2InC,CuBDS,GAAG63L,AvBCPviJ,CuBDQ,CAAC,CAAC,CAAC,IvBCH,CAAEhsC,GAAI,CAAC,IAAIgsC,ID3IW,GAAAt1C,CC2IH,CAAEuJ,GAAI,CAAC,EAAG,iBD3IP;AACvC,AyBiJA03C,IDPI,AxB1IEhhD,EyBiJA,CAAC,CAAC,EDPEkU,AvBEL,GuBFQ,ApB9KEsyB,CHgLLn9B,EuBFMwkI,AxB1IE,CwB0ID,AvBEJ,CuBFK,CAAC,AxB1IE,CwB0ID,AvBEJ,CAAEplI,ED5IO,EC4IH,CAACC,EAAE,EAAGW,GAAG,IAAI6xK,KAAK,CAAC,KAAM,IAAK7xK,GAAG,GAAGZ,IAAI,CAACC,EAAE,EAAGW,GAAG,IAAI6xK,KAAK;AD5ItD9pL,AyBmJ1By+J,KrB1MiB,CoBkMP17I,ACQJ,CzBnJoB,AyBmJnB3M,CzBnJmBxH,CwB2Ib,CvBGR,EuBHW6tI,CAAC,CAAC,AvBGRvkI,CuBHS,CAAC,CvBGP,GD9Ia,AC8IV,CAAEb,ED9IQzI,AyBmJH,CAAC,CxBLF,CAAC0I,EAAE,EAAGY,EwBKI,CxBLD,CwBKG,CzBnJR,EC8IS4xK,KAAK,CAAC,GwBKD,ExBLO,IAAK5xK,GAAG,GAAGb,IAAI,CAACC,EAAE,EAAGY,GAAG,IAAI4xK,KAAK;AD7IhF,EyBmJElyJ,EzBnJI/oB,EwB2IImU,ECQF,CDRK,ACQJypC,CxBJJ,EuBJWgwF,CAAC,CAAC,AvBIRxkI,CuBJS,ACQJ,CDRK,CvBIP,CGjLO,AqBqLFwmJ,GxBJDvmJ,GAAG,AwBII,CAACykL,CxBJF,GD/IQ,GAAG,GyBmJC,CzBnJG,EyBmJAl+B,MAAM,CAACo+B,WAAW;AzBnJjB78L,EyBoJrC43B,IDRQ3U,CxB5I6B,CAAApU,AyBoJ/B,CDRK,ACQJo+C,GDROwvF,AvBKVwsC,AGlLQ,CoB6KG,CAAC,CAAC,CAAC,KvBKL,AGlLD,CHkLE5pK,GGlLF,CAAS8xK,CHkLF,GAAG95K,CwBGO,CAAC,CzBpJO,AyBoJN,CxBHL,AGlLd,CHkLea,CDjJUrJ,AIjCN,EHkLD,CAAEoJ,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE+wK,GDjJf,MCiJwB,CAAC5pK,KAAM,CAAE,CAAC;ADhJzE,EyBoJEgrC,EzBpJIv7C,EwB4IIoU,GAAG,CvBMR,AwBEK,CxBFJ,AwBEKyM,CDRK8sH,ApB7KAv0H,CoB6KC,CAAC,CAAC,CAAC,ApB7KJA,CHmLJ,CwBEM,CrBrLKipK,AqBqLJ1yB,MAAM,CAACk+B,CrBrLHxL,CAASluG,CJiCD,GAAG,CIjCX,CAAe,EJiCA,AyBoJF,EAAEw7E,MAAM,CAACo+B,QrBrLtB,CAAb,EqBqL8C,CAAC;AzBpJlB78L,EyBqJrCqqD,IDRQlnC,CxB7I6B,CAAArU,CwB6I1B,CCQH,CAAC27G,CDRKgyB,AvBOVwsC,AGpLQ/gK,CoB6KG,CAAC,CAAC,CAAC,ApB7KNA,KHoLC,AGpLQ,CHoLP7I,EwBCQ,CrBrLd,AqBqLeo/I,ExBDJ,AGpLQ,GHoLHwqB,CwBCK,CAACy0D,CzBrJO,GAAA5uO,GCoJJ,CAACuQ,KAAK,GAAG,AwBCI,CxBDFpH,AwBCG,GxBDA,GAAGC,GAAG,GDpJhB,CCoJqB,CAAC,GACtDb,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEgxK,SAAS,CAAC5pK,KAAM,CAAC,GAChChI,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE+wK,SAAS,CAAC5pK,KAAM,CAAC;ADrJvC,AyBqJA,CAAC,CAAC,EzBrJItQ,EwB6IIqU,GAAG,CvBUR,EuBVWq5H,CAAC,CAAC,CAAC,CAAC,CpB7KD,KAAP,MJgCkB,GAAG,IAAI;AAACz8I,MwB8I5BqjB,CxB9I4B,CAAAtU,ACyJlC,CuBXS,GAAG0tI,CAAC,CAAC,CAAC,CAAC,gBxB9IkB,GAAA1tI,wBAAA;AACtC,IAAMC,EwB8IIsU,GAAG,GAAGm5H,CAAC,CAAC,CAAC,ApB5KF,CoB4KG,YxB9IU,GAAG,IAAI;AAACz8I,IwB+IlC08I,CAAC,CAAC,CAAC,AxB/I+B,CwB+I9B,AxB/I8B1tI,AC0JlC,GuBXOqT,GAAG,GAAGS,ApB5KE,GoB4KC,EpB7KH,CoB6KMR,GAAG,GAAGW,GAAG,AxB/IM,GwB+IHV,AxB/IGvT,GwB+IA,GAAGoU,GAAG,exB/IN;AACtC,IwB+IIs5H,AxB/IEztI,CwB+ID,CAAC,CAAC,CAAC,AvBWJg6K,GuBXO5mK,GAAG,CpB5KG24B,EoB4KAj4B,AvBWJ,CAACqW,EuBXM,AxB/IE,CC0JL,EuBXM9W,AxB/IE,AI7BR04B,CHuLG3jC,AGvLM,EoB4KA,CxB/IG,CC0JL,AGvLE,CoB4KG6L,AvBWJhL,EGvLQgQ,CoB4KD,AvBWJ,CAAEygC,EuBXKpmC,ApB5KF2F,CAAK,CAAL,CoB4KK,AvBWH,AGvLF,CHuLGo/J,AGvLKlyI,EoB4KA/xB,GAAG,GpB5KX,CAAA,CAAhB,EAAoC,CHuLJ,AGvLhC,EHuLkChM,IAAI,CAACY,GAAG,CAAE0wC,KAAK,CAAC4+H,aAAa,EAAE0B,SAAS,CAAC7vJ,GAAI,CAAE,CAAC;AD1JrEp5B,IwBgJ1B08I,CAAC,CAAC,CAAC,AxBhJuB,CwBgJtB,AxBhJsBztI,AC4J1Bg6K,CG3LM,EoB+KC5mK,GAAG,GAAGW,AvBYJ,CAACm5J,EuBZM,GAAG75J,CxBhJO,EwBgJJ,AvBYJ,CD5JQrT,AC4JP,CAAC,CuBZKkU,GAAG,GAAGZ,GAAG,GAAGe,ExBhJX,CwBgJc;AxB/I5C,IwBgJIo5H,AxBhJExtI,CwBgJD,CAAC,CAAC,ApBvLa,CoBuLZ,GAAGsT,CxBhJG,EwBgJA,CxBhJG,EwBgJAM,ExBhJI,CwBgJD,GAAGL,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG;AxBhJtBpjB,IwBiJlB08I,CAAC,CAAC,CAAC,AxBjJe,CwBiJd,AxBjJcxtI,AC8JlB,GuBbOsT,EpB3KI4yB,CoB2KD,ExBjJQ,CwBiJLryB,ExBjJK7T,CwBiJF,GAAGuT,GAAG,CxBjJJ,EwBiJOS,GAAG,GAAGR,GAAG,GAAGW,GAAG;AxBhJ5C,IwBiJIq5H,AxBjJEvtI,CwBiJD,ApB/MY,CoB+MX,CAAC,CAAC,GAAGqT,ExBjJI,CwBiJD,ExBjJI,CwBiJDQ,GAAG,AxBjJE,GwBiJCP,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG;AxBjJrBtjB,IwBkJnB08I,CAAC,CAAC,CAAC,AxBlJgB,CwBkJf,AxBlJevtI,AC+JnB,GuBbOwT,CvBaFgmC,CGvLM,CoB0KD,GAAG7lC,AxBlJM,AC+JT,CAAC4kK,EuBbK,AxBlJGv4K,GwBkJAyT,GAAG,GAAGK,AxBlJN,EC+JK,CuBbI,GAAGJ,CvBaF,EuBbK,EvBaD,CuBbIO,CvBaD,EuBbI;AxBjJ5C,IwBkJIs5H,AxBlJEttI,CwBkJD,CAAC,CAAC,CAAC,EvBcHu5C,CuBdMhmC,CpB1KG,EoB0KA,CvBcJ,CAAC1Z,CuBdM8Z,GAAG,CxBlJG,AIxBT,CHwLG,CuBdMH,AvBcLjF,CDhKQ,CIxBZ,CoB0KY,ApB1KHwzK,EJwBO,CwBkJDjuK,GAAG,EpB1KlB,CoB0KqBL,CpB1KF,EoB0KK,AvBcL,CAAEqnK,EuBdM7mK,GAAG,IvBcA,EAAEslC,KAAK,CAACg/H,aAAc,CAAC;ADhKpC3nL,IwBmJ3B08I,CAAC,CAAC,CAAC,AxBnJwB,CwBmJvB,AxBnJuBttI,ACkK3B,CAAC,EuBfMuT,CpB1KKuF,EoB0KF,CvBeH,CGzLKA,CoB0KClF,EpB1KMmuK,CoB0KH,GAAGvuK,ExBnJQ,CwBmJL,CpB1KHuuK,CJuBQ/hL,AIvBC6zE,CoB0KH9/D,GAAG,CpB1KT,CAAe,CoB0KHN,GAAG,GAAGS,GAAG,CxBnJb,kCIvBR,CAAb;AJwBV,IwBmJI,AxBnJEjU,MCmKDs5C,CuBhBM1/C,AxBnJE,CIvBCif,EJuBE,CCmKN,CAACjf,AG1LGif,CoB0KG,CxBnJG,GIvBG,CH0LN,CAAC1K,EG1LR,CH0LW,CAAE0sK,AG1LM,SH0LI,CAAC;ADnKblqL,EwBoJnB,KxBpJmB,CAAAqP,ACqKjB,ODrKiB,EItBF,CJsBEA,IItBT,GJsBS;AACrB,EwBoJE,ExBpJIC,eAAe,GAAG,IAAI;AwBqJ5B,AxBrJ6BtP,OAAA,CAAAsP,ACsKzB,OG1La,QJoBY,GAAAA,eAAA;AwBsJ7B,AxBrJA,IAAMC,ICsKF,KDtKW,GAAG,CIpBC,GJoBG,EIrBL;AJqBMvP,OAAA,CAAAuP,ACuKnB,IAAKo5C,CG1LM9N,IJmBQ,ACuKT,CAACutI,EDvKQ74K,GInBRsrC,CAAW3yB,IAAAA,CJmBH,AInBQ,CH0LJ,AG1LD,CAAX,CAFE,EH4LciiK,iBAAiB,IAAIxhI,KAAK,CAACrhD,MAAM,CAACkrE,oBAAoB,EAAG;ADtKxF,EwBuJExtD,ExBvJIxV,GwBuJCwV,CAACsW,EvBiBH2tJ,GG3LUpuI,CoB0KD,EAAE5xC,CxBvJG,ECwKL,CDxKQ,ACwKPkwB,EuBjBO,CpB1KP0hB,CoB0KS,AxBvJE,AInBA3yB,EH2LL,EG3LKA,CH2LFkiK,AG3LO,CAAL,CAAX,CAHE,UH8LoB,CAAEnB,SAAS,CAAC9vJ,MAAO,CAAC;ADxK9Bn5B,IwBwJvB,GxBxJuB,CwBwJnBiJ,AxBxJmBuG,AC0KvB,CAAC,IG5LUqrC,CoB0KD,CvBkBH,IuBlBQ,ExBxJQ,EIlBZA,CoB0KS,AxBxJGrrC,AIlBD0Y,CoB0KD,EAAE,CpB1KDA,CAAK,CAAL,CAAX,MJkBY;AAC3B,IAAMzY,EwBwJAxG,GpB/KI,CHkMLggL,EuBnBO,GAAG,IAAI+c,AvBmBL,CAAC7sK,GuBnBQ,CAAC,CAAC,AxBxJE,CC2KN,ED3KS,CC2KNixJ,GD3KU,UC2KG,CAAEnB,SAAS,CAAC9vJ,MAAM,GAAGnU,KAAM,CAAC;AD3K9BhlB,IwByJ/B,GxBzJ+B,AI9BpB,CJ8BoByP,AC6K/B,qBD7K+B,GAAAA,qBAAA;AACnC,IwB0JI,AxB1JEC,IC+KFyQ,EuBrBM/B,CAAC,EpB1KIg3B,CoB0KD,AvBqBJ,CAACnc,GuBrBO,CAAC5a,MxB1JQ,EwB0JA,CxB1JG,GC+KH,CD/KO,AC+KL4qK,SAAU,CAAC;AD/KLjpL,IwB2J/B,CpBhOa,EJqEkB,CAAA0P,EwB2JzBqJ,CAAC,GAAG9P,MAAM,CAACoV,QAAQ,AxB3JM,GAAA3O,qBAAA;AACnC,IwB4JI,AxB5JEC,ICgLF,CuBpBK,IAAIrJ,CAAC,ApB1KE,GoB0KC,CAAC,EAAEA,CAAC,CxB5JG,GAAG,CwB4JD,CAAC,EAAEA,AxB5JE,CwB4JD,EAAE,EAAE;AxB5JFtG,MwB6J1B+Y,CAAC,AxB7JyB,CwB6JxB,AxB7JwBpJ,ACiL5BwQ,CuBpBK,GAAG7Z,ApB1KE,CoB0KD,CvBoBH,CAACywB,CuBpBK,CAAC,CAAC,GAAGuE,ApB1KP,IAAA,CJakB,AIbT61J,CoB0KI,CAAC54K,CAAC,AxB7JG5I,CCiLN,CAAE+5K,CuBpBItrK,CAAC,CAAC,ApB1KpB,CoB0KqB,CpB1KF,EoB0KK9X,CAAC,GAAG,AvBoBF,CuBpBG,AvBoBF,CuBpBG,GxB7JZ;AAChC,IAAMsJ,EwB6JAmJ,CAAC,CAAC,AvBqBJgjB,CuBrBK,GAAGz1B,ApB1KI4hB,CoB0KH,ExB7JI,CwB6JD,AvBqBJ,AG/LIA,CoB0KC,AvBqBJ5K,CuBrBK,AxB7JE,CIbG6zK,EoB0KF71J,AvBqBJ,CDlLO,ACkLLqtB,KuBrBQ,AvBqBH,AG/LDwoI,CoB0KKt4K,AvBqBH5P,AG/LOg6E,CoB0KH,GAAG7kE,CAAC,ApB1KV,CoB0KW,AvBqBF,AG/LM,CoB0KH,AvBqBF,CAACZ,EuBrBIlX,CAAC,AvBqBF,CAAE6Z,EuBrBG,CAAC,CAAC,EvBqBE,CAAC,6CG/LxB,CAAb;AJaengB,MwB8JnB+Y,CAAC,AxB9JkB,CwB8JjB,AxB9JiBnJ,ACoLrB+4C,CuBtBK,GAAGriD,ApB1KE4hB,CoB0KD,AvBsBJ,CAAC5gB,EuBtBM,ApB1KF4gB,CoB0KG,CAAC,CxB9JO,CCoLT,CuBtBKoT,AvBsBJoE,AGhMM,CJYE9vB,GIZf,EoB0KiB,AvBsBJ,AGhMM,CoB0KDod,AvBsBH27B,CuBtBI,GAAGvqC,CAAC,AxB9JR,ACoLK,CuBtBI,AvBsBHnV,CuBtBI,GAAG3C,CAAC,CvBsBD,CAAC,CuBtBG,CAAC,CAAC;AxB7J5C,IwB8JI,AxB9JEuJ,ICqLF,IAAK84C,EDrLO,GAAG,ACqLL,AGjMK,CHiMJ++H,GDrLQ,CIZX,SHiMgB,KAAK,IAAI,EAAG;ADrLhB1nL,IwBgKpB,GxBhKoB,CAAA6P,ECuLnBo6K,CuBvBMhhL,MAAM,CxBhKO,GAAA4G,GCuLL,CAACwP,KAAK,CDvLD,GCuLO,CAAC,GAAGspC,KAAK,CAACg/H,aAAe;ADtLxD,EwBgKE,ExBhKI73K,MCuLDm6K,KGjMY,IJUI,GAAG,ECuLL,CAAC7wJ,CDvLQ,ECuLL,IAAM,CAAC,GAAGuvB,KAAK,CAACg/H,aAAe;ADvLzB3nL,EwBiK3B,KxBjK2B,CAAA8P,ECyLxBo6K,OGlMc,EHkML,CAAClsK,EGnME,CJUY,GAAAlO,QCyLA,CAAE,CAAC,GAAG64C,EDzLN,GCyLW,CAACg/H,aAAc,CAAC;AuBvBxD,AxBjKA,IAAM53K,IC0LF,CAAC,IGnMU8qC,EHmMJ,QGnMIA,CJSW,AITA3yB,GJSG,CITHA,CAAK,CAAL,CJSO,AITlB,CAFE;AoB6KjB,AxBlKkCloB,OAAA,CAAA+P,EC4L7Bk6K,GGpMUpvI,UAAAA,CHoMI,AGpMO3yB,CHoMNrM,GD5Lc,AC4LX,AGpMGqM,CHoMD,AGpMM,CHoML,AGpMA,CJQQnY,AIRnB,CHoMa,AGvMX,CHuMY,EAAE,CAAE,CAAC,cD5LA;AwBmKlC,AxBlKA,IAAMC,MC6LDk6K,GGrMUrvI,EJQE,GAAG,CC6LN,CAACh/B,ED7LS,CC6LN,AGrMHg/B,CHqMK,AGrMM3yB,CHqML,EAAE,CAAC,AGrMEA,CAAK,CHqML,AGrMA,CHqME,AGrMb,CHqMc,AGzMZ;AoB+KjB,AxBnKyBloB,OAAA,CAAAgQ,AC+LrB,KGtMW6qC,MJOU,GAAA7qC,CIPV6qC,CAAW3yB,IAAAA,CAAK,CAAL,CAAX,EJOU;AwBoKzB,AxBnKA,IAAMjY,KIbI,aJac,GAAG,IAAI;AwBoK/B,AxBpKgCjQ,OAAA,AIpBhB,CJoBgBiQ,ACgM5B,kBDhM4B,GAAAA,kBAAA;AAChC,IAAMC,ICgMF,IAAIm6K,CDhMO,AILAj1I,GJKG,IAAI,GCgMH,GAAG,KAAK;ADhMJp1C,EwBsKrBymM,KAAKA,AxBtKgB,CwBsKfzrL,AxBtKe9K,ACiMnB,CuB3BK,EAAEjH,CvB2BF0/C,KuB3BQ,AxBtKM,ACiMT,CAACy/H,CuB3BI,CxBtKIl4K,SAAA,CCiMI,IAAIi6K,iBAAiB,EAAG;ADhMnD,IwBsKI,AxBtKEh6K,IwBsKElH,EvB4BH,IuB5BS,AvB4BLqhL,KuB5BU,CxBtKG,GAAG,ACkMP,CuB5BM,CAAC,CvB4BJ,CuB5BM,AxBtKE,GCkMJ;ADlMKtqL,CIlFN,EAkFtB,GoBuKIiJ,CxBvKwB,CAAAkH,ECmMzB,EuB5BO,EvB4BFw4C,CuB5BK,IAAIy9I,AvB4BJ,CAAC9+L,GuB5BO,CAAC,AxBvKM,CwBuKL,CvB4BH,CDnMQ6I,ACmMPw8C,gBDnMO,GCmMY,EAAG;ADlM7C,IwBuKI,AxBvKEv8C,MIAM0nD,EJAE,ACoMR,GDpMW,CIALA,CAAOs5H,EJAE,MIDnB;AJCoBpxL,OAAA,CAAAoQ,ICqMhB,GGnMW,CJFK,GAAAA,QAAA;AACtB,IwBwKI,AxBxKEC,KIGK,GHkML,IAAMk6K,GDrMS,GAAG,IAAI,ACqMN,GAAGpqK,MAAM,CAAC9Z,MAAM,CAAC,CAAC;ADrMXrG,IwByKzB,GxBzKyB,CAAAqQ,EwByKnBq2L,EAAE,AvB6BNpc,AGlMQ,GoBqKC,CAAC,CAAC,CAAC,GvB6BH,AGlMD,EJJe,CCsMXF,CGlMJ,CJJe/5K,AIIN8gL,QAAT,EAAmB,CHkMF,CAAE5G,GDtMJ,OCsMc,GAAGvlK,KAAM,CAAC;ADrMrD,IAAM1U,QCuMA,GGnMW,CHmMLk6K,KDvMW,GAAG,GCuMH,CDvMO,ECuMJD,UAAU,GAAGD,SAAS;ADvMjBtqL,IwB0K3B,GxB1K2B,CAAAsQ,EwB0KrBq2L,EAAE,AvB8BNh+I,GuB9BS,CAAC,CAAC,AvB8BN,AGnMQ,CoBqKD,AvB8BNrhD,IGpMK,EHoMC,CDxMa,ACwMZy0B,GDxMYzrB,KCwMJ,CAACqN,WDxMG,ICwMY,CAAE8sK,cAAc,EAAED,WAAY,CAAC;ADtM1E,IAAMj6K,QCuMAo4C,GGnMWwoI,EHmMN,CAAC7pL,KGrMK,CJFS,ACuMR,CAACgmC,EDvMU,KAAK,UCuME,CAAC,CAAC;ADvMHttC,IwB0K/B,GxB1K+B,CAAAuQ,EwB0KzBq2L,AvB+BL,CAAC,GuB/BQ,GAAG,AvB+BL,EuB/BO,EvB+BFj+I,KAAK,AGpMM,CHoMLrhD,CDzMY,GAAAiJ,ECyMN,CAACiiE,iBDzMK,GCyMe,EAAG;ADxMrD,IwB0KI,AxB1KEhiE,IwB0KElK,CAAC,ApBzKC,GHyMJ,aD1MqB,GAAG,KAAK;AAACtG,IwB2KhC,GxB3KgC,AIDzB,CoB4KH+9B,AxB3K4BvtB,CwB2K3B,GvBgCH,IAAMk6K,WAAW,ED3Ma,CC2MV,ED3MUl6K,EC2MNkmB,cAAO,CAAEi0J,ID3MH,CC2MQ,CAACpyK,CAAC,EAAEoyK,KAAK,CAAC9xK,CAAC,EAAE,CAAE,CAAC;AD1M5D,IwB4KI,AxB5KEpI,KwB4KGnK,CAAC,EvB+BJokL,CuB/BO,ApBrKE,CoBqKD,EAAEpkL,CAAC,GAAGogM,EAAE,ApBrKP,CHoME,CAAC3uK,CuB/BO4uK,AxB5KE,EwB4KA,ApBrKZ,CJPe,AIONngL,CoBqKKlgB,CAAC,EAAE,CxB5KG,AC2MR,AGpMZ,CoBqKmB,AvB+BLqiD,CGpME,IHoMG,CAACrhD,MAAO,CAAC;AD3MPtH,MwB6K9B4mM,CxB7K8B,CAAAn2L,EwB6K1B,CAAC3K,CvBgCL6iD,GuBhCS,ApBrKEniC,CoBqKD,CAAC,AvBgCN,CuBhCO,AvBgCNlf,EGrMKkf,CAAMg0B,GHqML,AGrMR,CHqMSoS,ID7MiB,AC6Mb,GD7Man8C,AC6MV4G,IAAI,CAACa,GAAG,CAAEywC,KAAK,CAACy+H,MD7MN,CC6Ma,EAAE/vK,IAAI,CAACY,GAAG,CAAE0wC,KAAK,CAAC0+H,OAAO,EAAE1+H,KAAK,CAACrhD,MAAM,CAACslD,IAAI,GAAG5nC,KAAM,CAAE,CAAC;AD5MzG,IwB6KI,AxB7KEtU,QC6MAi4C,KAAK,CAACrhD,MAAM,CD7MS,AC6MR2lD,GD7MW,KAAK,cC6MM,CAAC,CAAC;AD7MPjtD,IwB+KhC,GxB/KgC,CAAA0Q,CwB+K3BpK,CAAC,EvB+BJ+jL,CuB/BO,CAAC,EAAE/jL,CAAC,GAAG,CAAC,EAAEA,AvB+BN,CuB/BO,EAAE,AvB+BN,EuB/BQ,CxB/KQ,CC8MZ,ED9MYoK,qBAAA;AACpC,IAAMC,EwB+KA,KAAKotB,CAAC,AvBgCN,GuBhCS,CAAC,AvBgCJ6sJ,EuBhCM7sJ,CAAC,GAAG,CAAC,EAAEA,CAAC,AvBgCJ,CD/MO,CwB+KD,CvBgCH,CuBhCK,AxB/KE,GC+MHrH,ED/MQ,YC+MD,CAAEi0J,KAAK,CAACpyK,CAAC,EAAEoyK,KAAK,CAAC9xK,CAAC,EAAE,CAAE,CAAC;AD/MrB7Y,CI3Fd,EA0GtB,IJfoC,CwBgL9B4mM,AxBhL8Bj2L,IwBgL1B,AvBgCNi6K,CuBhCOtkL,CAAC,GAAGqgM,EAAE,GAAG5oK,AvBgCN,CuBhCO,AvBgCNhG,CuBhCO,GAAG,IAAI,AxBhLO,CwBgLN1Z,AvBgCN,CAAEsqC,CDhNUh4C,ICgNL,CAACrJ,CuBhCM,CAAChB,CAAC,GAAG,AvBgCJ,CuBhCK,AvBgCJ,GuBhCOy3B,CAAC,CAAC,MxBhLb;AACtC,IAAMntB,EwBgLA,IpBjKMknD,EHkMNnP,IGlMMmP,CHkMD,AGlMQhuC,CHkMPxiB,MAAM,AGnMhB,CHmMiBy0B,EDjNU,GAAG,GCiNL,CAACne,CDjNS,ECiNN,CAAEgtK,UAAW,CAAC,CAACptK,GAAG,CAAEktK,WAAY,CAAC;ADjN1B1qL,IwBiLlC,GxBjLkC,CAAA4Q,ICkNhC+3C,GGlMW,EHkMN,CAACrhD,MAAM,CAACgmC,MDlNmB,GAAA18B,QCkNF,CAAC,CAAC,aDlNA;AACtC,IwBkLIg2L,AxBlLE/1L,IwBkLE,CAAC,CAAC,EvBiCJy5K,CuBjCO,CAAC,CpBlKG,EoBkKA,CAAC,CAAC,EvBiCJ,CuBjCOtvK,CAAC,CAACzC,AvBiCN4H,CuBjCO,GxBlLK,ECmNN,CDnNS,ACmNR9Z,KDnNa,CCmNP,CAAC,CAAC;ADnNMrG,IwBmLnC4mM,GxBnLmC,CwBmL/B,AxBnL+B/1L,CwBmL9B,CAAC,AvBkCL,CAAC,CGpMQ,CoBkKD,CAAC,GAAG,AvBkCL,CuBlCM,CAAC,EpBlKL,CoBkKQmK,CAAC,CAACnC,CAAC,ApBlKX,CAASs4K,MJjBgB,EIiBzB,CJjByBtgL,CIiBN,uBJjBM;AACvC,IwBmLI+1L,AxBnLE91L,IwBmLE,CAAC,CAAC,EvBmCJgL,AGrMQq1K,CoBkKD,CAAC,GAAG,CAAC,CAAC,AvBmCN,CAACp1K,AGrMAo1K,CAAS9qL,CoBkKD2U,CAAC,CAACgS,AvBmCN,CuBnCO,AvBmCL,CuBnCM,CAAC,ApBlKb,CJjBgB,GAAG,CIiBC,CAAxB,EAA2B,CJjBC,8ECsNwE,CAAC;ADtNxEhtB,OAAA,CAAA8Q,ICuNjC63C,KAAK,AGrMQ,CHqMPy/H,IGrMA,QHqMY,EDvNe,CCuNZ,EDvNYt3K,GCuNP,qBDvNO;AACvC,IwBoLI,AxBpLEC,IwBoLEqH,CAAC,CvBoCJ,EuBpCO,CAAC,MxBpLQ,GAAG,KAAK;AAACpY,IwBqL1B,GxBrL0B,CAAA+Q,EwBqLpBotF,CAAC,GAAG/lF,CAAC,ApBjKE,QJpBa,GAAArH,eAAA;AAC9B,IwBqLI,AxBrLEC,IwBqLE61L,EAAE,AvBoCL,OGrMc,EJpBE,GAAG,AImBP,KJnBY;AAAC7mM,IwBsL1B,GxBtL0B,CAAAgR,EwBsLpB81L,AvBoCL,EuBpCO,CpBjKG3V,CHqML7G,CuBpCK,CAAC,CAAC,CAAC,GpBjKH6G,CAAS,CJrBM,AC0NX,AGrMJ,CAFE,EJnBangL,EC0NN,IAAI,EAAG,OD1ND;AAC9B,IAAMC,QC2NA,CGtMSkgL,GHsMJ,IAAI,CAACjJ,AGtMDiJ,CAAS,CAAT,CJrBW,AIkBT,GJlBY,KAAK,OC2NA,EAAG;AD3NFnxL,IwBuL/B,GxBvL+B,CwBuL3BonC,AxBvL2Bn2B,CwBuL1B,IpBjKMkgL,CHuMR,OGvMQA,CAAS,CAAT,KJtBoB,GAAAlgL,oBAAA;AACnC,IwBwLI,AxBxLEC,GwBwLC,EpBvKG,KH4MHy3C,KAAK,CAAC1/C,ID7Na,EC6NP,CD7NU,AC6NT4S,GAAG,CAAE,CD7NS,AC6NR,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,CAC3Bqc,kBAAkB,CAAEywB,KAAK,CAACrhD,MAAM,CAACie,MAAO,CAAC,CACzCvH,cAAc,CAAEssK,SAAU,CAAC,CAC3B9sK,GAAG,CAAEmrC,KAAK,CAACrhD,MAAM,CAACy0B,QAAS,CAAC;ADhOF/7B,MwByL7BsG,CAAC,AxBzL4B,AIWlB,CJXkB4K,EwByLzBitF,CAAC,CvByCL,CAAC,CuBzCO/lF,CAAC,IvByCF,SDlOsB,GAAAlH,oBAAA;AACnC,IAAMC,EwB0LA,IAAIy1L,GpBlKK,CoBkKD,AvByCP,CuBzCQtgM,CAAC,GAAGqgM,EAAE,CpBlKN,EoBkKSrgM,AxB1LE,CwB0LD,CAAC,CxB1LG,AIwBd,CAASkgB,GoBkKO,CAAC,AxB1LE,CIwBnB,CoBkKmB,CpBlKH;AJxBIxmB,OAAA,CwB2L3B,AxB3L2BmR,MCoO5B6pH,CG3MU,CAACx0G,EH2MP,CAAC8Y,EG3MM9Y,CAAMjC,CAAP,EH2MC,AG3MSiC,CH2MRlJ,EDpOgB,ECoOZ,AG3MIkJ,CJzBQrV,ACoOVw3C,AG3MQjlC,CAAhB,EAAmB8C,EH2MN,CAAClf,EG3MKkf,CAAMxL,CAAzB,CAAP,CH2M2B,CAAC+gB,ODpOH,CCoOY,CAAC;ADnOhD,IAAM3qB,IwB2LE,KAAK2sB,CAAC,AvByCPi9F,GuBzCU10H,CAAC,AvByCP,CAACi5B,EuBzCS,CAAC,EAAExB,AxB3LE,CwB2LD,ExB3LI,CwB2LDogE,AvByCP,CuBzCQ,AvByCPtiF,EuBzCSkiB,CAAC,AxB3LE,ACoOT,CAAE,CuBzCO,AvByCN,EuBzCQ,AvByCN,CAAC,EAAE,CAAE,CAAE,CAAC,CAAC7F,kBAAkB,CAAEywB,KAAK,CAACrhD,MAAM,CAACie,MAAO,CAAC;ADpO7CvlB,KIQlB,EJRkB,CAAAoR,EwB4LzB,IAAIw1L,IAAI,CAACtgM,CAAC,GAAGqgM,EAAE,GAAG5oK,AxB5LO,CwB4LN,CAAC,CxB5LK3sB,IwB4LA,CAAC,EAAE,axB5LH;AACnC,IAAMC,QwB4LMw1L,EAAE,AvByCP,EG1MW,CoBiKDC,EAAE,KxB5LO,GAAG,KAAK;AAAC9mM,OAAA,CAAAqR,IwB8LvB,ApBlKE,EH0MP,CuBxCQ,MpBlKD,IAAA,CAAS8/K,EJ5BY,GAAA9/K,GI4BrB,EAAmB,eJ5BE;AACnC,IAAMC,QI4BQ6/K,EoBkKA,AvBwCP,IAAK95K,EG1ME85K,CAAS9qL,CH0MP,CAACgT,CDtOS,ECsON,CDtOS,ACsOPsvC,AG1MR,KJ5BoB,ACsOP,AG1MO,CH0MNrhD,AG1MlB,EAA2B,IH0MH,CAAC88B,EAAE,AG1MO,CH0MNxlB,GAAG,CAAEo8G,AG1MN,IH0MU,CAACz7F,SAAU,CAAE,CAAC,GAAGynJ,UAAU,EAAG;ADtO1ChnL,OAAA,CAAAsR,MwB+LrB81B,CAAC,ApBlKE,CH2MT9/B,EuBzCUw/L,EAAE,EvByCN,CuBzCSD,AvByCRnnK,EuBzCU,GxB/LU,CCwOd,CAAEipB,CDxOYr3C,ICwOP,CAACrI,MAAO,CAAC,QDxOF;AACnC,IAAMsI,UwB+LQq1L,AvB0CP,CAAC,EG5MW,CoBkKD,CAACx/J,CAAC,CvB0CN,CG7MG,CoBmKMu/J,CxB/LG,CwB+LD,ExB/LI,CwB+LDrgM,CAAC,CAAC,ExB/LI,EwB+LAsgM,IAAI,CAACx/J,CAAC,GAAGu/J,EAAE,GAAG5oK,CAAC,CAAC;AxB/Lf/9B,OAAA,CAAAuR,IwBgMvB,CAAC,ApBlKE4/K,GH6MPpK,KuB3Ca,ApBlKNoK,CH6MD,AG7MU,CoBkKD0V,AvB2CR11I,AG7MA,CAFE,CoBoKQ,GxBhMU,GAAA5/C,oBAAA,CC2OS,CAAEo3C,KAAK,CAACrhD,MAAM,CAAC88B,EAAE,EAAEukB,KAAK,CAAC1/C,MAAO,CAAC;AD1O7E,IAAMuI,QwBiMM,CpBnKG2/K,GH6MPn2D,IAAI,CAACh6F,AG7MEmwJ,CAAS,CAAT,CJ9BW,AI2BT,GJ3BY,KAAK,GC2OP,CAAEpK,MAAM,EAAEp+H,KAAK,CAAC1/C,MAAO,CAAC;AD3OhBjJ,OAAA,CAAAwR,EwBkMzB,GpBnKK2/K,CH8MR,OG9MQA,CAAS,CAAT,CAJE,IJ3BkB,GAAA3/K,oBAAA;AACnC,IAAMC,IwBkME,IvB4CF,CG/MS0/K,QAAAA,CAAS,CAAT,CJ/BW,GAAG,KAAK;AAACnxL,MwBmM7B,CxBnM6B,CAAAyR,CI0BzB,CHsNL,kBDhP8B,GAAAA,oBAAA;AACnC,IAAMC,EwBoMA,CpB9KY,CH2Nd,CAAC,CuB7CKk1L,IAAI,CAACtgM,AvB6CJ,CuB7CK,GAAGqgM,AvB6CHh+I,EuB7CK,GAAGriD,AvB6CH,CuB7CI,AxBpME,ACiPLgB,CuB7CI,ExBpMI,GwBoMC,AvB6CH,CuB7CI,AvB6CHkrE,CDjPM,CwBoMD,kBvB6Ce,EAAG;ADjPhBxyE,OAAA,CwBqM5B,AxBrM4B0R,ECmP/Bi3C,GuB9CQ5qB,ApBnKE,CoBmKD,CvB8CJ,CAACz2B,CuB9CMhB,CAAC,GAAG,CAAC,AvB8CL,AGjNF,CHiNGsmD,CuB9CM7uB,CAAC,EvB8CH,AGjNP,CoBmKaogE,ApBnKJ33E,CoBmKK,AxBrMO,CCmPXnP,CuB9CM0mB,CAAC,AxBrMIrsB,CIkCrB,CoBmKmB,AvB8CL,CAACwG,AGjNC,CoBmKK,EvB8CH,CAAEywC,KAAK,CAACy+H,OAAO,CDnPZ,CCmPc/vK,IAAI,CAACY,GAAG,CAAE0wC,KAAK,CAAC0+H,OAAO,EAAE1+H,KAAK,CAACrhD,MAAM,CAACslD,IAAI,GAAG5nC,KAAM,CAAE,CAAC;ADlPxG,IAAMrT,MwBqMI,AvB8CLg3C,KAAK,AGjNO,CoBmKDo+I,AvB8CLz/L,AGjNOkf,KAAAA,CHiND,AGjNOjC,CHiNN0oC,AGjND,EJlCU,AIkCAzmC,CoBmKD,ExBrMI,CwBqMDogL,CpBnKFpgL,CAAM9C,CAAhB,CoBmKgB,AxBrME,CwBqMDpd,ApBnKEkgB,CoBmKD,GAAGmgL,CpBnKFngL,CoBmKI,ApBnKExL,CAAzB,EoBmK0B+iB,ApBnKEvX,CoBmKD,CAAC,AvB8CL,CAAC,CAAC,CuB9CMogL,ApBnKHpgL,CAAMzL,CAAlC,CAAP,CoBmK0C,CAACzU,CAAC,GAAGqgM,EAAE,GAAGrgM,CAAC,CAAC;AxBrM5BtG,OAAA,CAAA2R,EwBsM1Bk1L,AvB8CLxc,EuB9CO,GAAGyc,EAAE,IvB8CD,GAAG,IAAI,CDpPa,GAAAn1L,qBAAA;AACpC,IAAMC,ICqPF,EuB9CM,GAAG,YxBvMc,GAAG,KAAK;AAAC5R,OAAA,CAAA4R,ACuPhCoT,IuB/CQ,CvB+CH,GAAG,CAAC,YDvPuB,GAAApT,qBAAA;AACpC,CI7GwB,EAoJtB,CJvCIC,ICuPFs4K,IuB/CQ/iJ,CAAC,GAAG0/J,EAAE,GAAGD,EAAE,EvB+CF,CDvPO,ECuPJ,CDvPO,ICuPF,CDvPO;AAAC7mM,OAAA,CAAA6R,EIwCzBimD,EoBiKA8uI,IAAI,ApBjKJ9uI,CoBiKK1wB,ApBjKEgpJ,CoBiKD,GAAGuW,EAAE,EpBlKrB,CoBkKwB5oK,CAAC,CAAC,ExBzMS,CwByMNqJ,CAAC,CxBzMKv1B,GwByMDvL,CAAC,GAAG,CAAC,GAAGsgM,IAAI,CAACx/J,CAAC,GAAGu/J,EAAE,AxBzMlB,GwByMqB5oK,CAAC,CAAC,GAAG6oK,IAAI,CAACx/J,CAAC,GAAGu/J,EAAE,GAAGrgM,CAAC,CAAC,GAAGygM,UAAU;AxBxM5F,IAAMj1L,ICwPF,EuB/CM,CAAC,IpBjKM,IoBiKE,EAAE+0L,EAAE,GxBzMK,GAAG,KAAK;AAAC7mM,OAAA,CwB0M7B,AxB1M6B8R,ACyPjC,MG/MY,gBJ1CqB,GAAAA,sBAAA;AACrC,IAAMC,EwB0MA,EvB+CF,IG/MU,SAAA,IAAA,CJ1Cc,AI0CLo/K,GJ1CQ,KAAK,AI0CtB,EAAmB;AJ1CInxL,IwB2MjC,CAAC,ExB3MgC,CAAA+R,II2CvB+lD,CoBgKD,EAAE1/C,CAAC,EAAE,ApBhKJ0/C,CoBgKK,ApBhKEs5H,QAAP,CAAgBD,EJ3CO,GAAAp/K,GI2CPo/K,CAAS5sK,CAAzB,CAAA,IACFuzC,MAAAA,CAAOs5H,KJ5CkB,GI4CzB,CAAgBD,QAAAA,CAASztK,CAAzB,CADE,IAEFo0C,MAAAA,CAAOs5H,QAAP,CAAgBD,QAAAA,CAASn2K,CAAzB,CAFE,IAGF88C,MAAAA,CAAOs5H,QAAP,CAAgBD,QAAAA,CAASp2K,CAAzB,CAHF,EAG+B;AJ7CzC,IAAM/I,IC0PF,IAAKq4K,KG5MU,GJ9CG,GAAG,AC0PL,IACfV,CD3PyB,WC2Pb,CAACnqK,iBAAiB,CAAEmpC,KAAK,CAACrhD,MAAM,CAACy0B,QAAS,CAAC,GAAGqgJ,GAAG,IAC7D,CAAC,IAAK,CAAC,GAAGwN,cAAc,CAAChrK,GAAG,CAAE+pC,KAAK,CAACrhD,MAAM,CAACgrB,UAAW,CAAC,CAAE,GAAG8pJ,GAAG,IAC/DyN,kBAAkB,CAACrqK,iBAAiB,CAAEmpC,KAAK,CAAC1/C,MAAO,CAAC,GAAG,CAAC,EAAG;AD7PjCjJ,IwB6M3BiJ,GxB7M2B,CAAA+I,EwB6MrB,AvBkDL22C,CuBlDM37B,CAAC,GAAG45K,AvBkDL,CAAC9vL,GuBlDQ,ApB9JE,CoB8JD,CAAC,GAAG6vL,AxB7MO,AI8CZ,EoB+JO,CxB7MK30L,EwB6MF,AvBkDL,CuBlDM,AvBkDJ40K,CuBlDK,GAAGggB,IAAI,CAAC,CAAC,EvBkDD,CuBlDID,AxB7MZ,AC+PS,EuBlDK,GAAG,CAAC,CAAC;AxB5MlD,IwB6MI19L,AxB7MEgJ,MwB6MI,AvBmDL03K,CuBnDM9wK,CAAC,GAAG,ApB9JEs4K,CoB8JDyV,IAAI,AxB7ME,CwB6MD,CAAC,AvBmDL,CDhQQ,ACgQPtpL,AGjND6zK,CAAS5sK,CoB8JDoiL,ApBhKN,EoBgKQ,AvBmDL,CDhQQ,ACgQNh+I,EuBnDM,CAAC,CAAC,CvBmDH,CAACrhD,CuBnDKs/L,IAAI,CAAC,AvBmDJ,CuBnDK,AvBmDJ7qK,GuBnDO4qK,EAAE,GAAG,AvBmDH,CuBnDI,AvBmDH,CuBnDI,GAAG19L,MAAM,CAAC+jB,CAAC,IAAI45K,IAAI,CAAC,CAAC,GAAGD,EAAE,GAAG,CAAC,CAAC;AxB7MnD3mM,IwB8M3BiJ,GxB9M2B,CAAAgJ,EwB8MrB,AvBmDL23K,CuBnDMrxK,CAAC,GAAG,ApB9JE44K,CoB8JDyV,IAAI,CAAC,CAAC,CpB9JLzV,CJhDc,ACiQZ,AGjNOztK,CoB8JDijL,AvBmDLrpL,AGpND,EoBiKQ,AxB9MIrL,ECiQP,CuBnDM,AvBmDJ02C,CuBnDK,CAAC,GAAGi+I,AvBmDJ,CAACt/L,GuBnDO,CAAC,CAAC,CvBmDH,CDjQP,ACiQQgrB,CuBnDKq0K,EAAE,GAAG,CAAC,CAAC,EvBmDD,CuBnDI19L,AvBmDH,MuBnDS,CAAC+jB,CAAC,GAAG45K,IAAI,CAAC,CAAC,GAAGD,EAAE,GAAG,CAAC,CAAC,GAAG19L,MAAM,CAAC4P,CAAC,IAAI+tL,IAAI,CAAC,CAAC,GAAGD,EAAE,GAAG,CAAC,CAAC;AxB7MhH,IwB+MI,AxB/MEz0L,IwB+ME9L,EvBkDHyjL,GuBlDQ,CAAC5gL,CpB/JGkoL,KoB+JG,CAAC54K,CAAC,CAAC,ApB/JN44K,CAASn2K,CAJP,EoBmKQ5U,AxB/ME,CCiQN,CAACkX,CDjQQ,EwB+MA,CAACrU,AvBkDL,CAAE0/C,CDjQO,IwB+ME,AvBkDJ,CuBlDK9vC,AvBkDJ5P,CuBlDK,CAAC,IAAI7C,AvBkDH,CAAC,IuBlDO,CAAC6C,MAAM,CAAC+jB,CAAC,CAAC,IAAI/jB,MAAM,CAACsP,CAAC,KAAK0hB,QAAQ,IAAIhxB,MAAM,CAAC4P,CAAC,KAAKohB,QAAQ,IAAIhxB,MAAM,CAAC+jB,CAAC,KAAKiN,QAAQ,EAAE;AxB/MpGj6B,MwBgNhC,CxBhNgC,CAAAkS,ECmQjCm4K,EuBnDQ,GpB/JI8G,MHkND,EGlNCA,CHkNE,AGlNOp2K,KHkNF,EDnQc,GAAA7I,cwBgNUjJ,MAAM,CAACmsC,ExBhNjB,MwBgNyB,CAAC,CAAE,SAAQp6B,CAAC,CAACo6B,QAAQ,CAAC,CAAE,SAAQ,IAAI,CAACA,QAAQ,CAAC,CAAE,GAAE;AxB/MjH,IwBgNI,AxBhNEjjC,MCoQD,CGzNO,MHyNA,IAAI,KDpQY,GAAG,KAAK;AAACnS,IwBkNjC,GxBlNiC,CAAAmS,ACsQjC,GuBpDOlJ,MAAM,axBlNoB,GAAAkJ,sBAAA;AACrC,EwBkNE,ExBlNIC,ICuQF,OAAO,AGrNM,KHqND,AGrNN,aJlDyB,GAAG,KAAK;AAACpS,EwBmN1C,IvBsDC,CDzQyC,ACyQxC,AGrOY,CJpC4BoS,6BAAA,GAAAA,6BAAA;AwBoN5C,AxBnNA,IAAMC,AC0QJ,CAAC,CAAC,CAAC,KD1QS,CIoDC,EJpDE,IAAI,GIoDN,KAAA,CAASmU,KAAT,EAAgB;AoBgK/B,AxBpNsBxmB,IC4QpB0nH,GD5QoB,CAAAr1G,CC4QpB,CAAKqa,KGvNU,CJrDK,CC4QR,ED5QQra,CC4QL,OD5QK,KC4QO;AuBvD7B,AxBpNA,IAAMC,EC6QHq2C,KAAK,CAAC4+D,CGxNM/gG,CJrDC,GAAG,CIqDJA,CAAMjC,CADJ,CJpDM,CC6QJ,CAAC7N,mBAAmB,CAAE,aAAa,EAAEm0K,aAAc,CAAC;AD7Q/C7qL,MC+QrB2oD,CD/QqB,CAAAr2C,GC+QhB,CAACi1G,CGzNM/gG,KJtDS,AIsDTA,CAAM9C,CAFJ,CJpDOpR,CC+QL,CAACoE,QD/QI,WC+Qe,CAAE,aAAa,EAAEo0K,aAAc,CAAC;AD9QvE,EwBsNE1sK,CAACA,CAAC4oL,AxBtNEz0L,EC+QHo2C,CuBzDI,EAAEs+I,EvByDD,CAAC1/E,CGzNM/gG,EoBgKA,CxBtNG,CwBsND9lB,CpBhKF8lB,CJtDM,AIsDAxL,CAHJ,EoBmKK,AvByDH,CD/QM,AC+QLtE,CuBzDI,kBvByDe,CAAE,eAAe,EAAEq0K,WAAY,CAAC;AD/Q7C/qL,IwBuNtB,EvByDD2oD,CDhRuB,CwBuNlBjoD,AxBvNkB6R,GCgRlB,CAACg1G,CuBzDI,ApBhKE/gG,KoBgKGzhB,ApBhKHyhB,CAAMzL,CJvDK,ECgRP,CDhROxI,ACgRNmE,IuBzDO,EAAE,MxBvNH,OCgRa,CAAE,OAAO,EAAEs0K,YAAa,CAAC;AD/QhE,IAAMx4K,EwBuNA,AvB0DHm2C,GG/NO,EH+NF,CAAC4+D,CuB1DI,IAAI,CAAClpG,IvB0DC,CDjRM,ACiRL3H,GuB1DM,AxBvNE,CwBuNDuwL,GxBvNK,GwBuNC,GAAG,CAAC,GAAGD,EvB0DD,CuB1DI,AvB0DF,CuB1DG,YvB0DU,EAAE/b,aAAc,CAAC;ADjRtCjrL,IwBwN7B,CAAC,CvB0DF2oD,CDlR8B,CAAAn2C,GwBwNtB,AvB0DH,CAAC+0G,UAAU,CAAC7wG,IDlRa,GAAAlE,YCkRM,CAAE,MDlRR,KCkRmB,EAAEu4K,WAAY,CAAC;ADjRnE,IAAMt4K,CI6BW,CoB2LX,AvB4DH,IAAKk2C,KAAK,CAACogI,KDpRS,GAAG,IAAI,QCoRI,KAAK,IAAI,EAAG;ADpRf/oL,MwByNzB,CxBzNyB,CAAAyS,ACsR3Bk2C,EuB7DM,CAACtqC,EvB6DF,AG5NM,CH4NL0qK,KuB7DS,CAACke,KxBzNW,CwByNL,ExBzNKx0L,CwByNF,CAAC,GAAGu0L,CvB6DH,CAACtwL,CuB7DK,CAAC,GAAGhW,KAAK,AxBzNd,SCsRmB,CAAE,SAAS,EAAE2oL,SAAU,CAAC;ADrR1E,IwByNI,AxBzNE32K,ICsRFi2C,IG5NU,CH4NL,CAACogI,ODtRa,AI0DT,GJ1DY,CI0DZ,CAASoI,EJ1DO,MCsRA,AG5NhB,EAAmB,CH4NA,IAAI;ADtRNnxL,EwB0N7B,IvB8DC,CDxR4B,CAAA0S,II2DjBolD,MAAAA,CAAOs5H,MJ3DU,EI2DjB,CJ3DiB1+K,AI2DDy+K,QAAAA,CAAS5sK,CAAzB,CAAA,IACFuzC,EJ5DmB,II4DnBA,CAAOs5H,QAAP,CAAgBD,QAAAA,CAASztK,CAAzB,CADE,IAEFo0C,MAAAA,CAAOs5H,QAAP,CAAgBD,QAAAA,CAASn2K,CAAzB,CAFF,EAE+B;AJ5DzC,EwB0NE,ExB1NIrI,aI6Da,MJ7DM,GAAG,IAAI;AwB2NhC,AxB3NiC3S,MCyR9B,CDzR8B,CAAA2S,WI8DZ,KADF,GJ7Dc,GAAAA,mBAAA;AwB4NjC,AxB3NA,IAAMC,AC0RJ,CAAC,UG5Ncu+K,IJ9DI,GAAG,CI8DPA,CAAS5sK,CAFP,CJ5DS;AAACvkB,OAAA,CAAA4S,OI+DZu+K,QJ/DY,AI+DZA,CAASztK,CAHP,CJ5DU9Q,eAAA;AAC7B,EwB6NE0K,ExB7NIzK,AC2RJ,EuB9DIyK,CAACiI,MAAM,EAAE,ApB9JE4rK,KJ/DK,GAAG,AI+DRA,CAASn2K,GJ/DG;AAAChb,IwB8N1B,AvB8DF,GD5R4B,CAAA6S,CwB8NrB,EpBnKG,EoBmKCvM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGif,AxB9NM,GAAA1S,GwB8NA,CAACwL,QAAQ,CAAChY,GxB9NV,GwB8NgB,EAAEC,CAAC,EAAE,EAAE;AxB7NrD,IAAMwM,AC4RJ,EuB9DI,IAAI,CAACuL,QAAQ,CAAC/X,CAAC,CAAC,GAAGif,GxB9NK,GwB8NC,AxB9NE,CwB8NDlH,GxB9NK,KwB8NG,CAAC/X,CAAC,CAAC;AxB9NLtG,IwB+NlC,GxB/NkC,CAAA8S,OIiErB,KAAP,YJjE4B,GAAAA,wBAAA;AACtC,IwBgOI,AxBhOEC,AC6RJ,GGzOa,CHyOP41C,GuB7DG,EvB6DE,EuB7DE,CvB6DFv9B,cD7RmB,GAAG,IAAI,CC6R1B,CAAAs8F,KAAA,CAAO;AD7RoB1nH,EwBiOtC,EvB8DA,GD/RsC,CAAA+S,AC+RhCy2K,KAAK,AG5NE,GH4NC,MG5ND,KAAA,CAAShjK,KAAT,CJnEyB,CImET,EJnESzT,0BAAA;AACxC,EwBiOE,ExBjOIC,EC+RHk9F,IAAI,EAAE,CAAE,CAAC,CG5NK,MJnEM,GAAG,CAAC;AwBkO3B,AxBlO4BlwG,MCgSzBqK,CDhSyB,CAAA2I,ICgSnB,CG5NMwT,CH4NJ,CAAC,GG5NGA,CAAMjC,CADJ,KJnEW,GAAAvR,iBAAA;AwBmO5B,AxBlOA,IAAMC,ECgSH3I,KAAK,EAAE,AG5NKkc,CH4NJ,IG5NIA,CAAM9C,CAFJ,KJlEU,GAAG,CAAC;AAAC1jB,MCiS7BuK,CDjS6B,CAAA0I,CCiS1B,EAAE,CAAC,CG5NMuT,KAAAA,CAAMxL,UJrEW,GAAA/H,qBAAA;AAChC,EwBoOEmiC,ExBpOIliC,ECiSHg4K,GGhOO,CoBmKA91I,CAAA,EAAG,KvB6DE,EAAE,CAAC,EDjSO,GAAG,CAAC;AAC7B,IwBoOI,EvB6DD+1I,EuB7DK5mK,CAAC,GAAG,EAAE,CvB6DF,EAAE,CAAC;ADjSfvkB,IwBqOI,CpBlNa,CH+QdorL,CDlSH,CAAAl4K,EwBqOUg0L,GAAG,GAAG,GAAG,EvB6DD,EAAE,CAAC,GDlSrB,GAAAh0L,mBAAA;AACA,IwBsOI,AxBtOEC,ECkSHk4K,GuB5DM,IAAI/kL,CAAC,ApB/JE,GoB+JC,CAAC,AxBtOE,EwBsOAA,CAAC,AxBtOE,GwBsOC,AvB4DH,CuB5DI,AxBtOE,CCkSJ,CuB5DIA,CAAC,EAAE,EAAE;AxBrOhC,ICkSE,CAAC,CuB5DGie,CAAC,IAAI,CpB/JG,GoB+JC,CAAClG,KpB/JF,GoB+JU,CAAC/X,ApB/JX,CoB+JY,ApB/JH6qL,CoB+JI,GAAG+V,GAAG,CpB/JnB,EAAmB;AJvEjClnM,IwBuOI,AvB6DF,GDpSF,CAAAmT,ACoSM/O,IG5NQ0zD,CH4NH,GAAG0xH,EG5NA1xH,CAAOs5H,EH4NF,CDpSnB,ACoSoBlhF,GDpSpB/8F,CCoSwB,CG5NV,CAAgBg+K,QAAAA,CAASxtK,CAAzB,CJxEd,AIwEc,IACFm0C,MAAAA,CAAOs5H,QAAP,CAAgBD,QAAAA,CAASn3K,CAAzB,CADE,IAEF89C,MAAAA,CAAOs5H,QAAP,CAAgBD,QAAAA,CAAS5zK,CAAzB,CAFE,IAGFu6C,MAAAA,CAAOs5H,QAAP,CAAgBD,QAAAA,CAASp2K,CAAzB,CAHF,EAG+B;AJ1EzC,IwBwOI,AxBxOE3H,ACqSJ,IAAMgpK,GuB7DG73J,AvB6DA,CuB7DC,EvB6DE,EDrSI,CI2EC,EJ3EE,GCqSC,CDrSG;AAACvkB,EwByOxB,KxBzOwB,CAAAoT,WI4EL,CJ5EK,GAAAA,CI2EP,WJ3EO;AAC1B,EwByOE,ExBzOIC,ACsSJ,WG1Ne89K,MJ5EM,EI4ENA,CJ5ES,AI4EAxtK,CAFP,GJ1EW;AwB0O9B,AxB1O+B3jB,ICuS7B,GDvS6B,CAAAqT,ACuSvB41K,OG1NSkI,EH0NA,GAAG,GG1NHA,CH0NOlV,AG1NEjiK,CJ7EK,AI0EZ,GJ1EY3G,YCuSE,CAAC,CAAC,GDvSJ;AwB2O/B,AxB1OA,IAAMC,ACuSJ,IAAM22K,OG1NSkH,KJ7EK,ECuSA,CDvSG,AI6ERA,CAAS5zK,CH0ND,AG9NN,EJzEU,ECuSA0+J,gBAAS,CAAC,CAAC;AuB5DxC,AxB3O8Bj8K,ICyS5B,GDzS4B,CAAAsT,ACySxB0R,KAAK,EG3NMmsK,CH2NH,CAAC,MG3NEA,CJ9Ea,AI8EJp2K,GJ9EIzH,gBAAA;AwB4O9B,AxB3OA,IAAMC,ACySJ,IAAM22K,GGjOI,MHiOK,GAAG,IAAIxzJ,CDzSG,GAAG,CAAC,SCySA,CAAC,CAAC;ADzSD12B,IC2S9B,GD3S8B,CAAAuT,AC2SxB+3K,WAAW,GAAG,IAAI3uK,GD3SM,GAAApJ,QC2SC,CAAC,CAAC,WD3SH;AAChC,EwB6OEhM,ExB7OIiM,AC2SJ,IAAM+3K,CuB9DChkL,CAAC0B,KpB9JO,CoB8JD,CvB8DC,CuB9DC,EvB8DE,AG5NV,IJ/EgB,AC2SF0T,GD3SK,CAAC,UC2SC,CAAC,CAAC;IuB7D7B,AvB8DF,GG3Oc,CoB6KR1T,AvB8DAuiL,MuB9DM,KAAK,AvB8DA,GAAG,EuB9DE,CAAC,CvB8DC7uK,CuB9DC,avB8DM,CAAC,CAAC;AD1SnC,IC4SE,EuB/DI1T,EvB+DEwiL,IuB/DI,CpB7JG,EoB6JA,CvB+DC,GuB/DGua,AvB+DA,GG5NJ,CoB6JQ,AvB+DArpL,CuB/DC,CAAC,EpB7JV,CAAS6J,KAAT,EAAgB,EH4ND,CAAC,CAAC;AD5ShCxmB,IwB8OI,AvB+DF,GD7SF,CAAAwT,AC6SQk4K,MAAM,CG5NG,EH4NA,IAAI/uK,OD7SrB,GAAAnJ,IC6S4B,CAAC,CAAC,cD7S9B;AACA,IAAMC,AC6SJ,IAAMk4K,KG5NOnlK,GJjFG,AC6SF,EG5NDA,CJjFM,AC6SF,AG5NE7C,CADJ,CJhFM,EC6SAhH,cAAO,CAAC,CAAC;AD7SR3c,IwB+OpB,AvBgEF,GD/SsB,CAAAyT,AC+ShBm4K,KG7NOplK,KH6NG,AG7NHA,CAAMxM,CJlFG,AIgFP,CH+NI,ED/SGvG,EC+SCkJ,UD/SD,IC+SQ,CAAC,CAAC;AD9SlC,IwB+OI,AxB/OEjJ,AC+SJ,IAAMm4K,EuBhEE6a,EAAE,CpB7JGlgL,EoB6JA,CAAC,AvBgEA,CuBhEC,CAAC,AxB/OE,AIkFLA,CH6NI,AG7NEjJ,CAHJ,CJ/EM,EC+SAZ,ID/SM,UC+SC,CAAC,CAAC;AD/SF3c,ICgT5B,GDhT4B,CAAA0T,ACgTtBo4K,KG7NOtlK,KH6NG,AG7NHA,CAAMzL,EH6NA,CDhTS,GAAArH,ACgTLiJ,cDhTK,ACgTE,CAAC,CAAC;AD/SlC,IwBgPI,AxBhPEhJ,ACiTJ,IAAM82K,CGnOE,CoBkKAkc,EAAE,GAAG,CAAC,CAAC,CAAC,IvBiEI,EDjTI,CCiTD,EDjTI,ECiTAjwK,WDjTa,GCiTN,CAAC,CAAC;ADjTK12B,ICkTzC,GDlTyC,CAAA2T,ACkTnCg3K,KAAK,GAAG,IAAIhuK,QDlTuB,GAAAhJ,GCkThB,CAAC,CAAC,eDlTc;AAC3C,IwBiPI,AxBjPEC,ACkTJ,CG5Se,GH4SXu2K,EuBjEIyc,IAAI,GAAGO,MxBjPQ,ECkTF,CDlTK,ECkTF,CuBjEG,IvBiEE,KDlTS;AAACnnM,IwBkPrC,AvBkEF,GDpTuC,CwBkPjCsG,AxBlPiCsN,ACoTjCm4K,CuBlEC,IpB5JM,GH8NC,GAAG,EAAE,MDpToB,GAAAn4K,mBAAA;AAEzC,IwBiPI,AxBjPEC,ACmTJ,IuBlEMkqB,AvBkEAiuJ,CuBlEC,GpB5JK,KJrFK,GAAG,CAAC,AIqFT,GH8NU,CG9NV,CAASmF,CH8NI,CAAC,CAAC,KG9Nf,EAAmB;AJrFTnxL,IwBmPpB,AvBkEF,GDrTsB,CAAA6T,CwBmPfvN,CAAC,EpB7JIwxD,CoB6JD,AvBkEFkyH,CuBlEG,EAAE1jL,CAAC,CpB7JHwxD,CAAOs5H,CoB6JD,CAAC,AxBnPG,EwBmPD9qL,CAAC,AxBnPAuN,EwBmPE,CpB7JZ,CoB6Jc,ApB7JEs9K,KH+NCnH,CAAA,EAAG,AG/NJmH,CJtFN,AIsFextK,CAAzB,CAAA,IACFm0C,MAAAA,CAAOs5H,QAAP,CAAgBD,QAAAA,CAASn3K,CAAzB,CADE,IAEF89C,MAAAA,CAAOs5H,QAAP,CAAgBD,QAAAA,CAAS5zK,CAAzB,CAFF,EAE+B;AJvFzC,IAAMzJ,EwBmPA,AvBmEH,KuBnEQiqB,CAAC,CvBmEF,CAAC,CuBnEI,CAAC,CxBnPG,ACsTL1mB,AG9NK,CoB2JD0mB,CAAC,CxBnPG,CCsTJ,CuBnEI,AvBmEHzmB,CuBnEI,CxBnPG,ACsTL,CuBnEIymB,CAAC,CvBmEF,CuBnEI,CvBmEF,CuBnEI,EvBmED,EAAE,GAAG4qB,KAAK,CAAC2/H,eAAe;ADtT5BtoL,ICwTzB,GDxTyB,CwBoPnB4mM,AxBpPmB9yL,IwBoPf,CAACxN,CAAC,GAAGqgM,EAAE,ApB3JE,EJzFM,CwBoPL5oK,CAAC,CAAC,AxBpPGjqB,AIwFR,GoB4JQ,IAAI,CAACuK,KxBpPL,GwBoPa,CAAC/X,CAAC,GAAG,CAAC,GAAGy3B,CAAC,CAAC;AxBnPnD,IAAMhqB,ACyTJ,EuBrEI,OvBqEKk4K,EGhOMkF,KJzFK,GAAG,AIyFRA,CAASxtK,CHgOHsoK,AGlOJ,CHkOI,CDzTM,CCyTH;ADzTIjsL,IwBqP1B,EvBsED,CD3T2B,CAAA+T,KC2TpBsD,EGjOO85K,EHiOH,CAAC32K,GAAG,CAAE,CGjOH22K,CJ1Fa,AI0FJn3K,CAHP,CHoOK,CD3TMjG,CC2TJ40C,KAAK,CAACk/H,SD3TF,AC2TY,CAAC;AD1T3C,IwBsPI+e,AxBtPE5yL,AC4TJ,IuBtEM,CAAC,CAAC,GAAG,CAAC,CpB5JGm9K,EoB4JA,CAAC,CAAC,GAAG,AxBtPE,CwBsPD,ApB5JNA,CAAS5zK,CJ1FC,IAAI;AAACvd,IwBuP5B4mM,AvBuEF,GD9T8B,CwBuPxB,AxBvPwB5yL,CwBuPvB,CAAC,CpBjKE,EoBiKC,AvBuEF+1K,CuBvEG,GAAG,CAAC,CAAC,GAAG,CAAC,AvBuEFA,CAAE9qK,ED9TS,GAAAjL,AC8TJ,EAAG,gBD9TC;AAChC,IwBuPI4yL,AxBvPE3yL,EC+THg2K,EuBxEK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CvBwEF,CAAC5qK,CuBxEI,AxBvPE,CwBuPD,ExBvPI,CC+TJ,GD/TQ,CC+TJJ,KAAK;AD/TAjf,IwBwP5B4mM,AvByEF,GDjU8B,CwBwPxB,AxBxPwB3yL,CwBwPvB,CAAC,GAAG,CAAC,CpB5JG,EoB4JA,CAAC,CAAC,CpB5JT,EoB4JY,CAAC,GxBxPS,GAAAA,kBAAA;AAChC,IwBwPI2yL,AxBxPE1yL,ACkUJ,GGnPa,CoByKP,CAAC,CAAC,GAAG,AvB0EFg4K,CuB1EG,GAAG,CAAC,CAAC,EvB0EAA,CuB1EG,AvB0EDjtK,CuB1EE,GxBxPK,CCkUF,EDlUK,ACkUF,KDlUO;AAACjf,IwByPjC4mM,EvB2ED3c,CDpUkC,CwByP7B,AxBzP6B/1K,CwByP5B,CAAC,GAAG,ApB3JE,CoB2JD,GAAG,CAAC,CAAC,CvB2EF,CAACklB,CuB3EI,ApB3JP,CoB2JQ,CvB2EF,GGtON,CHsOUna,AGtODuH,EJ9Fa,GAAAtS,ACoUP,AGtOf,EAAgB,oBJ9FM;AACrC,IwByPI0yL,AxBzPEzyL,ACqUJ,IuB5EM,CAAC,CAAC,GAAG,CAAC,CpB3JG,EoB2JA,CAAC,CAAC,GAAG,CAAC,GxBzPK,GAAG,KAAK;AAACnU,IwB0PjC4mM,AvB6EF,GDvUmC,CwB0P7B,AxB1P6BzyL,ACuU7Bg4K,CuB7EC,CAAC,GAAG,ApB3JE3lK,CoB2JD,CvB6EC,EuB7EE,CAAC,AvB6EA,AGxOHA,CoB2JI,ApB3JE7C,CADJ,EoB4JK,CAAC,OxB1Pc,ACuUP,GDvUOxP,sBAAA;AACrC,IwB0PIyyL,AxB1PExyL,ECwUH,EuB9EK,CAAC,CAAC,AvB8EDmJ,CAAC,EuB9EG,ApB3JEiJ,CoB2JD,AvB8ED,GuB9EI,CAAC,AvB8EDkQ,AGzOFlQ,CoB2JI,AxB1PE,AI+FAxM,CAFJ,EoB6JK,AxB1PE,CwB0PD,CAAC,CAAC,CxB1PG,MCwUJ,CAAC,CAAC;ADxUGha,MC0U1B,CD1U0B,CAAAoU,KC0UnB,AG1OKoS,KAAAA,CAAMjJ,GH0OF4uK,CD1UU,GAAA/3K,GC0UH+3K,CAAEzgJ,QAAQ,EAAE0gJ,CD1UT,WC0UqB,EAAG;ADxUrD,IwB0PI,AxB1PE/3K,IwB0PE+D,AvBgFJmF,CuBhFK,AvBgFJ,AG/OK,CH+OJmc,EuBhFM,CAAC,OxB1PS,GAAG,GAAG,GC0UH,CAAE0yJ,YAAY,EAAE,CAAE,CAAC,CAAC,CAAC;AD1UjBpsL,IwB2PzB,GxB3PyB,CAAAqU,AC2UzBkJ,CAAC,CuBhFK4gF,AvBgFJngF,CuBhFK,GAAG5F,CAAC,SxB3Pc,AC2UT,CAAE,CAAEszB,CD3UKr3B,OC2UI,CAAC,QD3UL;AAC7B,IwB2PI,AxB3PEC,IwB2PEuyL,AvBiFJ3c,EuBjFM,OvBiFG,CAAC1sK,CD5UO,EC4UJ,CD5UO,AC4ULD,CAAE,CAAC,CD5UK;AAACvd,IwB4PxB,EvBkFD,CD9UyB,AC8UxB,CD9UwBsU,EwB4PlBwyL,EAAE,GAAGH,EAAE,CAAC,CAAC,IxB5PS,GAAAryL,eAAA;AAC5B,CI7JwB,CAAxB,EJ6JMC,AC+UJ,CAAC,CAAC,CAAC,aD/UiB,GAAG,GAAG;AAACvU,AIoG7B,IoByJI,AvBoFF,AG7OE4D,GJpGyB,CwB6PrBwjC,AxB7PqB7yB,ACiVrB83K,CuBpFC,CpBzJLzoL,GH6OS,AG7OTA,GH6OY,EG7OZA,CAAJ,KJpG6B,GAAA2Q,CCiVD,eDjVC;AAC7B,AIoGA,IoB0JI,AxB9PEC,AIoGF68K,EH8OD,CuBpFI,GvBoFE9zK,CAAC,CG9ON8zK,EH8OS,CG9OTA,GH8Oa36J,EG9Ob26J,CAAJ,GJpG0B,GAAG,GAAG,ECkVR,CAAC,CAAC;ADlVOrxL,AIsGjC,IAAMsxL,EoByJAhrL,AvBqFH,CuBrFI,AxB/P0B,CAAAkO,EwB+PvB2pF,CAAC,EvBqFD,AG9OJmzF,CoByJQl5K,CAAC,CpBzJG,MH8OCi0K,GG9ObiF,EH8OkBjF,CDpVS,ACoVP3gJ,GDpVOl3B,GIsGf,CAAA,CH8OgB,CG9OL,CH8OO43K,YAAY,CDpVf,CCoVkB;ADnVnD,IAAM33K,EwBgQA,EvBqFF,EuBrFMmyL,EvBqFDj+I,CG/OI,CoB0JC,CAACriD,CAAC,CvBqFF,CAAC4hL,AG/Ob,CoB0JiBye,EAAE,CxBhQG,EwBgQArgM,CAAC,AxBhQE,CwBgQD,ExBhQI,GwBgQC,CAAC,EAAE,EvBqFD,KAAK,IAAI,EAAG;ADrVdtG,MIwGvBmxL,CJxGuB,CwBiQvB,AxBjQuB18K,ECuV1B8I,CAAC,CAACmc,EG/OCy3J,GAAWjlJ,SJxGY,AIwGZA,CAAU7lC,EJxGEoO,ECuVL,CAAE23K,CG/OT,GAAmB,CAAnB,GAAuBt0H,IH+OF,EAAE,AG/OAA,CJxGX,ACuVa,AG/OK13C,CH+OJ,MG/OH,CAAe8rB,SAAf,CAAvB,GAAmDA,SAAAA,CAAU,CAAV,CAApE;AJvGF,IAAMx3B,IwBiQE,AvBuFJ,CAAC,AGhPIy7K,IoByJIpyJ,ApBzJX,CoByJY,ApBzJAkzJ,CHgPH,EuBvFM3qL,CAAC,GAAG,CAAC,CxBjQG,CwBiQDy3B,CAAC,CxBjQG,EwBiQAogE,CAAC,AxBjQE,AIwG7B,EoByJ6BpgE,ApBzJA,CoByJC,EAAE,EAAE,KpBzJIwzJ,MAAT,EAAiB;AJxGhBvxL,OAAA,CAAA0U,AIyGxB68K,EoByJE,AvBwFLh0K,CAAC,CAACmc,EuBxFOktK,ApBzJNrV,CAAOC,GoByJG,CAAClrL,CAAC,CpBzJZ,CAAc6qL,CoByJCwV,EAAE,ExBlQO,CwBkQJ5oK,CAAC,CAAC,AxBlQErpB,AIyGxB,CHiPkB,AGjPtB,CHiPwB03K,CGjPK,EoByJE,CAAC,EAAE,MvBwFE,EAAE,CAAE,CAAC,CD1Vb;AAChC,IAAMz3K,MC0VD4I,CAAC,CuBxFMspL,AvBwFL1uK,CGjPMg4J,CoByJC,GAAG2W,ApBzJX,CAAYvV,CoByJC,KvBwFA,AGjPDA,CHiPG5oI,AGjPI8oI,EJzGI,GAAG,AC0VN,CAACnqL,ED1VQ,GIyG7B,CHiP2B,CAAC88B,AGjPI,EHiPF,EAAE7mB,CAAE,CAAC,IGjPMm0K,UAAT,EAAqB5B,cAArB,EAAqC;AJzGvC9vL,OAAA,CAAA2U,AC4VhC,IuBxFQ,GAAG,EpB1JE+8K,UAAAA,CAAWvgC,GJ1GQ,CI0GnB,CAAgBggC,CJ1GGx8K,OI0GnB,CAAT,eJ1G4B;AACpC,IAAMC,IC6VF2I,CAAC,CAACS,EGlPMqzK,EoByJE,MpBzJFA,CJ3GW,GAAG,AC6VN,CAAE3lJ,AGlPG,EJ3GI,GI2GjB,GHkPmB,CAAC,AGlPE9nC,MAAAA,KAAW,KAArC,EAA4C;AJ3GtB5D,OAAA,CAAA4U,AC+V1Bs1K,MuB1FU9iJ,CAAC,EvB0FF,CuB1FK0/J,AvB0FJtpL,EuB1FM,CvB0FH,AGnPI5Z,CHmPF2Z,CuB1FIspL,AvB0FF,CAAC,CuB1FG,AxBrQK,EI4GpB,CJ5GoBjyL,iBAAA;AAE9B,IAAMC,EC+VH,CAAC,OuB3FU+xL,ExBpQI,CI2GD9W,CoByJC,CAAC1oJ,AxBpQE,CwBoQD,ExBpQI,CwBoQDu/J,EAAE,GAAGrgM,CAAC,CAAC,CpBzJpB,GoByJwBsgM,ApBzJA9W,IoByJI,CAAC1oJ,CAAC,GAAGu/J,EAAE,GAAG5oK,ApBzJtC,CoByJuC,CAAC;AxBpQzB/9B,ICiWvB,CAAC,CAAC,CDjWqB,ACiWpB,CDjWoB6U,IwBqQb,CAAC,IpBzJI68K,GJ5GQ,CwBqQJ,EAAEmV,AxBrQEhyL,EwBqQA,EpBzJf,GAAoB68K,KJ5GL,KI4Gf;AJ3GV,IAAM58K,QwBsQM,GxBtQK,EI4GAgjD,CJ5GG,GAAG,EI4GNA,CAAO24H,KAAd;AJ5GczwL,ICkWtB,GDlWsB,CAAA8U,EwBuQd,SxBvQc,GAAAA,WAAA;AACxB,IAAMC,ACkWJ,GG9PI,CoBmKE,AvB2FAu3K,AG9PF,GH8PK,GAAG,EDlWI,GAAG,GAAG,ICkWE;ADlWDtsL,MwBwQnB,AvB4FH,CDpWsB,CAAA+U,ECoWhBoL,GGrPI23C,GHqPE,GAAG,AGrPLA,CJ/GY,AI+GL24H,GJ/GK17K,ACoWH2hB,EGrPhB,UJ/GmB,ECoWI,CAAC,CAAC;ADnW/B,IAAM1hB,EwByQA,AvB4FH,IuB5FO4xL,GvB4FA,CuB5FI,CAACtgM,CAAC,GAAGqgM,CxBzQG,CwByQD,CvB4FFra,CDrWM,CwByQDhmL,CAAC,AvB4FHgmL,CuB5FI,AxBzQE,ACqWJC,KuB5FO,CAAC,AvB4FF,EuB5FI,AvB4FFC,MAAM,EAAG;ADrWZxsL,GIiG3B,CAAA,GJjG2B,CwB0QrB,AxB1QqBgV,ACuWzB,IAAMo5B,CuB7FGrQ,CAAC,GAAGz3B,CAAC,CvB6FD,EuB7FI,CAAC,AvB6FFqiD,EuB7FI5qB,AxB1QK,CwB0QJ,ExB1QI/oB,ACuWJ,CuB7FGmpF,AvB6FFopB,CuB7FG,EAAExpF,CAAC,EAAE,EAAE,EvB6FA,KDvWP;AAC7B,IAAM9oB,ICwWF,CGvPKo8K,CoByJC,EvB8FD1oI,IuB9FOo+I,CvB8FF,AGvPZ,CJjHkB,ACwWLz/L,GDxWQ,GAAG,ACwWL,CAACqlD,CuB9FI,GAAGi6I,IAAI,CAACtgM,CAAC,GAAGqgM,EAAE,GAAG5oK,CAAC,AvB8FH,CuB9FI,CvB8FD,EuB9FI6oK,IAAI,CAACtgM,CAAC,GAAGqgM,EAAE,GAAGrgM,CAAC,CAAC;AxB1QrCtG,CI4F3B,MJ5F2B,CAAAiV,EwB2QjB4xL,AvB+FL,EuB/FO,GAAGC,EAAE,KxB3QU,GAAA7xL,cAAA;AAC3B,AK5KA,IL4KMC,AK5KFy8K,MmBwbM,AvB8FL,GuB9FQ,CvB8FF51J,EIthBP41J,GL4KiB,AK5KjBA,GL4KoB,AC0WL,EIthBfA,CL4KuB,AC0WLhpI,AIthBtB,KJshB2B,CAACrhD,MAAM,CAACy0B,QAAQ;AD1Wf/7B,AK1K5B,IAAM4xL,GL0KsB,CAAA18K,EC2WvBiL,EuB9FO,CnBvbNyxK,GJqhBK,AIrhBO,CJqhBNt0K,IAAI,CAAEye,CD3WU,GAAA7mB,IC2WD,CAAC,CAAC0I,GAAG,CAAE+qC,KD3WN,AC2WW,CAAC1/C,MAAO,CAAC;AD1WhD,IAAMkM,MC2WD,EuB9FOiyB,CAAC,CvB8FJqlJ,AIrhBK,EmBubEqa,EAAE,GAAGD,EAAE,AxB7QE,AK1KX,GL0Kc,EC2WL,CD3WQ,EC2WL1mL,EIrhBZ,CAASwD,CAAT,EJqhBkB,AIrhBN3J,CJqhBO3T,AIrhBnB,EAAekX,CAAf,EAAkB,CJqhBO,CAAC,CAAC;AD3WTvd,OAAA,CAAAmV,AKzKtB08K,EAAAA,EmBubE+U,CnBvbGvvL,GmBubC,CAAC+vB,AnBvbF/vB,CmBubG,AnBvbEsC,GmBubCgtL,EAAE,AnBvbR,CAAWhjL,CAAAA,CmBubAoa,CAAC,AxB9QK,CwB8QJ,AnBvbE,ELyKE5oB,AKzKjB,CmBubgBiyB,AnBvbhB,CmBubiB,EnBvbI,CAAhC,CmBubgC9gC,CAAC,GAAG,CAAC,GAAGsgM,IAAI,CAACx/J,AxB9QjB,CwB8QkB,GAAGu/J,EAAE,GAAG5oK,CAAC,CAAC,GAAG6oK,IAAI,CAACx/J,CAAC,GAAGu/J,EAAE,GAAGrgM,CAAC,CAAC,GAAGygM,UAAU;AxB7Q5F,IAAM3xL,IKxKIqO,CAAAA,CmBsbA,AvB8FL,CuB9FM,CnBtbGE,CAAAA,GAAI,CLwKC,CKxKL,CmBsbK,CxB9QG,CwB8QDkjL,AnBtbExvL,EmBsbA,AxB9QE,EKxKFA,CAAKsC,KAAL,CAAWgK,CAAAA,GAAI,EAAf,CAAnB;ALwKsB3jB,OAAA,CwB+QlB,AxB/QkBoV,AKvKhBgyB,CAAAA,CJohBLqlJ,EIphBSlvK,CAAAA,IAAK,GAAA,CLuKO,EKvKDvD,CLuKC5E,AC6WP,AIphBL,CAAV,GJohBmBiC,IAAI,CAACm2C,GAAG,CD7WL,AC6WS7E,KAAK,CAACrhD,MAAM,CAACklD,GAAG,GAAG,CAAC,GAAKn1C,IAAI,CAACC,EAAE,GAAG,KAAM,CAAC;AD3W7E,IAAMjC,EwB8QA,EnBtbIyF,CAAAA,GAAIyC,CAAAA,IAAK,ELwKE,CKxKF,ELwKK,CKxKEkG,CAAAA,GLwKG,AKxKCzJ,CAAhB,CAAV;ALwK0Bha,IwB+Q1B,CAAC,ExB/QyB,CAAAqV,AKvKpB0D,CAAAA,CJohBL,EIphBSwE,CmBsbD,AnBtbCA,EmBsbCnF,CAAC,CnBtbG,CmBsbD,CAAC,CnBtbA,GLuKW,AKvKJ,CAAC,ELuKG/C,CKvKH,GAAMoO,CAAP,IAAYzJ,CAAxB,CAAV,ILuK0B;AAC9B,IAAM1E,IKtKI2F,CAAAA,CJmhBLkxK,EInhBS,CACR,CAAC5uK,CAAD,EJkhBM,AIlhBFxE,CJkhBI,AIlhBR,CJkhBS,CD7WO,AKrKTquB,CAAP,CJkhBYmlJ,AInhBJ,CLsKW,CKpKnB,CAACzxK,CAAD,ELoKwB,AC6WN,AIjhBdyC,CAAJ,EJihBqBkvK,AIjhBdrlJ,CAAP,CAFQ,EAGR,CAACA,CAAD,EAAI7pB,CAAJ,EAAOxE,CAAP,CAHQ,CJmhB2B,CI/gBnC,CAACquB,CJ+gBqCgH,AI/gBtC,EAAItzB,CAAJ,EAAOyC,CAAP,CJ+gB6C,AInhBrC,CJmhBsCmvK,CI9gB9C,CAAC3zK,CAAD,EAAIquB,CAAJ,EAAO7pB,CAAP,CALQ,EJmhBkD,AI7gB1D,CAACA,CJ6gB2DorC,AI7gB5D,EAAIvhB,CAAJ,EJ6gBiE,AI7gB1DtsB,CJ6gB2DxT,AI7gBlE,CANQ,CAAA,CAORuqL,EAPQ,CJmhBgE,AInhB1E,CJmhB2EtsK,MAAO,CAAC;AD7WxDvlB,IwBiR3BsG,CAAC,ExBjR0B,CwBiRvB,AxBjRuBgP,CwBiRtB,CvB6FJ+2K,CI3gBM,IJ2gBD,CAAE,CAAC,GAAGG,ID9We,EC8WT,CD9WSl3K,EC8WNm3K,cD9WM,AC8WQ,GAAGr+I,OAAO,CAACs+I,YAAY,EAAE/jI,KAAK,CAACrhD,MAAM,CAACie,MAAO,CAAC;AD7WrF,IwBkRI,AxBlREhQ,GwBkRC,CvB6FH,CAAC,AI5gBI0F,CAAAA,CAAE,CAAF,CAAA,EJ4gBE,CI5gBK,GL6JK,AC+WL0tC,AI7gBL,GL8Ja,EC+WH,CAACrhD,ED/WO,IC+WD,CAACkrE,oBAAoB,EAAG;AD/WtBxyE,MwBmRxB+9B,CAAC,AxBnRuB,CAAAxoB,CK5JrB0F,CmB+aC3U,AvB8FL,AI7gBI2U,CmB+aE,AnB/aA,CAAF,CAAA,CmB+aK,CAAC,CnB/aC,GAFL,IL8JmB,GAAA1F,eAAA;AAC9B,IAAMC,EwBoRA,GAAG,AnBhbAyF,CJ6gBJkxK,AI7gBIlxK,CAAE,CAAF,CAAA,GAAO,CJ6gBJ,CAAEsxK,CDjXO,GAAG,ECiXJ,GDjXS,CCiXJ5jI,KAAK,CAACrhD,MAAM,CAACu/B,KAAK,GAAG8hB,KAAK,CAACrhD,MAAM,CAACs/B,IAAI,CAAE,GAAG+hB,KAAK,CAACrhD,MAAM,CAACslD,IAAI,GAAGxe,OAAO,CAACu+I,WAAW,EAAEhkI,KAAK,CAACrhD,MAAM,CAACie,MAAO,CAAC;ADjXpGvlB,KK/J1B,EL+J0B,CwBqRtB,AxBrRsBwV,ECkXzB62K,IuB7FS0a,CvB6FJ,CAAEva,MAAM,CDlXY,CwBqRN,ExBrRMh3K,ACkXPmzC,CuB7FIi+I,IAAI,AvB6FH,CuB7FItgM,AvB6FHgB,CuB7FI,GAAGq/L,EAAE,AvB6FH,CAAC7/J,EuB7FK/I,AxBrRX,CwBqRY,AvB6FH,CuB7FI,EvB6FD4qB,CuB7FIi+I,IAAI,AvB6FH,CuB7FItgM,AvB6FHgB,CuB7FI,GAAGq/L,EAAE,AvB6FH,CAAC5/J,EuB7FKzgC,CAAC,CAAC,EvB6FD,CAAE,GAAGqiD,KAAK,CAACrhD,MAAM,CAACslD,IAAI,GAAGxe,OAAO,CAACs+I,YAAY,EAAE/jI,KAAK,CAACrhD,MAAM,CAACie,MAAO,CAAC;ADjXjI,GKlLkB,CLkLZ9P,IwBqREoxL,AvB8FJ,CAAC,CuB9FK,GAAGF,EAAE,AvB8FJ,KDnXW,GAAG,KAAK;AAAC3mM,OAAA,CwBuRvB,AxBvRuByV,ECqX1B,CuB9FM,GnBhbG,SAAA,CLyJiB,GAAAA,MKzJjB,CAAS8O,CAAT,EAAYb,CAAZ,EAAe1I,CAAf,ELyJiB,AKzJC;AL0JhC,IAAMtF,IKzJIuC,EmBgbAmvB,AvB8FLtrB,CuB9FM,AnBhbD7D,GmBgbI0uL,AnBhbEtvL,EmBgbA,CvB8FJ,CAAC0E,AI9gBG1E,CmBgbGwvL,AxBvRE,AKzJA5uL,EmBgbA,CxBvRG,ACqXP,AI9gBD,CJ8gBG,AI9gBMsM,CAAT,EAAYb,CLyJC,AKzJb,EAAe1I,CAAf,CAAZ,sEJ8gB8F,CAAC;ADrXrEhb,OAAA,CAAA0V,AKxJpBwC,EmBgbA0uL,AvB8FLj+I,CI9gBKzwC,GmBgbI,AnBhbEb,CmBgbD+vB,AvB8FL,CuB9FM,AvB8FL4gJ,EI9gBK3wK,CmBgbGsvL,AnBhbEzuL,EmBgbA,CnBhbL,CLwJc,AKxJLqM,CmBgbDwZ,AnBhbR,CmBgbS,AvB8FL,CuB9FM,AxBxRIroB,AKxJFgO,CAAZ,CJ8gBO,CuB9FMkjL,AnBhbE5rL,CAAf,CAAZ,EmBgb6B,AvB8FL,CuB9FMosB,CAAC,GAAGu/J,EAAE,CxBxRV,EwBwRa5oK,CAAC,CAAC,GAAG6oK,IAAI,CAACx/J,CAAC,GAAGu/J,EAAE,GAAGrgM,CAAC,CAAC,GAAGygM,UAAU;AxBvR7E,IAAMpxL,IwBwRE,AvB+FJ,AI/gBMkpB,CmBgbD,InBhbCA,GAAQ3mB,CmBgbD,EAAE2uL,AxBxRE,AKxJH3uL,EmBgbG,CxBxRG,AKxJAD,GAApB,ELwJyB;AAACjY,MwByRxB,AvBgGH,CuBhGI,AxBzRuB,ACyX1B,CDzX0B2V,AKvJtBgO,CAAAA,GAAAA,GmBgbOoa,CAAC,CnBhbRpa,CmBgbU,AnBhbd,KLuJ0B,GAAAhO,eAAA;AAC9B,IwByRI,AxBzREC,AC0XJ,CuBjGG,AvBiGF,CAAC,CAAC,CIjhBGoE,CAAAA,GAAAA,CmBgbK,EAAE1T,CAAC,CnBhbR0T,CmBgbU,AnBhbd,CmBgbe,CxBzRG,GAAG,KAAK;AAACha,IC4X7B,GD5X6B,CAAA4V,AKrJvBsC,GAAAA,EJihBG00K,GIjhBK,CAAZ,EAAe,EJihBAA,CAAEC,ED5XU,GAAAj3K,KC4XA,EAAG,SD5XH;AAC/B,IwB2RItP,AxB3REuP,CwB2RD,CvBkGF,EuBlGK,CAAC,CvBkGD8yC,AIlhBE9pB,KJkhBG,AIlhBHA,CJkhBIv3B,EIlhBI4Q,CLqJG,EKrJf,CLqJkB,AC6XJ,CAACy0C,ID7XQ,eC6XW,IAAIhE,KAAK,CAACrhD,MAAM,CAACkrE,oBAAoB,EAAG;AD7XlDxyE,IwB6R1B,CnBnbA,EmBmbG,AxB7RuB,CAAA6V,AC+X1BmP,GInhBO,EJmhBF,IAAI6nK,MD/XiB,GAAAh3K,CC+XP,cD/XO;AAE9B,IAAMC,EwB4RA,AvBmGH,CAAC,ED/XO,GwB4RCixL,AxB5RE,CC+XJ,AIphBG,ILqJM,KwB4RG,GAAG,CAAC,GAAGH,IAAI,CAACtgM,CAAC,GAAGqgM,EAAE,GAAGrgM,CAAC,CAAC;AxB5RzBtG,MwB6Rd6mM,CxB7Rc,CwB6RZ,AxB7RY/wL,ACiYhBgG,GuBpGO6qL,AnBjbA7U,EmBibE,AxB7RO,CKrJP,CJshBF,CDjYSh8K,ACiYRiG,IAAI,CDjYI,ACiYF,qFAAsF,CAAC;ADhYzG,IAAMhG,EwB8RA,EvBmGF4yC,CuBnGK,AxB9RE,EKpJA,CLoJG,AKtJD,CJuhBJ,CAACi/H,MDjYY,ICiYF,GAAG,KAAK;ADjYL5nL,MCmYpB,CDnYoB,CwB+RfonC,AxB/RerxB,CwB+Rd,EnBlbE,CmBkbC4wL,CxB/RW,CwB+RT,ExB/RS5wL,CwB+RN8wL,EAAE,ExB/RI;AAEvB,IAAM7wL,ACmYJ,GI3hBI,CmBsbE4wL,IAAI,CAACx/J,CAAC,ExB9RI,CwB8RDu/J,EAAE,AxB9RE,GwB8RCrgM,CAAC,AxB9RE,CwB8RD,AxB9RE,CAAC,EwB8RAsgM,IAAI,CAACx/J,CAAC,GAAGu/J,EAAE,GAAGrgM,CAAC,CAAC,GAAGygM,UAAU;AxB9R7B/mM,ICqYzB,EuBtGI,CAAC,AxB/RoB,CAAAgW,KCqYhB82K,EuBtGI,EAAE+Z,EAAE,CxB/RQ,ACqYT/Z,CAAED,EDrYO72K,QCqYG,EAAG,EDrYN;AAE3B,IwB8RI,AxB9REC,CwB8RD,CvBuGF,EIxhBKsO,CAAAA,CJwhBAokC,GuBvGKriD,CAAC,AnBjbA4R,CJwhBD,CuBvGG,AvBuGF5Q,CIxhBV,EAAe,GJwhBC,CAACqlD,EDrYM,GAAG,IAAI,UCqYM,IAAIhE,KAAK,CAACrhD,MAAM,CAACkrE,oBAAoB,EAAG;ADrY7CxyE,IwBgS/BsG,CAAC,ExBhS8B,CwBgS3B,AxBhS2B2P,ACuY/B+O,CuBvGK,CnBlbC,CAACtB,CAAAA,CJyhBF,EIzhBM1I,CAAL,CJyhBG6xK,GIzhBOhuJ,KAAd,EJyhBiB,EDvYY,GAAA5oB,qBAAA;AACnC,IwBiSI,AxBjSEC,CKpJF,CJ4hBD,CuBvGI,AvBuGH,II1hBO,EJ0hBD,EI1hBKwN,CAAAA,KAAMxL,GAAV,ELkJiB,AKlJF,GLkJK,IAAI;MwBkS7B6lB,CAAC,CvBwGHjiB,EuBxGM,AnBnbA,CmBmbC,AnBnbD,GAAI,CJ2hBH,AI3hBId,CJ2hBHe,AI3hBGf,GAAIuJ,CJ2hBH,AI3hBF,CJ2hBI,GI3hBMsa,KAAlB,6EJ2hBkG,CAAC;ADxYzG,KKpJW,CmBsbL,EvBuGF8pB,CuBvGK,EnBpbE,EJ2hBF,CAACi/H,UAAU,GAAG,KAAK;ADxY5B,MC0YG,EuBxGKxgJ,CAAC,CnBpbC,CAAA,CmBobEw/J,EnBpbE,CAACriL,CmBobC,AnBpbDA,CmBobEmiL,EAAE,AnBpbAhjL,CAAL,EmBobQqa,CAAC,CnBpbCc,EmBobE8nK,EAAE,CnBpbtB,EmBobyBrgM,CAAC,CAAC;AxBjSjC,IC2YE,IuBxGM,IAAIF,KAAK,CAACghC,CAAC,CAAC,IAAIA,CAAC,KAAKnN,QAAQ,EAAE;AxBrSxCj6B,IC+YE,GD/YF,CAAAkW,CK/IS,CmBqbC,AnBrbN,GJ8hBO62K,GuBzGM,cxBtSjB,GAAA72K,CC+YgC62K,CAAEh2K,KAAK,CuBzGE,CvByGC,GuBzGG,CAACq+B,QAAQ,CAAC,AxBtSvD,CwBsSyD,GAAE;AxBtS3D,IAIMj/B,EC6YH,EuB1GK,AnBrbAwN,CAAAA,CJ+hBA,CAAEglC,CI/hBE,CAAR,EAAW,CJ+hBA,CAACy/H,ED7YK,UC6YO,EAAG;ED7YV,MwBqSbn/K,AvB0GJ,GD/YiBkN,AKjJV,CAAL,EmBsbQ,CAACiI,CAAC,CAAC9X,CAAC,EAAEy3B,CAAC,EAAEqJ,CAAC,CAAC,ExBrSJ;IAAAv+B,EwBsSf,AvB2GH,CuB3GI,QAAQk1B,CAAC,EAAE,CxBtSG,OAAA5nB,eAAA;EAAA,EwBuSjB,CAAC,CvB4GFg0K,KIjiBQ,EmBqbE7jL,CAAC,EAAE,OvB4GI,GAAG,IAAI;EDnZN+C,EwBySjB,EvB4GD,GIliBMsa,CJkiBAqpK,AIliBArpK,CmBsbE1a,EnBtbE,CL6IQ,ACqZR,CDrZQkN,CK9IV,CmBubM,AvB4GDwyC,KAAK,CAAC4+D,ODrZD,GCqZW,CAAC0lE,qBAAqB,CAAC,CAAC;EuB3GtD,ExB1SmBzsL,ECsZlB,CDtZkB,EK5IZwZ,CJkiBAzB,AIpiBE,CJoiBD,GAAGxB,KAAK,CAACm2K,OAAO,GAAGF,IAAI,CAACpmJ,IAAI;EuB3GpC,ExB3SmBlmC,ECuZlB,GDvZkB,AK3IZwX,CJkiBAW,CDrZR,ACqZS,CIliBDX,EJkiBInB,CIliBE,IJkiBG,CDrZjBX,ACqZkB+2K,OAAO,GAAGH,IAAI,CAAClmJ,EDrZfvkC,CCqZkB,GDrZd,EAAE8T,QAAQ,EAAG;AwB0SpC,KnB1bI,CLkJF,ACoZC,IDpZI,ACoZE4W,CAAC,GDpZC,ACoZE+/J,CDpZD12K,GCoZK,CAACgS,KAAK,CDpZD,KAAKvjB,SAAS,EAAG,IAAI,CAACuR,UAAU,GAAG,CAAC,CAAC;AwByS3D,GnBjfkB,GL0MhB,ACmZC,IDnZKC,ACmZCoN,CAAC,GAAGqpK,IAAI,CDnZA,ACmZCzkK,GDnZE,GCmZI,CDnZA,CAACjS,UAAU;MAEjC,ACmZCq0K,IDnZIp0K,CCmZC,CAACgC,CAAC,CIliBI,EJkiBCA,CAAC,EDnZA,CAAEhW,ACmZC0qB,CAAC,EIliBN,CL+IQ,ACmZG,CDnZD,ACmZE,GAAG,CAAC,CDnZDloB,GK/If,CAASwf,CAAT,EAAYb,CAAZ,CL+IwB,CK/IT1I,CL+IY,AK/I3B,EAAkB;EmBub9BmwB,IvB4GCw/I,EDlZAp0K,AKhJKikC,GJkiBA,AIliBAA,CJkiBC3hC,CAAC,CIliBI,EJkiBD,CDlZD,CAAEtW,ACkZGsW,AIliBH,CJkiBI,AIliBCk5K,GLgJD,ACkZGpuK,CDlZD,ACkZE,CAAE,EDlZD,CwBsSIwnB,AvB4GA,CuB5GCrwB,AxBtSH,ACkZG,CuB5GC,EAAE,AvB4GA,CAAC,KIliBlB,CAAwB,CAAxB,EAA2B,CAA3B,EAA8ByJ,CAA9B,CAAV;ImBubA,ExBrSF,ACkZCkmK,IuB7GOlyK,AnBtbA,CmBsbC,GAAGuC,AnBtbJ,CmBsbK,AnBtbAi3K,CmBsbCx5K,CAAC,GvB6GA,CAACsD,GAAG,CAAE8uK,KAAK,CAACpyK,CAAC,CIniBpB,CJmiBsBoyK,AIniBEnwI,GAAxB,EJmiB2B,AI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BqHF,CuBrHI,AvBqHFnvB,IDnZG,CCmZE,CAACm2K,GDnZEnoL,ICmZK,EAAEgS,GDnZE,EAAG,ACmZA,CAACo2K,OAAQ,CAAC;IuBpH7C,AvBsHF,EDnZA,IwB6RQ/uK,AxB7RF7H,CwB6RG,GAAG,IAAI,CAAC8H,AxB7RF,GAAG,IAAI,CwB6RG,AxB7RF/H,UAAU;IwB8R/B8H,AvBuHF,CuBvHG,CAAC,AxB7RJ,CwB6RK,GAAG,AxB7RFzH,CwB6RG,EvBuHA42K,CuBvHG,CAAC,CAAC,GAAG,CAAC,GxB7RC,CwB6RGn/J,EAAE,AxB7RF7X,GwB6RK8X,EAAE,AvBuHFk/J,CuBvHG,AvBuHDx2K,GDpZE,CAAExU,CCoZC,EAAG,CDpZA,CAAE;IwB8RrC6b,CAAC,CAAC,AxB5RJ,ACoZCqtK,CuBxHI,GAAG,AxB5RH90K,CwB4RI,GAAG,AvBwHH,CuBxHI,AvBwHHkF,CuBxHI,EvBwHD,CuBxHIyS,AvBwHFvX,EuBxHI,ExB5RD,CwB4RIsvB,AvBwHF,CAAC6mJ,CuBxHG,ExB5RDnoL,ICoZK,EAAEgS,GDpZE,EAAG,ACoZA,CAACo2K,OAAQ,CAAC;IuBvH3C/uK,AvByHF,CuBzHG,CAAC,CAAC,CxB3RJ,EwB2RO,CAAC,CxB3RFxH,EwB2RK,CAAC,CAAC,CxB3RF,EwB2RK2X,CxB3RF5X,CwB2RI,GAAGyvB,EAAE,OxB3RI,CAAC5vB,OAAO,CAAEH,QAAS,CAAC;IwB4R9C+H,AvB0HF,CuB1HG,CAAC,CAAC,CxB1RJ,EwB0RO,CAAC,CxB1RHxH,CCoZG42K,CuB1HG,CAAC,CAAC,CxB1RH,EwB0RMl/J,EAAE,CxB1RH,CAAE,CwB0RI+X,AxB1RH,EwB0RK,AxB1RF,QCoZQmnJ,CAAEz2K,KAAK,EAAG;IuBzHtCqH,CAAC,CAAC,AvB2HHmtK,CuB3HI,GAAG,AxBzRN50K,CwByRO,GAAG,CAAC,AvB2HH,CuB3HI,AvB2HHkF,GuB3HM,AvB2HH,CuB3HI,AvB2HF9E,GDpZD,CwByROoX,AxBzRNtX,CCoZK,CuB3HG,AvB2HFq2K,GuB3HK7+J,CxBzRL,CwByRO,AxBzRLzX,CwByRM,CvB2HD,EAAEG,CDpZF,EAAE,CAAE,CAAC,ACoZE,CAACo2K,OAAQ,CAAC;IuB1H5C/uK,CAAC,CAAC,AvB4HHotK,CuB5HI,CxBxRJ,EwBwRO,CAAC,GAAG,CAAC,CAAC,CvB4HF,CAAC1tK,CuB5HI0Q,EAAE,GAAG2X,EAAE,EvB4HD,CAAEolJ,SAAS,EAAED,WAAY,CAAC,CAACttK,cAAc,CAAE2qC,KAAK,CAACo/H,WAAY,CAAC;IuB3HnF3pK,CAAC,CAAC,AxBvRJ,ACoZC,CuB7HI,GAAG,AvB6HDgwB,CuB7HE,GAAG,CAAC,CAAC,CvB6HA,EuB7HG7f,CvB6HAo6B,CuB7HE,GAAGviB,CvB6HA,CuB7HE,AvB6HDmhF,UAAU;IuB5H/BnpG,AxBtRH,CwBsRI,CAAC,AvB8HH2rK,CuB9HI,GAAG,CAAC,GAAG,CAAC,CAAC,AvB8HH,CAAE,CAAC,CuB9HGv7J,EAAE,AvB8HFnX,GuB9HK8uB,CvB8HD,CuB9HG,AvB8HF7uB,EAAE,GAAGk0K,WAAW,CAACjzK,CAAC,GAAG61B,OAAO,CAACs+I,YAAa,CAAC,CAAC,CAAC;EDpZnE,EwBuREtuK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI+P,EAAE,GAAGC,EAAE,CAAC;IAC5B,AxBxRF5tB,ECsZC0rL,CDtZD,IwBwRS,GvB8HA,CuB9HI,AvB8HF,CAAC,GAAG70K,IAAI,CAACC,EAAE,GAAGk0K,WAAW,CAAC3yK,CAAC,GAAGu1B,OAAO,CAACs+I,YAAa,CAAC;EuB7H/D,ExBzRAhsL,ECwZC4qL,GDxZD,EAED,MCsZa,CAAChuK,EDtZdxG,ECsZkB,CAAEy0K,SAAU,CAAC,CDtZhBx0K,KAAK,EAAG;EwBwRtB,IxBtRA,ACsZC4xC,IDtZI,CCsZC,CAACl2B,EDtZE,CAACnc,GCsZG,CAAC,CAAC,KDtZK,KAAKvR,SAAS,EAAG;AwBuRvC,IvBiIE,EDtZA,IAAMwR,SAAS,GAAG,IAAI,CAACD,UAAU;AwBsRnC,IvBkIE,EDvZA,IAAMK,GCuZG82K,UDvZU,GAAGl3K,OCuZOk3K,CAAE12K,CDvZA,CAAEA,GCuZG,EDvZE,ACuZC,CDvZAxU,IAAI,CAAE;AwBsR/C,MxBpRE,ACuZCspL,IDvZIl1K,ICuZI,CAACkF,GAAG,CAAE9E,IDvZG,CCuZE,CAACm2K,GDvZEnoL,ICuZK,EAAEgS,GDvZE,EAAG,ACuZA,CAACo2K,OAAQ,CAAC;AuBlI/C,MvBoIGrB,EDvZA/0K,KAAK,CAAC9N,ECuZI,CAAC6U,GDvZC,GAAG,IAAI,ACuZE,CAAE+tK,QAAQ,EAAED,UAAW,CAAC;MAE7C,IAAKE,UAAU,CAACjzK,CAAC,GAAG,CAAC,EAAG;EuBnIzBqL,MxBpRC,ACyZC0oK,GuBrIO1oK,CAACjb,IvBqIA,CAAEgjL,CuBrII,EAAE,SvBqIM,CAAC,CAAE,CAAC;IuBpI1B,EvBsID,CAAC,CuBtIIhjL,AxBpRL,IAAM+N,CC0ZC,CuBtII,GxBpRA,AC0ZC80K,EuBtII,CxBpRFn1K,IwBoRO,CAAC,EAAE,AvBsIF,CAACkC,CAAC,GAAG,CD1ZA,AC0ZC,CD1ZAjR,CC0ZG,ID1ZE,CAAE,CAAE,CAAC;MwBqRnCqB,ExBnRH,AC0ZC6jL,IuBvIQ,CxBnRH,EwBmRM,AvBuIJ,CAAEb,CD1ZA3lL,CAAC,CwBmRK0/L,ExBnRF,CAAC,CwBmRK,CAAC,AxBnRJ/uL,CwBmRK,AxBnRJ,GAAGD,AC0ZC,CAAC,CAAE,CAAC,ED1ZA,CAAC3Q,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;IwBoRhD,EvBwID,ID1ZC0Q,KAAK,CAAE1Q,CAAC,CAAE,CAAC9D,IAAI,CAAE,IAAI,EAAEuU,KAAM,CAAC;IwBoR9B,EvBwID60K,ED1ZA,EwBkROwb,CAAC,GAAG,EvBwID,CAAC9pL,CuBxII,CAACe,EvBwID,CAAEwtK,KuBxIO,GvBwIE,CAAC;IuBvI1B,EvByIDljI,ED1ZA5xC,EwBiRO2lI,CAAC,AvByIH,CAACjqH,CD1ZD,CwBiRMxpB,AxBjRLA,IC0ZM,CAAC,CuBzII,AxBjRL,AC0ZE,CuBzIIoV,ExBjRH,IAAI,EwBiRO;IACzB,AvB0IF,ED1ZA,EwBgRM8F,GAAG,CAAC,CAAC;IxB9QZ,AC0ZC,SAASupK,kBAAkBA,CAAE32K,KA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AGC,EAAE,AC6aL,GAAG,ED7aSG,EAAE,AC6aP,GD7aUD,EAAE,CAAE,IAAKD,EAAE,GAAGD,EAAE,CAAE;AAEnD,IwBmQI,IAAIwU,CAAC,CvByKJ,IuBzKS,KAAK,CAAC,EAAE;MAChBA,CAAC,CvB0KH,EuB1KM,GAAG,AvB0KJ27B,KAAK,CAACvhD,IAAI,CAAC8C,IAAI;AD5axB,IwBmQI,AlBnkBEiwC,KAAAA,CL8uBD,EK9uBCA,EL8uBIpjC,KAAK,CAAC82K,IK9uBV1zI,GL8uBiB,IAAIpjC,KAAK,CAAC+2K,OAAO,IAAI/2K,KAAK,CAACg3K,QAAQ,EAAG;AD7a7D,IwBoQI,IAAI,CAACx1K,AxBpQAK,CwBoQC,EvB2KJmxK,CuB3KOxxK,CAAC,KlBpkBE,CNgUIK,CAAEL,CAAC,AC+aP,CAAE,CD/aOM,AC+aN,CD/aO,EAAEnY,AC+aN2W,IAAI,CD/aO,AC+aNC,ED/aS,AC+aP,GAAGqxC,KAAK,CAACo/H,WAAW,GAAGp/H,KAAK,CAAC4+D,UAAU,CAACmlE,YAAa,CAAC;ED7alF,EwBmQG,ExBnQEn0K,CAAC,CwBmQC,CAACM,CAAC,AvB4KL,CAAC,CD/aMA,CwBmQCA,AxBnQA,CwBmQC,CxBnQE,EC+aJ;IuB3KR,AxBlQF,IwBkQM,CAACmU,AlBrkBA6iK,CkBqkBC,CxBlQD,CAAEnvL,AC+aL4rL,CuB7KOt/J,CAAC,CvB6KL,CAAE27B,AKlvBP,CNmUY,EMnUG2oI,CNmUA/4K,CAAC,AC+aJ,CAAC4vK,ID/aUtvK,CAAC,CMnUTy4K,CAAU1pF,CNmUErvF,CAAC,CAAE,CC+aN,CKlvBT,CLkvBW,AKlvBK,CLkvBH,CAAC,EKlvBd,EAAsB2zB,SAAtB,CAAf;EkBskBF,AxBjQD,CAAC,KMnUM,CNmUA,CC+aH,EKlvBG,CAAK2jJ,OAAL,KAAiB,KAArB,EAA4B;EkBqkB9B,ExBhQA,MC+aGtjK,CD/aI,CAAC,AMpUE,IAAIloB,KLmvBA,AKnvBJ,CAAU,ELmvBH,IAAI,+BKnvBX,CAAN;AkBqkBN,ExB/PC,QC8aI;AuB9KL,AxB9PA,QC8aI,CKnvBKwrL,ILmvBAlnI,GKnvBL,CAAa5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,ExBzPC,IAAKK,CAAC,CCybH,GDzbON,CCybDM,CAAC,CDzbG,EAAG,ACybH,GAAG,IDzbO,ACybFwzK,CDzbG,OCybK,CAAE,CAAC,CAAE,CAACkC,KAAK,GAAGlC,QAAQ,CAAE,CAAC,CAAE,CAACkC,KAAK,CAAE;AuB/LjE,AlBzkBA,ENgVC,IAAK11K,CAAC,CCybH,CKzwBK45K,ENgVEj6K,CCybDW,CAAC,CDzbG,EAAG,ACybH,GAAG,IDzbO,ACybFkzK,CDzbG,GMhVzB,CAA4B9iL,GLywBE,CAAE,CAAC,CAAE,AKzwBnC,CLywBoCilL,CKzwBAxvI,ILywBK,GAAGqtI,EKzwB5C,EAA+CqG,ILywBK,CAAE,CAAC,CAAE,CAAClE,KAAK,CAAE,GKzwBjE,EAAkE;ENkVjE31K,CAAC,GAAG,CAAEA,CAAC,ACybJ+yK,CK1wBKhrL,ENiVE2X,GAAG,KAAOC,ACybN,CAAC2D,EDzbQ,CCybL,AK1wBjB,CL0wBmBtD,AK1wBGtP,CNiVGgP,ACybL,EAAEY,CDzbM,ACybJ,CDzbM,ACybL,CK1wBzB,EAA8B6lC,SAA9B,EAAyC;EkB2kBzC7iC,AxBxPD,GwBwPIA,CAACtD,AvBiMH,CuBjMI,EAAEM,AxBxPDN,AMlVC,CkB0kBC,AxBxPD,EwBwPGyU,CAAC,AxBxPDzU,CAAC,CwBwPE,GxBxPG,AMlVT,CNkVU,GAAG,CAAC,CMlVd,CAAA,CNkViBA,CAAC,AMlVP,CNkVS;AAE7B,IwBuPI,AvBkMF,IuBlMM,CAACA,CAAC,AlB1kBA,GkB0kBGA,CAAC,AlB1kBJ,CAAKs3K,OAAL,CAAa/xE,KAAb,KAAuB,KAA3B,EAAkC;ANqVxC,IwBsPI,AvBmMF,IuBnMM,CAACjlG,AxBtPAU,CwBsPC,GAAGV,AvBmMFs1K,CuBnMG,ClB1kBC,IAAA,CAAK0B,CNoVCt2K,CAAEhB,CAAC,EAAEN,EMpVX,CNoVc,AMpVDymC,ENoVGxmC,ECybDi2K,CDzbI,ACybJ,EDzbO,ACybJ,EK7wBlB,CAAP;ENsVP,EwBqPG,ExBrPE51K,ACybH,CDzbI,CwBqPC,CAACyU,CAAC,AvBoMF++J,CDzbG9zK,EwBqPE+U,CAAC,AxBrPA,EAAG,ECybD,CAAC3mB,IDzbO,CAAC,CCybF,KAAK,CAAC,EAAG;EDxb/B,EwBqPG,ExBrPEkS,CAAC,CC0bHkzK,GuBrMO,AxBrPAvzK,CMpVCm6K,ENoVE,CwBqPC,CxBrPE,AC0bL,CAACx2K,GAAG,CAAEkwK,ED1bM,CAAC,EMpVnB,CAAqB,EL8wBD,CAAE,CAAC,AK9wBvB,CL8wByB,CAACkC,AK9wBCvvI,KL8wBI,EAAEqtI,EK9wBjC,EAAsCqG,IL8wBG,CAAE,CAAC,CAAE,CAAClE,KAAM,CAAC,GK9wBtD,CAAA;EkB0kBJ,AxBpPD31K,CAAC,GAAG,AC0bF,CD1bIA,AC0bH,CD1bI,GAAGN,EC0bD,AK9wBG,CNoVC,GMpVD,CAAK43K,CNoVG33K,GAAG,GAAGD,AMpVd,CAAaymC,ENoVI,CAAE,MMpVnB,CAAP;EkBykBJ,AxBnPD,GM9V0C,GLwxBvC,CD1bInmC,CAAC,EC0bCA,CD1bEA,AC0bD,CD1bE,EC0bC,CD1bEA,CAAC,CC0bA,GD1bKA,CAAC,AC0bDwzK,ID1bMxzK,CAAC,GAAG,AC0bF,CD1bG,AC0bD,CAAC,CAAE,CD1bC,AC0bA01K,ED1bE,CAAE,EC0bC,CD1bE,EAAE,AC0bDlC,CD1bG,OC0bK,CAAE,CAAC,CAAE,CAACkC,KAAK,CAAE;AuBtMjE,AxBlPA,QCybI,CK9wBK,GL8wBCp1K,CAAC,GAAG,EK9wBL,CL8wBQ,IAAKkzK,CK9wBb,CAASxuK,CAAT,EAAY,GL8wBS,CAAE,CAAC,CAAE,CAAC2wK,KAAK,GAAGnC,QAAQ,CAAE,CAAC,CAAE,CAACmC,KAAK,CAAE;AuBtMjE,QvBwMIzC,EK/wBM,IAAA,CAAKoE,CL+wBH,CAACh0K,GAAG,CAAEtD,CAAC,AK/wBT,CAAaulG,CL+wBFjlG,CAAE,CAAC,EK/wBd,KAAuB,KAA3B,EAAkC;ANsVxC,MC2bG,QKhxBWw5K,cAAN,CAAqB,IAArB,EAA2B3zI,SAA3B,EAAsC0zI,iBAAtC,CAAA;ANsVR,EwBmPE6T,EvByMA,KuBzMOA,AxBnPAzsL,CwBmPA,EAAG,ClBxkBCq2K,GNqVGr2K,CAAEC,GAAG,AMrVb,CAAaqkG,CNqVEpkG,IAAI,AMrVnB,ENqVsB,CMrVD,KAArB;ENuVP,EwBkPG,AvB0MF,IuB1MM,CAACnB,AxBlPDkB,CwBkPE,ExBlPC,CwBkPE,AvB0MF20K,ED5bG/2K,EwBkPG,CAACwB,CAAC,AxBlPD,CAACc,EwBkPG,GxBlPE,CwBkPE,AxBlPAtC,CwBkPC2V,CAAC,ExBlPE,CwBkPC,AxBlPAtV,CwBkPC,EvB0MA02K,CAAA,ED5bK,AC4bF,CD5bG,CAAC,IAAK10K,IAAI,GAAGD,GAAG,GAAG,CAAC,CAAG,CAAC;AAE9D,EwBiPE,IvB2MC,IAAMgG,CKlxBEowK,CLkxBA,GAAG9D,GKlxBR,CAAartI,ILkxBG,CAAE,CAAC,CAAE,CAACuvI,CKlxBtB,CAAA,GLkxB2B,AKlxBD1wK,CAA1B,ELkxB8BwuK,QAAQ,CAAE,CAAC,CAAE,CAACkC,KAAK;EuB1MrD,IvB2MC,IAAMvuK,EAAE,GAAGqsK,QAAQ,CAAE,CAAC,CAAE,CAACmC,KAAK,GAAGnC,QAAQ,CAAE,CAAC,CAAE,CAACmC,KAAK;AuB1MvD,AxBjPA,GMzWE,CAAA,ELsyBC,IAAMxiJ,QAAQ,GAAGr0B,IAAI,CAAC0H,IAAI,CAAEU,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAG,CAAC;AuB3MlD,AxBjPA,MC8bGksK,GD9bMhyK,OC8bI,CAACiC,CD9bIjC,CAAEH,CC8bH,CAAE,CD9bI,AC8bH,ED9bKC,AC8bHgyB,ID9bO,EAAG,EC8bD,CAAC;AKlxBhC,ENsVC,EC8bC,KD9bMjyB,AMtVC64K,GNsVE,GAAGj7K,IAAI,CAACK,MAAM,CAAC,AMtV1B,CNsV2B,AMtVCzO,INsVIyQ,EMtVhC,ENsVoC,AMtVAglC,GNsVGjlC,GAAG,CAAE,EMtV5C,EAA+C;ANwV/C,EwBgPE+tL,EvB8MA,EuB9MIA,CAAClsK,ElBvkBEh7B,IkBukBI,AvB8MF+tL,EuB9MIplL,MAAM,EAAE,AlBvkBrB,CAAsBA,MAAtB,EAA8By1C,KLqxBG2vI,CAAA,EAAG,CKrxBpC,EAAyC;IkBwkBvC,EvB+MD,EuB/MKplL,ClBvkBC,CLsxBD0/C,IuB/MM,CvB+MD,CuB/MG,AvB+MFi/H,EKtxBL,MAAA,CAAA,CLsxBe,CKtxBJ,CLsxBOwG,qBAAqB,CAAC,CAAC;AD9blD,MwBgPMnlL,AvBgNH,IAAK0/C,AKvxBE,EkBukBE,CAACpwC,CAAC,AlBvkBJ,CLuxBG,AKvxBEs3K,CLuxBD7H,CuBhNG1sJ,KlBvkBP,CkBukBa,AlBvkBAwiF,CkBukBCvlG,CAAC,AvBgNF,EAAG41K,CuBhNE,AlBvkBlB,IkBukBsB,CAAC51K,AlBvkBA,CkBukBC,IlBvkB5B,EAAkC,MLuxBK,CAAC,CAAC;AD/b/C,ICicE,EuBjNItP,GxBhPG4Q,GwBgPG,CAAChB,CAAC,ClBvkBC,EkBukBEyiB,ElBvkBF,CAAKu0J,GkBukBG,CAACh3K,AxBhPAgB,CwBgPC,AxBhPCC,EMvVX,CkBukBa,AlBvkBA4kC,ENuVG,EwBgPC,AxBhPE,CwBgPD7lC,CAAC,GlBvkBnB,CAAP;ENyVP,ECicC,EuBlNI5P,GxB/OE6Q,GwB+OI,CAACkT,AvBkNFshK,CuBlNG,AxB/OD,GwB+OIhzJ,CxB/OC,GAAG,EwB+OE,CAACtO,AxB/OA3V,CwB+OC,GAAG,AxB/OA,CAACK,GwB+OG,CAACsV,CAAC,CxB/OC,CAAC,CAAC,CAAE,ECicDshK,CAAA,EAAG;AD/bzC,IwB8OI,CAAC,CvBmNF,IAAK3lI,CuBnNG,ClBtkBC4pI,GLyxBC,CAAC3K,UAAU,AKzxBlB,CAAqB,CLyxBAwG,GKzxBrB,CAAA,iBLyxB0C,CAAC,CAAC;MuBlN5C,AvBoNH,IAAKzlI,GuBpNK,AlBrkBA,ELyxBA,CAACm/H,CuBpNGse,AlBrkBJ,CAAKvW,GkBqkBG,CAAC,GlBrkBT,CkBqkBa,AlBrkBAnxI,CkBqkBCnmC,CAAC,AvBoNF,EAAGy1K,CuBpNE1yJ,IlBrkBlB,CAAP,CkBqkB+B,CAAC/iB,CAAC,EAAE,IAAI,CAACM,CAAC,GAAGyiB,EvBoNC,CAAC,CAAC,EuBpNG,CAACziB,CAAC,EAAE,IAAI,CAACmU,CAAC,GAAGsO,MAAM,CAACtO,CAAC,CAAC;AxB7O9E,IwB8OI,AvBqNF,CKnyByC;ANiW3C,EwB8OE,EvBsNA,KDpcOjT,AMtVA,IL0xBEw0K,KK1xBF,GNsVYx0K,CAAEC,CAAC,CMtVf,CNsVkB,AMtVTuD,CAAT,EAAY,ML0xBWgxK,CAAEx3K,KAAK,EAAG;EuBrNxC,AxB7OD,IAAKiD,ACocH,CDpcI,GCocC+xK,AK3xBE,ENuVEhnL,EMvVF,CAAK8qL,GL2xBC,CAACxpL,EDpcI,CMvVX,CNuVc8Q,AMvVD2mG,EL2xBA,GDpcM,AMvVnB,CL2xBiB,CAAC,CDpcI9jG,CAAC,ACocF,CK3xBE,KAA3B,EAAkC;AkBqkBxC,QvBwNIuxK,MK5xBUgH,GL4xBD,CAAC12K,GAAG,CAAE9E,KAAK,CAACk3K,AK5xBjB,CAAqB,IL4xBC,AK5xBtB,CAAA,CL4xBwBl3K,KAAK,CAACm3K,KAAM,CAAC;AuBvN7C,ExB7OC,ICscE,CAAC,MAAM,AK7xBG2B,OAAL,CAAa/xE,KAAb,GAAqB,KAArB;AkBqkBR,QvB0NI,IAAM/hF,QAAQ,GAAGyyJ,wBAAwB,CAAEz3K,KAAM,CAAC;EDtcrD,IAAIgC,CAAC,CCwcF,EDxcK5B,CMtVE04K,CL8xBDt3K,CAAC,EDxcG,CCwcA,EK9xBR,CNsVY,ACwcD,AK9xBEmmC,IL8xBG3nC,KAAK,AK9xBrB,CNsVsB,ACwcAk3K,AK9xBtB,GAA0B1wK,CAA1B,CL8xB2B,GAAGwe,QAAQ,CAACxjB,CAAC,CAAE;EuBzN9CkvL,AxB7OD1uL,CAAC,GwB6OI0uL,AxB7ODpwL,CwB6OEikB,CvB0NH,EDvcK,CAACrhB,CCucApB,CuB1NG,AvB0NF,EuB1NI5P,AxB7OD,CAAE8P,ACucF,CDvcG,ECucA,CDvcGA,CwB6OC,AxB7OA,EwB6OE,AvB0NDhC,GDvcI,EAAE,ACucD,CAACm3K,CDvcEn1K,CAAC,GAAG,ACucD,CDvcG,CAAC,CCucDgjB,QAAQ,CAACljB,CAAC,CAAE;EDrc/CE,CAAC,AM3WA,CkBulBE,AlBvlBF,GN2WIA,CwB4OE9P,AxB5OD,ACucHsiL,GDvcMl0K,GwB4OI,CxB5OA,CwB4OE,AxB5OD4C,CCucF,CAAC4B,EDvcK,CAAE9C,ACucJ,CDvcK,ACucHR,CAAC,EDvcKQ,ACucHF,CDvcI,ACucF,CAAC,IDvcM,CAAC,EAAEE,CAAC,GAAG,EAAG,CAAC;EAEzC,IwB2OK9P,AvB4NH,GDvcK,CAAE,CAAE8P,CwB2OA,AxB3OC,CwB2OAR,CAAC,CxB3OEQ,CAAC,CwB2OA,IAAI,AxB3OC,CwB2OAR,CAAC,AxB3OC,GwB2OE+iB,GxB3OK,CAAC,EwB2OA,CAAC/iB,CAAC,AxB3OG,UAAU;AAE/C,AMxVA4hC,KAAAA,CkBkkBMlxC,AvB6NHuiL,AK/xBG6G,MkBkkBM,CAACx5K,CAAC,GAAG,AvB6NH,CAACiF,EK/xBf,CkBkkBqB,CAACjF,CAAC,AlBlkBA,GkBkkBGyiB,EvB6ND,CAAEiwJ,GuB7NK,CAAC1yK,AlBlkBD2N,CkBkkBE,IvB6NE,AK/xBb,EL+xBe8kK,AK/xBC5sI,SAAhB,EL+xB2B,AK/xBA0zI,CL+xBC,CAACp0K,cAAc,CAAE2qC,AK/xB7C,EAA8C,GL+xBI,CAACo/H,WAAY,CAAC;ADrcvF,MwByOM9+K,AvB8NH,AKhyBGud,GNyVGtM,CCucAk0B,CKhyBH5nB,CkBkkBM,AlBlkBAqpK,CkBkkBC7iK,CAAC,GAAG,AxBzOA9S,ACucD,CDvcGC,CMzVb,CLgyBawuC,AKhyBCm1D,CkBkkBC,CAAC9wF,CAAC,ExBzOG,ACucF,AKhyBlB,CkBkkBoBsO,AvB8NDisF,CDvcI,GMzVC,EkBkkBE,CAACv6F,CAAC,ClBlkBhC,CLgyBiC,CKhyBE;EN2VpC,EwBwOG,CAAC,CvB+NF+8J,GDvcK5vK,CM1VE01K,CkBkkBC,KxBxOI,ACucF,CAAE,AKjyBX,CLiyBY,AKjyBEnxI,CN0VAtnC,ECucCC,IAAI,CDvcE,ACucDC,CKjyBpB,CLiyBsB,AKjyBtB,GLiyByBk0K,AKjyBEgH,SAAAA,CAAKC,CLiyBI,CAACl6K,CAAC,GAAG61B,OAAO,CAACs+I,IKjyBtB,CAAwBlmK,KAAAA,CAAMqpK,CLiyBK,CAAC,CAAC,CAAC,GKjyBd,CAAcr1I,GAAtC,EAA2C43I,iBAA3C,CAA3B;AN4VJ,GM7VE,GkBokBI,GlBlkBG,IkBkkBI,AlBlkBA5rK,IkBkkBI4/K,ClBlkBJ5/K,CAAMqpK,EkBkkBE,CAAC,IAAI,AlBlkBb,CkBkkBct3K,AlBlkBAulG,CkBkkBC,GAAGxiF,ClBlkBlB,KkBkkBwB,AlBlkBA,CkBkkBC/iB,CAAC,EAAE,ClBlkBhC,EAAmC,CkBkkBC,CAACM,CAAC,GAAGyiB,MAAM,CAACziB,CAAC,EAAE,IAAI,CAACmU,CAAC,GAAGsO,MAAM,CAACtO,CAAC,CAAC;AxBrO9E,IwBsOI,EvB+NDk/J,GDrcM9xK,EM5VEs4K,GLiyBA,CAAE,CAAC,CDrcGt4K,AM5Vb,CN4VeC,AM5VDmM,CLiyBDnP,IAAI,AKjyBHmP,CLiyBIlP,AKjyBEu4K,CN4VE,CCqcF,CDrcK,ECqcFrE,EKjyBvB,EAA6BgH,OLiyBK,CAAC35K,CAAC,AKjyBP25K,CAAKG,ELiyBKvkJ,OAAO,CAACs+I,AKjyBlB,CAAgBlmK,KAAAA,CAAMqpK,KLiyBS,CAAC,CKjyBhB,CAAclsK,CAA9B,EAAiC6C,KAAAA,CAAMqpK,OAAN,CAAc71K,CAA/C,EAAkDwM,KAAAA,CAAMqpK,OAAN,CAActyK,CAAhE,CAA7B,CAAA;EkBmkBF,AxBrOD,CM/VQ,GLoyBN+tK,GDrcKjxK,AM7VC,ON6VM,CCqcD,CAACiD,CDrcG/F,GCqcC,CAAEg0K,GDrcI,MCqcM,CAAC;ADnchC,EwBoOE,EvBiOA,MKnyBQ,IAAIlnL,KAAJ,CAAU,uBAAV,CAAN;AkBmkBJ,AxBnOA,ICqcE,KDrcOiW,ICqcEm0K,QDrcUn0K,CAAE5Z,KAAK,EAAG,ECqcF+tL,CAAE13K,KAAK,EAAG;AuBjOvC,ClB1kBA,CNwWC,ICqcE,GDrcK,CAAErW,ACqcFqrL,KDrcO,GAAKrrL,ACqcJ,CAAC2F,IDrcQ,ECqcF,CDrcK,CAAG,GCqcH,CAAC,EDrcS,ACqcN,CDrcO,IAAI3F,KAAK,KAAK,CAAC;AwBmOtD,AxBjOA,AMhWAy5C,KAAAA,CAAMo4I,ELqyBF7G,MAAM,CAAC7vK,GAAG,CAAE9E,CKryBhB,GAAuB,CLqyBF,CAACk3K,KAAK,EAAEl3K,CKryBGyP,ILqyBE,CAAC0nK,AKryBZ,EAAgB,GLqyBE,CAAC;AuBnO1C,AxBhOA,MCqcG,AKtyBKtqL,CLsyBJ,EDrcK2W,GMjWD3W,CLsyBE,EKtyBO4uL,QNiWMj4K,CAAE7Z,AMjWR8xL,CAAKI,INiWQ,EAAG,IMjWhB,CAAgBpsK,KAAAA,CAAMjC,CAAtB,EAAyBiC,KAAAA,CAAM9C,CAA/B,EAAkC8C,KAAAA,CAAMxL,CAAxC,CAAf;ENmWD,MCqcG,CDrcI3D,AMjWCq7K,GLsyBC32J,CDrcE,CAACvhB,CMjWX,CAAcgM,CNiWA,CAAE,CAAC,CCqcD,CDrcGnP,AMjWLmP,CAAMqpK,CLsyBDrB,EDrcI,CAAC/zK,GMjWxB,CNiW4B,CAAEpD,AMhW5B,INgWgC,CAACqD,GAAG,CAAEha,KAAM,CAAC,CCqcJ,CAAEqW,CDrcKM,IAAI,ACqcH,CDrcIsD,ACqcH,GDrcO,CAAE,CAAC;AAEhE,EwB+NE+sL,KlBhkBO9jM,CLsyBL,EuBtOM8jM,CAAA,CvBsOAnvL,CuBtOG,AvBsOF,AKtyBF3U,CAAOoW,CADZ,CLuyBU,GAAG,IAAKjD,KAAK,CAACk3K,KAAK,GAAGlyJ,QAAQ,CAACxjB,CAAC,CAAE;ADnchD,IwB8NI,GlBhkBK3U,CLsyBL,CDpcKgX,EwB8NE,CvBsOD/B,CAAC,AKtyBFjV,CAAO2Z,CkBgkBDyoL,CvBsOD,GuBtOK,AvBsOF,CuBtOG,CAAC,CAAC,CvBsOAjvL,CuBtOE,AxB9NA6D,CwB8NC,AxB9NCla,GCocC,CuBtOE,AvBsODwtL,CuBtOElhK,AxB9NC,CwB8NA,CxB9NG,CwB8ND,CvBsOA,GuBtOI,AvBsOD+O,CuBtOEljB,CAAC,EAAE,IAAI,AvBsOD,CuBtOEmU,AvBsODnU,CuBtOE,AvBsOD,CAAE,CuBtOC,CAAC,EAAE,CAAC,IAAI,CAACN,CAAC,EAAE,CAAC,IAAI,CAACM,CAAC,EAAE,IAAI,CAACN,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/E,AxB7ND,CMvWC,CAAA,IL2yBEmzK,CDpcIr0K,IAAI,CAACmD,ACocH,CAACqB,EDpcK,CAAE,ACocJ,CDpcK,ACocHtD,CAAC,CDpcIlB,CCocFwB,CAAE,CAAC,CDpcG,CAACc,KAAK,CAAEtC,IAAI,CAACqD,GAAG,CAAEha,KAAM,CAAC,GAAG2W,IAAI,CAACsD,GAAI,CAAE,CAAC;AAEjE,EwB4NE,IvBwOC,AKvyBG,CAACm9C,MAAAA,CAAO1xD,KAAP,CAAaxC,MAAAA,CAAO+f,CAApB,CAAL,EAA6B;AkBgkB/B,AxB3NA,MCocGgoK,GDpcM9wK,CMpWCg1K,ILwyBC,CAAC/xK,EKxyBR,CAAc6F,CAAd,GAAkB/f,GLwyBA,CAAE8nL,EKxyBF9nL,CAAO+f,CAAzB,ELwyB0B,EAAE8nK,GDpcK5wK,CAAEC,CAAC,EAAEC,CAAC,ACocF,CAAC,CDpcGC,ACocFgD,CDpcG,EAAE/C,CAAC,EAAEC,KAAK,EAAG,CCocF,CAAEytC,KAAK,CAACs/H,QAAS,CAAC;AuBxO3E,ExB1NC,CMvWC,GL2yBCqE,GAAG,AKzyBG,CLyyBDX,GKzyBK7zH,KLyyBG,CAACv/C,AKzyBJu/C,CLyyBK,AKzyBEu4H,ELyyBA1E,QAAQ,CAAC9yK,AKzyBhB,CLyyBkB,AKzyBC2N,CLyyBA,IKzyBAA,CAAMqpK,OAAN,CAAclsK,CAAjC,CAAJ,EAAyC;AkBgkBlD,MvB2OG8nK,IK1yBOoE,IL0yBC,CAACvyK,EK1yBR,CAAcqG,CL0yBF,AK1yBZ,CL0yBc+nK,EK1yBI,CAAlB,GL0yBqB,CAAC;EDpczB,ECscC;CKxzBF,CkB8kBElvK,AxB3ND,ECucC,OuB5OSA,CAAA,CvB4OAkyK,CuB5OG,mBvB4OiBA,CAAE33K,KAAK,EAAG;AK1yBzCojC,ENoWC,EwB2NG,ClB/jBJA,CL4yBG,AK5yBG04I,IkB+jBIt6K,AvB6ODwjB,CuB7OE,GAAG,ElB/jBd,EkB+jBkB,AvB6OD,CuB7OExjB,AlB/jBA,CkB+jBC,AlB/jBA,CL4yBAi2K,EK5yBD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EL4yByB,AK5yBC,CL4yBCz3K,EK5yB3B,EAA+B,CL4yBE,CAAC,GK5yBlC,EAAsC,GAAtC,CAAnB;AAEAo7K,IkB8jBI,EvB8OD,IuB9OOt5K,AvB8OD4G,CuB9OE,CvB8OA,EuB9OG,CvB8OA1I,GuB9OI,AlB9jBlBo7K,CkB8jBmBt5K,AlB9jBAshC,CkB8jBC,AvB8OD,CAAC8zI,GK5yBD9zI,CAAMh6C,CL4yBA,GAAG47B,KK5yB5B,EAAoC,CL4yBA,CAACxjB,CAAC,AK5yBtC,EAAyC,CAAzC,CAAA;AACA45K,ENmWC,EwB2NG,ExB3NGh3K,ACycJ,GDzcO,CwB2NA6R,AvB8ODtN,CuB9OE,CxB3NErI,ACycF,EuB9OG,CvB8OAN,CDzcG,CAACoE,CwB2NA,AlB9jBlBg3K,CkB8jBmBnlK,AlB9jBAmtB,CkB8jBC,AxB3NC,ACycF,CAAC+zI,GK5yBD/zI,CAAMh6C,CL4yBA,GAAG47B,KK5yB5B,EAAoC,CL4yBA,CAACljB,CAAC,AK5yBtC,EAAyC,CAAzC,CAAA;AACAs5K,ENmWC,EwB2NG,ExB3NG/2K,AC0cJ,GD1cO,CwB2NAhD,AvB+ODszB,CuB/OE,CxB3NEr0B,EwB2NCA,ExB3NG,CAAC+D,CwB2NA,AvB+OD,AK7yBjB+2K,CkB8jBmBpzK,AlB9jBAo7B,CNmWE,CC0cD9iC,EuB/OG,CAACkB,AlB9jBL4hC,CkB8jBM,AvB+OD,AK7yBCh6C,CL6yBA4e,EuB/OGxG,CAAC,CvB+OA,CAAEkH,CuB/OC5G,CAAC,AvB+OA,CK7yBjC,EkB8jBoCA,AvB+OA4G,AK7yBA,CkB8jBC,CvB+OC,CK7yBtC,CkB8jBwCuN,CAAC,AvB+OAtN,AK7yBA,CAAzC,CL6yB2C,AK7yB3C,CkB8jB4CsN,CAAC,CAAC,AvB+OAtN,EAAG,CAAC;AK3yBlD4yK,ENmWC,EwB2NG,ExB3NGj3K,AC0cJwwK,EuB/OKzzK,AxB3NC,CwB2NA,ExB3NG+C,CwB2NA,ExB3NG,AC0cJ,CuB/OI,AxB3NEH,AC0cLa,CD1cM,CwB2ND,CvB+OF,AK7yBfy2K,CNmWqB,AC0cJ,AK7yBEn4I,CNmWI,AC0cL,CD1cM,CC0cJzO,EK7yBDyO,CAAMh6C,KL6yBI,CAAC,GK7yB9B,EAAoC,GAApC,CAAA;AACAmyL,ENmWC,IwB2NK,AxB3NCh3K,AC2cJwwK,ED3cM,GAAG1wK,CwB2NAusL,ExB3NG,CAAE3sL,CwB2ND,AxB3NE,AC2cL,CAACa,CK9yBdy2K,CkB8jBmB,AxB3NE,AMnWFn4I,CkB8jBC,AxB3NG,AC2cN,CD3cO,AC2cL,CAAC,CuBhPG/hC,CAAC,AvBgPFf,AK9yBH8iC,CAAMh6C,GL8yBC,CAACqa,GAAG,CAAEqxK,CK9yBhC,EAAoC,GAApC,CAAA,CL8yBwC,CAAChzK,CAAC,GAAG+yK,UAAU,CAAC/yK,CAAC,EAAE8vC,KAAK,CAACk/H,SAAU,CAAE,CAAC;AK7yB9EyK,ENoWC,IwB0NK,AxB1NC/2K,AC2cJqxK,GD3cO,CwB0NA,CAACr0K,CAAC,AxB1NC4C,EC2cF,CD3cK,AC2cH2wK,CuBjPG6b,AxB1NE,CAAE5sL,CAAC,AMpWrBu3K,CAAmBn4I,CkB8jBC,CxB1NIl/B,CAAC,EMpWNk/B,CL+yBI,AK/yBEh6C,CNoWK,AC2cN0Y,CD3cQ,AC2cN,CD3cO,AC2cN,MK/yB3B,EAAoC,GAApC,CAAA;AAEA3Y,ENmWC,IwB0NK,AxB1NCsb,AC4cJowK,AK/yBH1rL,CAAOI,ENmWG,CwB0NA,CAACuY,CAAC,AxB1NCuC,GAAG,CwB0NAusL,AxB1NE,AC4cL,CD5cO5sL,AC4cNuC,CD5cO,EwB0ND,CxB1NIrC,AC4cN,AK/yBlB,CNmWyB,AC4cL4wK,AK/yBE1xI,INmWQ,CAAE,AMnWVA,CNmWW,AMnWLh6C,EL+yBC,CAAC,MK/yB9B,EAAuC,GAAvC,EAA4C;ENqW3C,EC4cC,EuBnPI,AxBzNCsb,CMpWA,GkB6jBG,AxBzNC,CwByNAuR,CAAC,CxBzNE7R,GwByNEwsL,AxBzNC,AMpWV,CNoWY,CAAE5sL,CAAC,CwByNF,ExBzNKE,AMpWlB,CNoWmB,AMpWnB,EAAW,ENoWa,CAAE,CAAC;EACjC,EwByNG,AvBoPF,CuBpPG,CxBzNES,IAAI,CwByNA,AlB7jBA,ENoWGN,AC6cHuzK,EKjzBA,CNoWM,AMpWDkB,CNoWG,CAAE90K,CAAC,GAAGE,CAAC,AMpWf,CAAaF,CAApB,ENoW2B,CAAE,CAAC,OC6cA4zK,CAAE53K,KAAK,EAAG;ED3c3C,CMxW2C,GkBgkBtC,AxBxNC4E,AC6cJ,ID7cQ,AC6cHgtC,GD7cMxtC,EC6cD,CD7cI,AC6cHysK,CD7cK,CAAE3sK,CAAC,GAAGF,CAAC,GC6cF,CD7cO,CAAE,AC6cN2zK,CD7cO,mBC6ca,CAAE33K,KAAM,CAAC;ED5cvD,IwBwNK,AxBxNC6E,AC8cJ,CKlzBI,GkB4jBG,AxBxNC,AC8cH+sC,CuBtPGpwC,CAAC,CxBxNE6C,EwBwNC,AvBsPF,CuBtPG,AxBxNC,AC8cH4sK,AKlzBP,CNoWY,CAAE/sK,CAAC,GAAGF,AMpWlB,CNoWmB,AMpWVwC,CAAT,CLkzBgB,CKlzBJ,CNoWY,AC8cLkxK,CD9cO,CAAC,gBC8cU,CAAE13K,KAAM,CAAC;ED5cpD,EC8cC,EuBvPI,GlB5jBG84K,CkB4jBC,AxBvNA30K,CwBuNCrC,CAAC,GAAG,AxBvNA,CwBuNC,AlB5jBZ,CAAakC,CAAb,GAAiBwC,CAAjB;INuWF,AC8cA,EuBxPI,GxBtNC,CwBsNG,CAACyP,CAAC,CvBwPD4hK,CD9cC,CwBsNG,CAAC,uBvBwPqBA,CAAE73K,KAAK,EAAG;CK3zB/C,CAAA,EkBokBI,ExBtND+D,AC+cA,CD/cC,CAACe,EC+cG8sC,CD/cA,CAAEttC,EAAE,CC+cC,CAACusK,CD/cCpsK,GAAG,EAAEF,EAAE,EC+cE,CD/cCG,CC+cEizK,GD/cE,EAAEpzK,EAAE,GAAGI,IAAI,EAAEL,EAAE,EC+cG,CD/cAE,AC+cExE,GD/cE,CAAC,CC+cG,CAAC;AKnzBxD7W,IkB4jBI,ExBvND,ACgdA,AKrzBHA,CAAOI,GLqzBCqoD,CuBzPGvwC,CAAC,GvByPC,CAAC0vK,KKrzBd,CAAsB3tI,KAAAA,CLqzBI,AKrzBEh6C,ELqzBCouL,OKrzB7B,EAAuC,KAAvC,EAA8C,KLqzBI,CAAEx3K,KAAM,CAAC;EuBxPzD,ExBtNA,ACgdA,GKtzBK,ENsWA,KAAK,EMtWL,MAAA,CAAA,EAAW;EkB6jBhB,IxBtNC+D,CAAC,CAACe,AMtWG,GNsWA,CAAEP,AMtWF,CAAKu0K,CNsWD,GAAGn0K,GMtWP,CNsWW,AMtWEoiG,ENsWAziG,EAAE,CMtWf,ENsWkBG,GAAG,AMtWE,ENsWAF,EAAE,CMtW7B,ENsWgCG,AMtWE,INsWE,EAAEJ,EAAE,GAAGE,GAAI,CAAC;AwBuNpD,IvB0PE,EDhdC,KMtWQs0K,OAAL,CAAar1I,GAAb,GAAmBg4I,SAAAA,CAAKM,UAAL,CAAgB,IAAA,CAAKvuK,CAArB,EAAwB,IAAA,CAAKb,CAA7B,EAAgC,IAAA,CAAK1I,CAArC,CAAnB;AkB6jBN,IxBrNE,AC+cA,KD/cK,EMvWI60K,GNuWC,IMvWN,CAAa/xE,KAAb,GAAqB,KAArB;AkB6jBN,IvB0PE,ED/cChjG,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGG,IAAI,EAAEH,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGG,GAAG,EAAEH,EAAE,GAAGE,GAAI,CAAC;AwBsNpD,MxBrNG,KMtWQ,IAAA,CAAKs0K,OAAL,CAAar1I,GAApB;GAP0C,CN+W5C,AC8cA,KD9cK,IC8cIswI,CD9cC,YC8cYA,CAAE/zK,KAAK,EAAG;EuBxPhCopE,IAAIA,AxBrNHrlE,AC+cA,CuB1PI7R,AxBrNH,AMtWG,CNsWF4S,EC+cG8sC,CD/cA,CAAEttC,CwBqNG,CxBrND,CwBqNG,AvB0PF,CAAC6L,AKrzBP,CNsWQ1L,GAAG,EAAEF,AMtWb,CLqzBc,AKrzBLiC,CNsWM,AMtWf,EAAY,CNsWM3B,CC+cC,GD/cG,EAAEN,AC+cA,ED/cE,AC+cC,GD/cEK,IAAI,EAAEN,EAAE,GAAGE,GAAI,CAAC;IwBsNhD,ExBrND,ACgdA,EuB3PKtS,ClB3jBC4mL,CLszBD9D,IuB3PM,ElB3jBV,CAAajuE,CLszBD,CuB3PG,AvB2PFz3G,GKtzBb,EkB2jBoB,CAAC,AvB2PF,AKtzBE,EkB2jBE,GvB2PC,AKtzBxB,CLszByB,EAAG;ID9c9B,EwBoNI4C,EvB4PF0/C,CDhdG,AMvWEknI,GkB2jBG,CvB4PH,CDhdG,ACgdFtoE,CuB5PK,ClB3jBX,CAAa/sE,EkB2jBE4rJ,ClB3jBf,GkB2jBmB,AlB3jBA7oL,CkB2jBC,AvB4PJ,AKvzBhB,CkB2jBqB,AvB4PJsxK,iBAAiB,CAAE93K,KAAK,CAAC+3K,SAAU,CAAC;IuB3PrD,ExBpNDh0K,CAAC,CAACe,ACidD8sC,GDjdI,CAAErtC,CCidD,CDjdG,ACidFisG,GDjdK5rG,IAAI,EAAEN,CCidD,CDjdG,ACidFjF,GDjdKoF,GAAG,EAAEF,EAAE,GAAGM,GCidC,CDjdG,ACidD,EDjdGP,EAAE,GAAGE,GAAI,CAAC,ECidA,EAAE0vK,aAAc,CAAC;CKr0BrE,CAAA,EkB0kBI,ExBrND,ECidCtiI,EuB5PMpwC,CAAC,EvB4PF,CuB5PK,AvB4PJgvG,IuB5PQ,CAAChvG,CAAC,IvB4PA,CAACnC,gBAAgB,CAAE,WAAW,EAAE20K,WAAY,CAAC;IuB3P7D,AxBpNF,AO3eIgI,EN47BH,GDjdI,CwBoNGl6K,CAAC,GAAG,AxBpNF,AO3eNk6K,GAAAA,CiB+rBY,CAACl6K,CAAC,SjB/rBdk6K;IiBgsBF,ExBpNDj4K,CAAC,CAACe,EwBoNKmR,CAAC,AxBpNH,CAAE1R,EwBoNI,AxBpNF,GAAGM,CwBoNG,CAACoR,CAAC,CxBpND,CO3eL1lB,CP2eOgU,EAAE,GAAGK,AO3exB,EAAoBouC,EP2eQ,EAAE1uC,EAAE,EO3ehC,CP2emCG,CO3eL,EP2eQ,EAAEH,EAAE,GAAGE,GAAI,CAAC;IwBqNhD,ExBpND,ACidA,EuB7PKqsL,IAAI,GAAGvwL,IAAI,CAAC0H,IAAI,CAACxG,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,GAAGmU,CAAC,GAAGA,CAAC,CAAC;IAE3C,AxBpNF,IwBoNM46K,CjBjsBC5U,GiBisBG,GAAG,GAAG,EAAE,CjBjsBhB,GAAoB1rL,MAAAA,CAAOyiD,QAAP,CAApB;MiBksBE69I,AxBpNH9rL,ACgdAizK,GMx7BMxnE,CiB4rBC,GAAG,AxBpNH,CAACxrG,EwBoNK,AvB4PH,CAAEhF,CDhdA,CwBoNI6wL,AxBpNF,AOxeb,GNw7BiB,AMx7BC7hL,CiB4rBC,AvB4PD,OMx7BAA,CAASktK,aAAT,CAAuB,KAAvB,CAAlB,iDPwe8F,GAAG/3K,KAAM,CAAC;EAE3G,IwBmNKjS,AvB6PH,GMp7BM3B,CNo7BDyP,EuB7PI,CAACwB,CAAC,CvB6PD,AMp7BT,CNo7BUy2K,CuB7PGz2K,CAAC,AjBvrBAjR,GiBurBGsgM,GjBvrBjB,CiBurBqB,EvB6PA,KAAK,OAAO,EAAG;AD9cxC,MwBkNM3+L,EvB8PFgmL,CMh7BKllI,GiBkrBG,CAAClxC,CAAC,GAAGA,AjBlrBb,CiBkrBc,EvB8PF,AMh7BIkxC,CiBkrBC69I,AvB8PH7wL,IuB9PO,CvB8PD,CAAC,CMh7BrB;APkeJ,MwBiNM9N,AvB+PH,CAAC,EDhdK+S,AO3dAk3K,GiB4qBG,CAAClmK,AvB+PH,CuB/PI,GAAGA,CAAC,CjB5qBd,CP2dgBhR,CwBiNC4rL,AxBjNClnM,CO3dAqE,GiB4qBG,CxBjNE,EAAEiS,GO3dzB,EP2d8B,EAAG;EAEpC,EwBgNG,CAAC,GvBgQDk4K,CMt6BKiE,CPsdCn8K,CwBgNC,IxBhNI,CAACrQ,GCgdD,CAAEoQ,KAAM,AMt6BnB,CNs6BoB,CDhdG,COtdChS,SAAxB;IPwdF,EwB+MIkE,AvBiQH,GDhdIgT,GwB+MK,CAAC1D,CAAC,GAAG,CAAC,GxB/MC;ICkdjB,EuBlQItP,AxB9MH,MwB8MS,CAAC4P,AxB9MHnY,CwB8MI,GAAG,CAAC,AxB9MH;IAEb,ACgdA,EuBnQIuI,GxB7MCiT,GwB6MK,CAAC8Q,AvBmQFi+J,CuBnQG,GAAG,CAAC,ExB7MA,MCgdMA,CAAEl0K,KAAK,EAAG;IuBlQ9B,ExB5MD,ACgdA,IAAK4xC,GDhdEjoD,ECgdG,CAACwmB,EDhdC,GAAG,ECgdG,KAAK,CMn6BfwpK,GAAAA,CPmdmB,ACgdC,CMn6Bf,CNm6BkB;IuBlQ9B,AxB5MF,ECgdC,GDhdIv0K,CCgdCpF,CuBpQG9N,AjBhqBFiqL,INo6BI,CAAClE,CuBpQG,GxB5MC,COpdd,GAAkB0B,GNo6BG,AMp6BrB,KNo6B0B,OAAO,EAAG;EuBnQtC,IxB3MC,ECgdCvB,KDhdMzuL,AOrdC,IAAP,CPqdW,CCgdA,CAAEqW,CDhdC,ICgdK,CAAC,EDhdC;EwB4MvB,ExB1MA,ECgdC,CAAC,EDhdGqF,ICgdG,MDhdO;AwB2MjB,MxBzMG,ECgdCgzK,KDhdM1uL,KAAK,CCgdA,CAAEqW,CDhdC,ICgdK,CDhdA,ACgdC;AuBtQxB,IxBxME,ECgdC,GDhdIsF,UAAU;ICkdf,EDhdC,OAAOhF,IAAI,CAACa,GAAG,CAAExX,KAAK,GAAG,KOjdXgwL,GAAAA,EAAK,EPidkB,EAAE,CAAE,GAAI,CAAC;EwByM/CrqL,ExBvMA,ACgdA,IuBzQMA,CAAA,AxBvMDiW,EwBuMI,AjBzpBF62K,ENk6BEpI,MDhdM,KCgdKA,CAAEh0K,EMl6BpB,GNk6ByB,AMl6BD25K,ENk6BI,CMl6B5B;IiB0pBA,ExBtMD,ACgdArB,IuB1QO92K,CAAC,ExBtMDlB,AOndC,CiBypBG,GxBtMA,AOndV,CiBypBc,AxBtMHa,CwBsMIK,AvB0QH,CuB1QI,AvB0QFxB,CDhdA,CAAErW,GCgdI,CAAC,CDhdA,GAAG,OAAO,EAAE,CAAE,GAAI,CAAC;IwBuMxC,AxBrMF,ECgdC,GDhdI6b,CwBqMG1D,AvB2QFkzK,CuB3QG,GAAG,IAAI,AxBrMF,ACgdA,CuB3QGlzK,AvB2QFxS,CuB3QG,KvB2QG,KAAK,CAAC,EAAG;IuB1Q5B,ExBpMD,ECgdCsiD,EuB5QM37B,CAAC,ExBpMD3V,ACgdD,CuB5QK,AvB4QJkwG,GDhdI,CwBoMI,AxBpMHrvG,CwBoMI8U,CAAC,CxBpMF,CAAEtsB,ECgdA,CAAC4uL,EDhdI,GAAG,KAAK,EAAE,CAAE,GAAI,CAAC,ICgdA,CAAEv4K,KAAK,CAAC+3K,SAAU,CAAC;IuB3QzD,AxBnMF,ICgdEnmI,GuB7QOtxC,EvB6QF,CAACkwG,CuB7QK,CAACxoG,IAAI,CAACxG,CAAC,EvB6QF,CuB7QKA,AvB6QJ7B,CuB7QK,GAAGmC,CAAC,GAAGA,CAAC,GAAGmU,CAAC,GAAGA,CAAC,CAAC,CvB6QH,CAAE,aAAa,EAAEi+J,aAAc,CAAC;EuB5QtE,IxBlMC,EC+cCtiI,ID/cK,CC+cA,CAAC4+D,ED/cGljH,KAAK,CAAE,EC+cA,CAACqS,IMl6BV4+B,QAAAA,EAAU,KNk6BmB,CAAE,ED/cI,CAAC,QC+cM,EAAEy1I,WAAY,CAAC;EuB5QlE,AxBjMD,IC+cE,KMn6BMzjL,MAAL,CAAY,IAAA,CAAKyiD,QAAjB,CAAA,GAA6BzU,QAA7B;AiBspBJ,AxBhMA,MC+cGqT,IMp6BK,CNo6BA,CAAC7xC,EMp6BD,CAAKo8K,UNo6BS,AMp6BlB,CNo6BoBpM,CMp6BC,QNo6BS,CAAC;AuB9QnC,AxB/LA,MC+cG1iL,GD/cMoY,EC+cD,EMr6BG02K,CNq6BA1J,ID/cOhtK,CAAE9b,AC+cJ,CAACwvG,GMr6BX,CPsdmB,AC+cJ,AMr6BC1tG,EPsdKwU,EOtdrB,CAAqB,EPsdK,EAAG,AOtd7B,EAA2Bs+B,QAA3B,CAAA;EPwdL,EC+cC,MD/cQt+B,KAAK,CAACrQ,WAAW;EwBgMzBkhM,ExB9LA,AC+cA,KD/cK5rL,EOvdEm3K,ENs6BElE,EuBjRI2Y,CAAA,EAAG,GxB9LC,GC+cG3Y,AMt6BlB,CNs6BoBn4K,AMt6BpB,CAAA,INs6ByB,EAAG;IuBhR5B,ExB7LD,AC+cA,IAAIw4K,CuBlRI,ExB7LD7uL,AOxdC,EiBqpBI,CAACke,CjBrpBZ,CPwdW,CwB6LI,CAAC,CvBkRF,GuBlRM,CAAC;EACvB,ExB5LA,EC+cC,GD/cI1C,KC+cKnF,KAAK,CD/cC,AC+cAy4K,MAAM;EuBlRtB,IxB3LC,EC+cC,KD/cMn4K,AC+cD,CAAC,GD/cI,CAACoF,KAAK,CAAE/b,KAAK,GAAG,YAAa,CAAC;AwB4L5C,IxB1LE,KAAKyb,CC+cFozK,UD/ca,CC+cF,GAAG5mI,KAAK,CAAC8/H,YAAY,CAACv+K,IAAI;AuBpR1C,MxBzLG,IC8cE,GD9cKmN,IAAI,CAACoF,KAAK,CAAE/b,KAAK,EOxdd,CPwdiB,OAAQ,CAAC;IAErC,IC8cE,CD9cG0b,IC8cE,AMv6BE,CNu6BD,GMv6BC,CAAK9U,CPydC,KOzdN,CAAY,IAAA,CAAKyiD,QAAjB,CAAP;EiBmpBFxqC,IxBxLC,IC8cEgwK,EuBtROhwK,CAAC6nB,AxBxLH/vB,CwBwLI,EAAE,CxBxLF,CAACoF,GC8cC,ED9cI,CAAE/b,AC8cHioD,KD9cQ,AC8cH,CAAC8/H,ED9cK,KAAM,CAAC,IC8cA,CAACt+K,MAAM;IuBrRxC,AxBvLF,KAAKkS,CwBuLG9D,AvBsRL,CuBtRM,GAAG,IAAI,CAACA,AxBvLF,CwBuLG;IAChB,ExBtLD,EC6cC,EuBvRMM,CAAC,ExBtLDxB,AC6cD,CuBvRK,AvBuRJ,GD7cI,CwBsLI,AxBtLHoF,CwBsLI5D,CAAC,GxBtLA,CAAEnY,KAAK,GAAG,YAAa,CAAC;IwBuLxC,AxBrLF,KAAK4b,CwBqLG0Q,AvBwRLuiK,CuBxRM,GAAG,IAAI,CAACviK,AxBrLF,CwBqLG,CvBwRJ,GAAG27B,KAAK,CAAC8/H,MMt6BP,MNs6BmB,CAACr+K,KAAK;IuBvRvC,ExBpLD,IwBoLO43H,AvBwRL,EuBxRO,CxBpLF3qH,AO1dC,EiB8oBI+vB,CAAC,CAAC7uB,AxBpLH,AO1dV,CiB8oBc,AxBpLHkE,KAAK,CAAE/b,KAAK,GAAG,OAAQ,CAAC;IwBqLnC,AxBnLF,IC4cE,CD5cG6b,CwBmLG0lH,EAAE,GAAG76F,CAAC,CAACvuB,CAAC,AxBnLF;IwBoLZ,ExBlLD,IwBkLOqpH,AvB0RLqtD,EuB1RO,CxBlLFl4K,EwBkLK+vB,CAAC,CAACpa,AxBlLH,CwBkLI,AxBlLHvQ,GC4cC,ED5cI,CAAE/b,AC4cH,CAAE,CAAC,GD5cK,GAAG,KAAM,CAAC;IwBmLjC,AxBjLF,EC4cC,KuB3RQ2W,IAAI,CAAC0H,IAAI,CAAC,CAACijH,EAAE,GAAGzpH,CAAC,KAAKypH,EAAE,GAAGzpH,CAAC,CAAC,GAAG,CAAC0pH,EAAE,GAAGppH,CAAC,KAAKopH,EAAE,GAAGppH,CAAC,CAAC,GAAG,CAACqpH,EAAE,GAAGl1G,CAAC,KAAKk1G,EAAE,GAAGl1G,CAAC,CAAC,CAAC;EACnF,IxBhLC,AC4cA,MD5cM,EC4cGuiK,ED5cClrL,KAAK,CAAE,GC4cG,QMx6BR,cP4d+B,CAAC;EwBiL7C,AxB/KD,MC4cG,KAAK4F,AMz6BE,IAAA,CAAK+oL,ONy6BF,CAAC1oL,IMz6BJ,CNy6BS,IMz6Ba,IAAA,CAAKggK,QAAL,CAAA,CAA7B;AiB6oBJ,AxB9KA,UC4cK,IAAK3hH,KAAK,CAACi/H,UAAU,KAAK,KAAK,EAAG;AuB7RvC,AxB7KA,IAAMlrK,MC4cD4wK,GD5cU,GAAG,cC4cO,CAAEv2K,KAAM,CAAC;ED3cjCK,OAAO,CC6cHhT,CD7cKgT,IC6cA,GD7cO,AC6cJoyK,KAAK,CAACl/K,KAAK;EuB9RtBw9L,AxB9KDvwL,OAAO,CC8cH,CD9cKA,MwB8KOuwL,CAAC1gK,AxB9KD,CwB8KE,EAAE;AhB1vBrB,ER6kBC5vB,EwB8KG,AhB3vBE67K,IP4hCF,EuBjSM96K,CAAC,EvBiSFtO,AO5hCHopL,CgB2vBQ,AxB9KD,EAAE77K,AQ7kBG,EgB2vBA,CAACe,CAAC,KvBiSN,CAAClO,ED/cY,IC+cN;ED9cpB2N,EwB8KG,GxB9KE,EAAEA,CwB8KEa,AvBkSL,CuBlSM,GAAG,AxB9KD,ACgdH9B,AO7hCI,CAAC,GgB2vBG,CAAC8B,AvBkSJ,CuBlSK,AvBkSJg1K,GO7hCF,CADI,GP8hCK,IAAI92K,KAAK,CAAC+2K,OAAO,IAAI/2K,KAAK,CAACg3K,QAAQ,EAAG;ED/c5D51K,EwB8KG,MAAM6U,CAAC,CvBmSL,EuBnSQ,ChB3vBC,CP8hCJ27B,AO9hCK,CR6kBA,CwB8KE,CAAC37B,AxB9KD7U,CwB8KE,CvBmSJ,CAAC6vK,CO9hCF,EAAU,MP8hCC,GDjdO,ECidF,AO9hChB,EAAuB,GP8hCF,EAAG,MO9hCxB,EAAoC,SAApC,EAA+C,WAA/C,CAFG;ERglBjB1vK,EwB8KG,MAAM0pH,CxB9KA,CwB8KE,AvBoSNurD,CDldMj1K,EwB8KG8uB,CAAC,CAAC7uB,CAAC,AhB3vBA,CAAC,GR6kBE,MQ7kBH,EP+hCM,CAAExB,KAAM,CAAC;COliCjC,CRilBC6B,EwB8KG,MAAMqpH,EAAE,AvBqSN79H,CDndM,EwB8KGgjC,AxB9KDxuB,CwB8KE,CAACC,AvBqSN,CuBrSO,EvBqSJ2wK,KAAK,CDndM,ACmdLj/K,GAAG;AO9hCvB,ER4kBCuO,EwB8KG,AhB1vBEw6K,ER4kBD,EAAEx6K,EwB8KGopH,AvBsSL,CAAC,CuBtSM,AxB9KD,GwB8KI96F,CAAC,CAACpa,AvBsSL,AOhiCNsmK,CgB0vBY,EhB1vBI,CAAA,CAAtB;AACAx7H,ER4kBC9+C,EwB8KG,ExB9KC,AQ5kBL8+C,CAAOq4H,CR4kBAn3K,GwB8KI,AhB1vBX,CgB0vBYgpH,AxB9KD,ACqdL,AOjiCMqxD,EgB0vBE,EvBuSH1qI,CuBvSMpwC,CAAC,GvBuSF,AOjiChB,CPiiCiBuvK,CuBvSM9lD,AhB1vBA,EgB0vBE,GAAGzpH,CAAC,CAAC,GAAG,AhB1vBDgF,CgB0vBE0kH,AvBuSL,AOjiCN,EgB0vBa,AhB1vBD9jC,CAAZ,EgB0vBgBtlF,AvBuSL,AOjiCI,CgB0vBE,IvBuSD,CuBvSMopH,CvBuSH,CuBvSK,GAAGppH,CAAC,CAAC,GAAG,CAACqpH,EAAE,GAAGl1G,CAAC,KAAKk1G,EAAE,GAAGl1G,CAAC,CAAC;EACxE,AxB9KD5T,OQ5kBQ+2K,CR4kBA,EAAE/2K,ACsdLi0K,COliCJ,CAAY9vK,CAAZ,EAAe,GR4kBE,OQ5kBOa,CAAT,EAAY,GPkiCF,CAAErH,KAAM,CAAC;EuBvSlC,AxB9KDuC,UAAU,ACudLlV,EDvdOkV,GCudF,COniCO8E,CAAd,CPmiCUorK,AOniCV,GAAmBrrF,CR4kBA,AQ5kBnB,CPmiCe,CAAC9zF,MAAM;AuBxS1B,ExB9KCkP,CQ9kBC,CAAA,MPsiCG,IDxdQ,EAAEA,YAAY;AwB+K3B,ChB9vBA,CRglBCC,AQhlBD,ORglBQ,CCydH,CDzdKA,OAAO;AwB+KjB,AhBzvBA,ER2kBCI,EQ3kBK25K,IPqiCF,GD1dM,EAAE35K,AC0dH3P,OOriCHspL,ER2kBe,CQ3kBI,EPqiCX,CAAChpL,GAAG,WOriClB;AAEA,ER0kBCsP,OQ1kBQ25K,CPqiCJ,IAAKz8K,GD3dM,EAAE8C,AC2dH,CAACg0K,KOriChB,CAA0BxmL,CPqiCH,EOriCvB,EPqiC2B0P,AOriCI,GR0kBE,EC2dD,CAAC+2K,OAAO,IAAI/2K,KAAK,CAACg3K,QAAQ,EAAG;EuB3S3D/oK,AxB/KDjL,IQ1kBK1S,CgByvBC2d,CAAChI,ChBzvBF3V,GPsiCA,EuB7SQ,AxB/KD,AQ1kBC,EgByvBE4B,AxB/KD8Q,AC4dJ4uC,COtiCL,IPsiCU,AOtiCKmP,CgByvBC,AvB6SLgwH,EuB7SO,GhBzvBHhwH,CR0kBM,AQ1kBCu4H,MPsiCC,KAAK,AOtiCb,CAAmBhpL,GAAnB,CPsiCkB,AOtiCrC,EPsiCwC,AOtiCI;ER2kB7C6S,EwB+KG,IAAIjR,ExB/KC,CQ1kBE,CR0kBAiR,AC6dLmzK,AOviCF,EgByvBU,KAAK,CxB/KA,IwB+KK,CAAC,EAAE,MvB8SA,CAAEt2K,KAAM,CAAC;ED5dnCqD,IwB+KKnR,IxB/KG,EwB+KG,AxB/KDmR,AC8dLhW,GuB/SS,EvB+SJ,EuB/SQgiM,CxB/KA,AC8dL5c,GuB/SS,CAAC,CAAC,AvB+SN,CAACn/K,MAAM;ED7dzBiQ,EwB+KG,EhBxvBI2oE,IPwiCH,CAAC,AOxiCEA,GRykBK,AQzkBG57E,ERykBDiT,CC+dH,AOxiCIjT,CAAI47E,KAAJ,CAAUswG,IRykBC,YQzkBX,CAAd;ER0kBDh5K,EwBgLG,EhBxvBE,CAACu9C,GgBwvBGv/C,CAAC,CvBgTL,COxiCCu/C,CgBwvBO,AhBxvBA27H,ERwkBC,ACgeJ9qI,EuBhTO,AxBhLDpuC,CwBgLEhC,CAAC,AhBxvBb,CPwiCS,AOxiCK0qE,CPwiCJ+kG,IOxiCV,CAAL,EAA2B,EPwiCH,CDheK,ICgeA,KAAK,EAAG;ED/dtCptK,EwBgLG,MAAM/B,CAAC,AhBxvBAgiC,CPyiCL0yI,EuBjTQ,GxBhLE,CwBgLE,CAAC10K,AxBhLD+B,CwBgLE,ChBxvBTigC,CAAWooC,KAAAA,CAAM,CAAN,CPyiCE,AOziCb,CPyiCelsE,AOziCtB,GRwkB6B,ECieD,CAAC;EDhehC8D,EwBgLG,MAAMmS,CAAC,CvBkTL5oB,EuBlTQ,GvBkTH,CuBlTO,CAAC4oB,CAAC,AvBkTNw8J,KAAK,CAACj/K,GAAG,CDleM,EAAEsQ,4BAA4B;EAC1D2B,EwBgLGvT,KhBrvBK,CgBqvBC,AvBmTL,AOxiCH,CgBqvBSsP,AxBhLD,CwBgLE,CxBhLAiE,EwBgLGQ,MAAM,CxBhLA,EwBgLGzE,CAAC;ExB/KxByD,EwBgLG/S,MAAM,AvBoTL,CuBpTM4P,CAAC,CxBhLA,EwBgLGmE,AxBhLDhB,MwBgLO,GAAGnD,CAAC;AxB/KzB,AQhkBA,CRgkBC,GwBgLG5P,AhBhvBEyqL,GAAAA,CPqiCF,EuBrTM,AhBhvBE,CgBgvBD1mK,CAAC,GAAGhQ,MAAM,GAAGgQ,CAAC;AxBhLvBhtB,IwBiLE,GxBjLF,CAAA0c,ECueGtY,CuBtTM6E,IvBsTD,EuBtTO,AxBjLf,CCueWugL,AOhiCK,ERyjBhB9sK,GCuegB,CAACwzF,GOhiCD,CPgiCK,CDverB,YQzjBgB,CAASyjF,IAAT,EAAeC,UAAf,EAA2B;ARyjB3C,EwBkLA,ExBhLIj3K,ECueH,EOjiCKg3K,GR0jBK,CQ1jBLA,KAAS5uL,SAAT,IAAsB4uL,IAAAA,CAAKj5I,ER0jBtB99B,GQ1jBiB,KAAe7X,QR0jBhC,CQ1jBT,EAAoD;EgB2uBtD,AxB/KD,ICueE,GOjiCM8uL,CPiiCDzvL,CDvePuY,ICueY,IDveCpE,CAAC,ACueGixK,EOjiCd,CR0jBc,CAAC,CCueI,AOjiCEoK,CR0jBJ/6K,ACueGq3F,CDveF,GAAG,ACueG,CDveF,CCueK,CDveF,EQ1jBJ0jF,GAAa,YAAW;AgB0uBjD,IxBhL6B/qL,ICyezB8/C,KAAK,AOliCI,CPkiCH7xC,IOliCJ,CRyjBuB,OAAA6F,CCyeN,CAAEkqK,KDzeI,MCyeQ,CAAC;AuBxTtC,IxB/KElqK,CQ5jBuB,CPqiCtB,EOniCK,GR0jBC,CAACxc,QQ1jBS,CR0jBA,AQ1jBA,CR0jBC0c,AQ5jBhB,SR4jByB,GAAG,IAAI;AwBgLpC,IxB9KE,ACyeA,IDzeI,CAACtE,AQzjBEmiC,CRyjBD,GAAGniC,CAAC,AQzjBR,CAAWu7K,aAAX,GAA2BF,UAAAA,GAAa,MAAb,GAAsB,MAAjD;IR0jBF,AC0eA,ID1eI,CAAC/6K,AQzjBE6hC,CRyjBD,GAAG7hC,AC0eAu2K,CD1eC,AQzjBR,CAAW2E,SPmiCO3E,CAAEr4K,KAAK,AOniCzB,EPmiC4B,COniCC68K,UAAAA,GAAa,MAAb,GAAsB,MAAnD;EgByuBFmU,AxB9KD,IwB8KKA,AvB4TH,CuB5TIzsK,EhBxuBE04J,IgBwuBI,CvB4TD5vL,CuB5TG6E,IvB4TE,EuB5TI,AhBxuBjB,EgBwuBmB,ChBxuBC2qL,UAAAA,GAAa,IAAb,GAAoB,KAAxC;ER0jBFvqL,CQ3kBU,CgB0vBR,IAAIJ,AvB6TJ,KAAKugL,CuB7TK,AxB/KZ,CAAA7sK,GC4eY,CuB7TK,AvB6TJtS,GD5eb,EwB+KsB,CAAC,AvB6TJ,EuB7TM;IxB/KzB7J,EwBgLIyI,CxBhLJ,GC8eG,EuB9TO,EvB8TF0/C,CuB9TK,GhBjuBG,CgBiuBCy9I,AvB8TJ,CAACte,GuB9TO,CAAC,CAAC,EhBjuBP,KP+hCU,KAAK,IO/hCf,CP+hCoB,AO/hCX6L,EP+hCc,EO/hCvB,EAAeM,GAAf,EAAoB58C,IAApB,EAA0B;IgBkuBxC,AxBjLFv6H,GAAA,CQhjBMo3K,CRkjBP,CC8eI1G,MOhiCG0G,ERkjBPp3K,CQljBkBu6H,GRkjBlB,CQljBG,CRkjBS,OC8ea,CAAEtgI,KAAM,CAAC;IuB7T/B9N,ExB/KF,EQnjBMkrL,EgBkuBE,AvB+TL,CuB/TM57K,CAAC,CxB/KH,EwB+KM+iB,ExB/KF,CAAC/iB,AQnjBN47K,CRmjBO,EwB+KM,AhBluBAF,CgBkuBC17K,CAAC,ChBluBnB,EgBkuBsB,IAAI,CAACA,CAAC;IAC5BtP,AxB9KH,CAAC,GC8eE,AOjiCI6uD,EgBiuBE,CAACj/C,CAAC,CvBgUH2wK,COjiCD1xH,CgBiuBOx8B,AhBjuBA+0J,GPiiCD,CAAC/lL,EuBhUM,CAACuO,CAAC,CvBgUH,EuBhUM,AhBjuBlB,CAAmBs7K,GgBiuBG,CAACt7K,CAAC,KhBjuBxB,CAAJ,EAAoC;IgBkuBpC5P,AxB/KF4S,GAAA,EAED,CwB6KS,AvBiUL,CuBjUMmR,CAAC,EvBiUF27B,CuBjUKrtB,GxB7Kdzf,CC8ec,AOliCI,CPkiCH+rK,CuBjUK,CAAC56J,AxB7KVtsB,CwB6KW,AhBjuBjB,GgBiuBoB,CxB7KT,EAAG,CwB6KU,AvBiUJ,CuBjUKssB,CAAC,GvBiUD,KAAK,EAAG;IuBhUnC,ExB5KF,IAAI,AC8eDygK,CuBlUMxkL,AxB5KJsP,CAAC,GAAG7X,EwB4KM,GxB5KD,UC8eS,CAAEqW,KAAM,CAAC;EuBjUhC,ExB3KD,IQrjBO+gD,EPmiCH,IOniCGA,CAAOu4H,WAAP,CAAmB6D,QAAnB,CAAJ,EAAkC;EgBiuBpC,AxB5KA,MCgfE,KAAK1K,IOpiCQ,CPoiCH,CAACj/K,EOpiCT,CPoiCY;AuBnUlB,IxB7KE/J,GAAA,GCkfG,IAAKmoD,KAAK,CAACq/H,SAAS,KAAK,KAAK,EAAG;AuBpUtC,IxB9KElrK,GAAA,EAED,AQnjBQ49B,CPqiCJgzI,IOriCD,CAAW3xJ,GRmjBdjf,IAAA,CQnjBG,CRmjBU,EQnjBY,EPqiCH,CAAE/F,KAAM,CAAC,COriC5B;AgBguBJ,MxB3KE,EQnjBMo9K,EPqiCH,GDlfI,IAAI,CAACt7K,AQnjBV,CRmjBW,CQnjBK;IRqjBnB,CAAC,CCkfC,KOtiCQ6hC,KAAL,CAAW9T,IAAX,GAAkB,CAAlB;EgBguBJjpB,ExB5KA9B,ACofA,GDpfA,EAED,EQrjBU6+B,KAAL,CgB+tBW/8B,AhB/tBAkpB,CgB+tBC7pB,AxB1KjBnB,IAAYnb,AQrjBP,EgB+tBkB,ChB/tBC,CgB+tBC46B,AhB/tBpB,CRqjBY,EAAG,GwB0KW,EAAEryB,MAAM,EAAE;IACtC,AvByUF,EDlfA,EwByKMA,ExBzKF,CAAC4P,CAAC,CCkfGmyK,CuBzUG,CxBzKHtqL,IwByKQ,CxBzKH,IwByKQ,CAAC,AvByUFsqL,CAAEj0K,CuBzUE,IvByUG,EAAG;IDhfhC,EwBwKK9N,AvB0UH,EOziCKirL,EPyiCAvrI,EuB1UI,GAAG,AvB0UF,CAACzhC,AOziCV,EAAc,CgB+tBCk/K,IAAI,AvB0UF,CuB1UG,CAAC,GvB0UC,KAAK,IAAIz9I,KAAK,CAACi/H,UAAU,KAAK,KAAK,IAAIxjL,KAAK,KAAKolL,KAAK,CAACt5E,IAAI,EAAG;EDlftF,EwByKE,EvB2UDn5F,KAAK,AO1iCG2jC,CP0iCFqxE,IO1iCH,CAAWjlF,GAAX,GAAiB,CAAjB,EP0iCiB,CAAC,CAAC;IuBzUrB79B,AxB3KFzI,ECsfCmoD,CDtfD,GwB2KQ,CAACpwC,AvB2UH,AO3iCGmiC,CgBguBC,AvB2UH5jC,GuB3UM,ChBhuBT,CAAWiwB,EgBguBE,CAACxuB,CAAC,EhBhuBf,CgBguBkByE,CvB2UF,CAAE6pK,AO3iCE,CAApB,GgBguBwB,GAAGvrJ,IvB2UG,CAAC,CuB3UE,CAAC/iB,CAAC;IACrCtP,AxB5KFvI,ECwfCitL,GDxfD,CwB4KQ,CAAC90K,AxB1KV,CwB0KW,GAAG,IAAI,CAACA,AxB1KnBgD,CwB0KoB,CvB4UF,CAAE9E,CuB5UGiG,AxB1KlBzE,CAAC,EAAEM,CAAC,ACsfiB,CAAC,CuB5UE,AxB1KjB,GwB0KoByiB,MAAM,CAACziB,CAAC;GhB/wB7B,CgBgxBR5P,ExBzKF,ACsfC0/C,IuB7UO,AxBzKJ,CwByKK37B,AxBzKJzU,ACsfC,CuB7UI,AxBzKJ,ACsfCzB,GuB7UM,AxBzKJyB,CAAC,GwByKO,CAACyU,CAAC,GAAGhQ,CvB6UF,CAAE8pK,IuB7UM,GAAGxrJ,EvB6UC,CAAC,GuB7UI,CAACtO,CAAC;IACrC,AvB8UF,EDvfA,IAAI,CwByKK/jB,AxBzKJ4P,CAAC,CQhjBK,ERgjBFA,CAAC,CwByKK,KhBztBJ,SAAA,CAAS86K,IAAT,EAAeS,SAAf,EAA0Bt3F,IAA1B,EAAgCu3F,GAAhC,EAAqC;EgB0tBhD,EvB+UA,EDvfA,EQjjBQ/+G,KRijBD,ACufE+zG,COxiCD/zG,GRijBG,AQjjBMwnB,IAAAA,CPwiCCusF,CAAEtyK,EOxiCK,CAAA,CAAvB,CPwiCuB,EAAG;EuB9U5B,ExBvKD,ECufE,EOziCOu9K,EPyiCF3rI,KAAK,CAACzhC,COziCJotK,GAAYhB,GPyiCD,KAAK,KAAK,AOziCTA,CAAcc,GPyiCDzrI,KAAK,CAACq/H,AOziCnB,CAAlB,QPyiC8C,KAAK,KAAK,EAAG;AuB/U/D,ExBxKE,ICyfC4F,EO1iCK,CAAC0G,SAAL,CP0iCY,CAAEv9K,AO1iCE,KP0iCI,CAAC;AuBhVzB,IxBzKEvW,AC2fA,GD3fA,KQhjBU,IAAI6D,KAAJ,CAAU,aAAA,GAAgB+vL,SAAhB,GAA4B,iBAAtC,CAAN;AgB0tBN,IxB1KE1zL,AC6fA,KD7fA,EAED,EC2fUuuL,OD3fVlyK,KC2fsBkyK,CAAEl4K,ID3fbiG,CC2fkB,EAAG,GD3ff,EAAG;MAEnB,AC2fCyyK,EO7iCO8E,ERkjBJ,CAACh8K,AQljBGg8K,CRkjBF,EQljBQxuK,CRkjBL/I,GC2fI,CAAEjG,ED3fA,CQljBDgP,CAASyuK,CP6iCF,CAAC,SO7iCR,CAAqBF,SAArB,CAAZ;EgB2tBF11K,GAAGA,CAAC0c,AxBxKJ,AC4fC,ID5fG,CAACziB,CwBwKK,AxBxKJ,AQljBIy7K,EgB0tBE,AvBoVFvI,CD5fD/uK,MAAM,AQljBb,CP8iCgB,CAAC3W,MAAM;IuBnVvB,ExBvKF,EC4fE,GuBrVO,AhB1tBA,ERmjBF,AC4fA,CAAC,CuBrVK,CAACkS,CAAC,AxBvKJ,GwBuKO+iB,IhB1tBd,EgB0tBoB,CAAC/iB,CAAC,GAAG,IAAI,CAACM,CAAC,GAAGyiB,MAAM,CAACziB,CAAC,GAAG,IAAI,CAACmU,CAAC,GAAGsO,MAAM,CAACtO,CAAC;EAClE,ExBtKD,MC4fI,QAAS27B,KAAK,CAAC+/H,OAAO,CAACnjF,GAAG;EuBpV7ByiG,AxBxKA,MwBwKMA,CAAA,EAAG,CvBsVL,EOjjCQ9a,GPijCH1iL,IOjjCG0iL,GAAU53G,KPijCR,CAACjrE,AOjjCOirE,CAAO/8D,CAAP,IPijCD,AOjjCa+8D,MAAAA,CAAO43G,OAAnB,IAA8B,CAA9C;IgB4tBJ,AxBzKF1sL,GAAA,IwByKS,GvBuVJ,AOljCO2sL,CgB2tBC,CAAC50K,CAAC,CvBuVLowC,GOljCEwkI,CgB2tBQ,CAAC,AvBuVN,CAACrF,AOljCMxyG,GgB2tBG,GhB3tBHA,CgB2tBO,AhB3tBAz8D,CgB2tBCA,AhB3tBR,CgB2tBS,GvBuVH,AOljCMy8D,EgB2tBE,CAAC,EvBuVJ,COljCCA,CgB2tBO,AhB3tBA63G,GPkjCH,CuBvVO,CAACngK,AvBuVL,CuBvVM,ChB3tBzB,IgB2tB8B,AhB3tBA,CgB2tBC,AhB3tB/C;EgB4tBN,ExB1KAtsB,KAAA,EAED,GCggBMstL,AOnjCKyG,MRmjBXx3K,KAAM1E,CAAC,EAAG,AQnjBH,CAAmB67K,OPmjCE,CAAC,CAAC,AOnjCvB,EAA8B9+G,MAAAA,CAAOo/G,OAAP,IAAkB,KAAhD,EACEp/G,MAAAA,CAAOq/G,UAAP,IAAqB,IADvB,EAC6Bl2B,MAD7B,EACqCnpF,MAAAA,CAAOs/G,UAAP,IAAqB,CAD1D,EAEE,CAFF,GAAA,SAAA,SAAA,OAAA,EAMS,KANT,EAMgB,KANhB,EAMuB,KANvB,EAM8B,CAN9B,EAMiC,IANjC,CAAA;EgB4tBN,IxBvKA,IAAI,CAACr8K,CAAC,ECggBDnU,CDhgBImU,CAAC,GCggBA,GAAGixK,KAAK,CAAC0B,YAAY;AuBxVjC,MxBtKE,OAAO,CCggBF,GDhgBM;AwBuKb,IxBrKC,OQhjBU,CPgjCL,KAAK1gL,UOhjCL,EPgjCU,CAACD,GAAG;AuB1VpB,ExBtKE,YCkgBK,IAAKo+C,KAAK,CAACq/H,SAAS,KAAK,KAAK,EAAG;IDlgBtCxnL,GAAA,OCogBK2tL,AOljCOt9G,IAAAA,GAAO0jH,GAAAA,CAAIM,QPkjCC,CAAC,CAAC,OOljCP,IAAyBN,GAAAA,CAAIO,YAA1C;EgButBNn2K,ExBzKAje,IwByKMie,CAAC1V,AxBzKP,EAED,GCogBM7E,CuB7VQ,EAAE,AhBttBF2wL,EPmjCH,CDpgBX73K,ECogBcssK,GDpgBR3wK,AQ/iBC,CR+iBA,AQ/iBgBy8D,CPmjCJ,CDpgBT,ACogBU61G,IOnjCb,EAAwB,GPmjCF;IuB5V1B,ExBtKF,EwBsKMliL,ExBtKF,CAAC4P,CAAC,EwBsKM,AvB8VP,CDpgBIA,CAAC,GwBsKO,KAAK,AhBttBF,CgBstBG,EAAE,ChBvtBK;MgBwtB1B5P,AxBrKJ,MwBqKU,AvB+VN,CDpgBG,EwBqKM,ExBrKF,EwBqKMm9L,EhBttBA,EgBstBI,CAAC,CAAC,ChBxtBO;IgBytB5B,AxBpKH,UCogBMhiM,KAAK,COtjCM,EPsjCHolL,GOzjCiB,EPyjCZ,CAACt5E,IAAI;EDpgBvB,EwBsKEjnG,MAAM,AvBgWL,CuBhWMsP,CAAC,GAAG,CAAC,IAAI,CAACA,CAAC,AhBvtBF,KAJY;IgB4tB5BtP,AxBvKFzI,GAAA,GwBuKQ,AvBiWL,CuBjWMqY,CAAC,GAAG,CAAC,IAAI,CAACA,AhBvtBF,CgButBG,IhB5tBU;IgB6tB5B5P,AxBxKFvI,IC0gBE,CD1gBF,CwBwKQ,CAACssB,AxBtKV,CwBsKW,CvBkWH,CAAC,CuBlWK,CAAC,IAAI,AxBtKnB7P,CwBsKoB6P,AhBvtBFjoB,CgButBG,QhB7tBU,GRujBjB6R,KAAK,EAAElW,KAAK,EAAG;IwBuK1B,ExBrKF,ICwgBG,CuBnWMuI,GxBrKA2N,GwBqKM,CvBmWH+xC,CDxgBE,GQljBI5jD,CP0jCD,CAAC2jL,OAAO,CAACC,GAAG;EuBlW7B,MxBpKC,GQ3jBK,CPmkCF,AOnkCE,CR2jBA,CAAC,GCwgBEn+K,YAAK,CAACC,SAAS;EuBnWxB,QxBrKS,IAAI,AC0gBR,CD1gBS8N,AQljBH67K,CRkjBI,EC0gBLzrI,CD1gBQjoD,IC0gBH,CD1gBQ,AC0gBPknL,AO5jCV,EAAgBtyG,MAAAA,CAAOo/G,CP4jCH,KAAK,CO5jCT,IP4jCc,AO5jCI,IP4jCA/rI,CO5jClC,EACE2sB,EP2jCqC,CAAC0yG,GO3jCtC1yG,CAAOq/G,KP2jCwC,KAAK,AO5jCtD,EACqBl2B,GP2jCsC,EAAG,CO5jC9D,EAEEnpF,MAAAA,CAAOu4G,OAFT,EAEkBv4G,MAAAA,CAAO0/G,MAFzB,EAGE1/G,MAAAA,CAAOy4G,QAHT,EAGmBz4G,MAAAA,CAAOw4G,OAH1B,EAIEx4G,MAAAA,CAAO2/G,OAJT,EAIkB3/G,MAAAA,CAAO4/G,QAJzB,CAAA;AgBwtBR,UxBtK2B,IC4gBpB7G,wBAAwB,CAAC,CAAC;AuBrWjC,QxBtKG,KAAK,CAAC,AC6gBFjqL,KAAK,GAAGolL,KAAK,CAAC4B,eAAe;AuBtWpC,UxBvKW,IAAI,AC+gBR,CD/gBSvyK,CAAC,GAAGnY,KAAK;AwBwKzB,UxBxK2B,ECihBrB,KAAK8J,YAAK,CAACE,YAAY;QDhhB1B,MCkhBI,AO7jCKyqL,IP6jCAxsI,KAAK,AO7jCT,CP6jCUi/H,AO7jCIwM,SAAd,CP6jCoB,CO7jCK9+G,IP6jCA,EO7jCAA,CAAOo/G,EP6jCF,IAAI/rI,CO7jCT,IP6jCc,AO7jCI,CP6jCHm/H,IO7jCxC,EAAkDxyG,MP6jCE,AO7jCFA,CAAOq/G,IP6jCA,KAAK,CO7jCZ,CP6jCe,GO7jCM,IAAvE,CAAA;EgBqtBNtxI,QAAQA,AxB1KE,CwB0KDviB,EAAE,CvB0WNwtJ,CuB1WQnvD,CxB1KG,CwB0KD,EAAE,CxB1KG96H,KAAK,CAAE,eCohBK,CAAC,CAAC,QDphBkB,GAAGuS,KAAM,CAAC;IwB2K5D,ExBzKF,IwByKQqxL,IAAI,AvB2WP7jM,GuB3WU,EvB2WL,EuB3WS,CAACiC,AvB2WPmjL,KAAK,CuB3WQ,AvB2WP6B,CuB3WQ,CAAC,gBvB2WS;IuBzWnC,ExBzKF,EwByKM4c,IAAI,CxBzKH,CCohBF,CuB3WQ,ExBzKF,CwByKK,EAAE;IxBvKnB,EwBwKK,KhBrtBKlT,CgBqtBC38K,AvB4WN,CuB5WO,GAAG8vL,GhBrtBZ,CAAgB3T,GAAhB,EAAqBF,GAArB,CAAA,EgBqtB2B;ExBxK7B,IwByKI,GhBrtBGv9K,GgBqtBGqxL,EvB6WL/jM,GuB7WU,EvB6WL,CuB7WQ,CAAC,CvB6WNolL,AOlkCX,CAAmB+K,CgBqtBC0T,EhBrtBpB,CPkkCgB,AOlkChB,CgBqtBwB,AvB6WP/3F,IAAI;GOzqCb,CRmpBV1vG,EwB0KI4X,CAAC,AxB1KL,CwB0KMyD,EvB8WH,CuB9WM,CAAC,IAAI,CAACtD,CAAC,GAAG4vL,KAAK,EAAE,IAAI,CAACtvL,CAAC,GAAGsvL,KAAK,EAAE,IAAI,CAACn7K,CAAC,GAAGm7K,KAAK,CAAC;IxB1KzDznM,EwB2KI,EhB7sBE,CRkiBN,CC0hBG,CDxhBJ,CwByKW0nM,KhB7sBJ,EgB6sBW,CxBzKlBhrL,CQpiBO,CgB6sBcirL,AhB7sBL1U,IAAT,EAAe58K,KRoiBRH,AQpiBP,EAAsB+5K,GRoiBV,CQpiBZ,CRoiBe,CQpiBayE,EgB6sBO,KhB7sBnC,EAAqC;MgB+sBvC,AxBzKJ,ECwhBE,AO7jCMC,EgB8sBAh+K,EhB9sBAg+K,EgB8sBI,AxBzKHz+K,CwByKIyC,AhB9sBE+7K,GgB8sBC,CAACh9K,AxBzKH,CwByKI,CAACG,CAAC,AhB9sBL68K,CgB8sBM,GAAG,AhB9sBE,GgB8sBC,EAAE,AhB9sB3B;QgB+sBIgT,AxBxKL,AQtiBKzU,EP8jCHvvL,EO9jCGuvL,CRsiBA,AQtiBKv9K,CRsiBJ,CwBwKM,AvBgXL,CuBhXMyF,EvBgXH2tK,CuBhXM,CAAC,CAAC,EAAE,AvBgXL,CuBhXM,AvBgXLt5E,EuBhXO,CAAC,CAAC,AvBgXL,CO9jCnB,EAA2B;MPgkC5B,EuBjXK93F,CAAC,CAACyG,AxBzKC,CQriBAzI,IgB8sBI,CAACgyL,CxBzKE,IAAI,CAAC7vL,CwByKA,AxBzKC,EwByKCuoB,EAAE,AhB9sBrB,CgB8sBsB,AhB9sBA/pB,KAAtB,EAA6B45K,IAA7B,EAAmC0E,IAAnC,CAAA;KADF,CgBgtBE,AvBkXH,CuBlXI,CxBzKJ,EC2hBKjxL,COhkCG,EgB8sBE,AxBzKL,CAAC,CC2hBI,AOhkCEuvL,IAAAA,CPgkCGnK,AOhkCE8L,KPgkCG,CAACplF,IAAI,COhkCjB,CPgkCoB,COhkCE;QgB+sBzBk4F,AvBmXJz/I,ED7hBO,CQpiBA2sI,EPikCF,CAACx+K,CuBnXK,CAAC+E,CxB1KE,EwB0KC,CAAC,CAAC,AxB1KC,CAAChD,AQpiBjB,CgB8sBiB,AxB1KC,AQpiBD,CgB8sBC,EAAE,CAAC,AvBmXJ,AOjkCA,CgB8sBK,AvBmXHguK,EOjkCK9vK,KAAxB,EAA+B45K,EPikCA,CAAC,COjkChC,CAAA;MPmkCH,EuBpXKv4K,AxB1KL,CwB0KM,CAACyG,KAAK,CAACupL,OAAO,EAAEtnK,EAAE,CAAC;IvBsX1B,EuBrXI,IxB3KM,CQniBD4yJ,GAAP,ERmiBc,IAAIrvL,KAAK,CAAE,yBAAyB,GAAGuS,KAAM,CAAC;GQ3pBpD,CP6rCV,EuBrXIwB,AxB3KJ,CwB2KK,CAACyG,KAAK,AvBqXFswK,CuBrXGruJ,EAAE,EAAEq+F,EAAE,CAAC,GvBqXCgwD,CAAEp4K,KAAK,EAAG;IuBpX5B,AxB1KH,CwB0KI,CvBsXF04K,IO7jCO,CgBusBC,OvBsXI,CAAE14K,AO7jCP,KP6jCa,CAAC,AO7jCd,CAAS48K,IAAT,EAAe58K,KAAf,EAAsB45K,IAAtB,EAA4ByE,OAA5B,EAAqC;ER6hB7C,IwB2KI,AvBuXH,EO9jCOC,IAAAA,EP8jCEjxL,CO9jCKgxL,IP8jCA,GO9jCAA,IAAW,KAAxB;IR4hBF50L,EwB4KIsgC,CxB5KJ,CwB4KM,AvBwXJ,AO/jCI6yJ,CgBusBC93K,GAAG,AhBvsBJ83K,CgBusBK,AvBwXJnK,AO/jCI9yK,CgBusBC,EAAE,CAAC,CvBwXH,CuBxXK,AvBwXJw0K,CuBxXK,CAAC,UvBwXM,CO/jCvB,EAA8B;IR2hBhCxqL,EwB6KIy+H,EAAE,CAACtjH,AxB7KP,CCsiBG,CDpiBJ,AQ5hBUnF,CgBusBC,CAAC,CAAC,AvByXJiyC,EuBzXM,CAAC,EAAE,AvByXJ,CuBzXK,AxB3KnBtrC,ACoiBeyqK,CuBzXK,KxB3KpB,EAAQ,EQ5hBH,CAAyB/wK,CPgkCH,IOhkCtB,CPgkC2B,COhkCK45K,IPgkCA,AOhkChC,EPgkCmC,AOhkCG0E,IAAtC,CAAA;IgBwsBF,ChBzsBA,CR+hBF,ICoiBG9G,COjkCM,ER6hBF,EQ7hBMoF,ER6hBF,EQ7hBEA,CAAK4B,CR6hBH,CAAC5uL,SCoiBQ,AOjkCf,CPikCiBoQ,CDpiBC,AQ7hBI,CR6hBF,GCoiBG,CDpiBC,ACoiBA,CDpiBCwB,CAAC,EAAE,IAAI,CAACM,CAAE,CAAC;EwB2K7C,ExBzKD,MCoiBI8vC,COlkCM4sI,IPkkCD,CAAC9iK,MAAM,AOlkCX,CPkkCY,AOlkCK,CPkkCJ,GOlkCI,GAAO1b,KAAxB,EAA+B45K,IAA/B,CAAA;EgBwsBJ,AxB1KA,QCsiBG;AuB3XL,IxB3KEnwL,GAAA,CCwiBE,GOpkCOkzL,EPokCFlK,COpkCL,IPokCU,CAAC2B,SAAS;AuB5XxB,GhBj1BY,CRqqBVzqL,KAAA,CC0iBG,CDxiBJ,GCwiBSioD,KAAK,CDxiBdrrC,ACwiBe0qK,KDxiBTzqK,CAAC,EAAG,CCwiBc,KAAK,KAAK,EAAG;MDtiBpC,IAAI,ACwiBDkxK,CDxiBEl2K,CAAC,AQxhBI,GRwhBDgF,CAAC,CAAChF,CAAC,GQxhBF,OPgkCW,CAAExB,AOhkCb,CAAS48K,IPgkCU,AOhkCnB,CPgkCoB,COhkCLW,SAAf,EAA0B;EgBmsBpCl/I,IxB1KA,EQxhBMu+I,EgBksBEv+I,AxB1KJ,ACyiBDuT,CuB/XK,AxB1KH9vC,CAAC,AQxhBA86K,CgBksBK,AhBlsBAW,ERwhBF/2K,ACyiBD,CDziBE,ACyiBDkV,CDziBE5Z,CAAC,ICyiBG,AOjkCT,CPikCU,CAAC,GOjkCQ9T,SAAvB,EAAkC;IgBmsBlC,ExBzKF,ICyiBG,CuBhYO,AhBlsBDuvL,ERyhBF,CwByKK,GxBzKD,CwByKK,CAAC/7K,CAAE,AhBlsBf,GAAiB+7K,CgBksBC,IAAI,CAACz7K,CAAE,EhBlsBzB,EgBksB4B,IAAI,CAACmU,CAAE,EAAC;EACxC,ExBxKD,CQ5hBG,GPqkCA,GOnkCO,EPmkCFw8J,EOnkCMmK,GPmkCD,CAACvI,AOnkCAuI,CAAKW,SAAL,KPmkCe,AOnkCIA,SAAvB,EAAkC;EgBmsB3C,AxBzKA,QC2iBG,AOpkCOkB,IPokCF7sI,GOpkCE6sI,EPokCG,CAAC5N,AOpkCM+L,IAAAA,CAAKW,KPokCD,IOpkCJ,CPokCS,AOpkCMlwG,KPokCD,AOpkCd,CAAqB,GPokCHz7B,COpkClB,CAAhB,GPokCuC,CAACq/H,SAAS,KAAK,KAAK,EAAG;AuBjYpE,IxB1KExnL,GAAA,GC6iBGmuL,AOrkCK6G,OAAAA,CAAQh/K,OAAR,CAAgB89K,OPqkCE,CAAEv9K,COrkCpB,CAAA,GPqkC0B,CAAC,COrkCI,CAAC,CAApC,EAAuC;AgBmsB7C,IxB3KErW,KAAA,CC+iBGioD,CD7iBJ,IC6iBS,CAACl2B,AOtkCK3sB,IRyhBf0X,AQzhBO,CAAa82K,CPskCJ,CAAC,CD7iBZ/2K,AC6iBa,CD7iBZ,EAAG,GQzhBF,CAAA;MR2hBN,IAAI,AC6iBD,CD7iBEhF,CAAC,CQ1hBK+7K,GR0hBD/2K,CAAC,CAAChF,CAAC,GQ1hBP,GAAiBi9K,OAAAA,CAAQjxG,IAAR,CAAa,GAAb,CAAA,CAAkB2C,OAAlB,CAA0B,MAA1B,EAAkC,EAAlC,CAAA,CAAsCA,OAAtC,CAA8C,MAA9C,EAAsD,EAAtD,CAAjB;EgBosBN9mE,IxBzKA,EC8iBE,CuBrYKA,CAAA,AxBzKH,CAACvH,CwByKK,AxBzKJ,CC8iBC2wK,GD9iBGjsK,CAAC,CAAC1E,AC8iBA,CD9iBC,AC8iBAwyK,kBAAkB;IuBpY7B,ExBxKF,IC8iBG,CuBtYM,CAAC,CxBxKH,CC8iBC1iI,EuBtYM,CAACpwC,AxBxKJ,CwBwKK,CvBsYH,CuBtYK,AvBsYJqvK,IuBtYQ,CAAC/uK,CAAC,EAAE,EvBsYF,EuBtYM,CAACmU,CAAC,CAAC,AvBsYJ,KAAK,IAAI27B,KAAK,CAACm/H,YAAY,KAAK,KAAK,EAAG;EuBrYrE,ExBvKD,MC8iBI8G,CO1kCM8E,GAAP,sBP0kC2B,CAAE38K,KAAM,CAAC;EuBtYtC,AxBxKA,CQvrBU,OPuuCP4xC,KAAK,CAACl2B,MAAM,CAAC,CAAC;AuBvYnB,IxBzKEjyB,GAAA,GCkjBG,KOtkCU,SAAA,WAAA,CAASmzL,IAAT,EAAeW,SAAf,EAA0B;AgB8rBzC,IxB1KE5zL,ICojBE,AOvkCI4zL,CRmhBN,EAED,MQrhBG,EAAe,CRqhBlB72K,UAAWzD,CAAC,EAAG;MAEd,IAAI,ACkjBD5V,AOxkCKuvL,CRshBHp7K,CAAC,EQthBEo7K,CPwkCA,AOxkCKW,CRshBHt6K,CAAC,CCkjBAwvK,KAAK,CAACt5E,AOxkCT,IPwkCa,COxkCMokF,SAAvB,EAAkC;EgB+rBtCh3K,IAAIA,AxBxKJ,ACmjBC,CuB3YIge,GxBxKD,CAACziB,CAAC,CwBwKK,AhB9rBA48K,EgB8rBE,CxBxKHz7K,CAAC,WQthBL,CAAqB,OAArB,CAAA;IgB+rBJ,AvB4YF,EDnjBA,CQzhBI,CgBgsBE,CAACzB,CAAC,GAAG+iB,AxBvKJ,AQvhBI,IRuhBA,EwBuKM,CAAC/iB,CAAC;IACjB,AxBtKH,ACmjBC,IuB7YM,CAACM,CAAC,EhB9rBI28K,CgB8rBDl6J,AvB6YFuvJ,MuB7YQ,AhB9rBL2K,CgB8rBM38K,CAAC,ChB9rBG86K,IP2kCA9I,AO3kCA8I,CP2kCE58K,AO3kCGu9K,KP2kCE,EAAG,EO3kCV,CAAelwG,KAAf,CAAqB,IAArB,CAAhB;ERwhBN,EwBuKE,EvB8YD,EuB9YK,CAACp3D,CAAC,AvB8YF27B,EO5kCM/xC,CgB8rBD0kB,EvB8YA,CAACpU,CO5kCAtQ,EgB8rBK,CAACoW,AhB9rBEwoK,CgB8rBD,EvB8YA,IO5kCCA,CP4kCI,AO5kCIh/K,KP4kCC,EAAG,AO5kCZ,CAAgB89K,SAAhB,CAAd;IgB+rBJ,AxBxKF9zL,ECujBCuW,CDvjBD,IwBwKS,AvB+YH,CAACg1G,AO7kCGn1G,GgB8rBG,EhB9rBHA,KAAU,CAAC,CAAf,EP6kCe,AO7kCG,CP6kCF,CAAC;EuB9YvB,ExBzKAlW,ACyjBA,KDzjBA,EAED,OQvhBiBmW,ERuhBjB6G,IQvhBS,CAAe9G,KAAf,CRuhBGmE,CAAC,AQvhBkB,CAAtB,CRuhBMC,AQvhBN,CRuhBO,EAAG;EwBwKlB,EvBiZA,EDvjBA,IAAI,CAACzC,CAAC,CCujBGw2K,EDvjBAh0K,AQxhBIu5K,CRwhBH,CAAC/7K,CAAC,GAAGyC,CAAC,CAACzC,ACujBEw2K,CDvjBD,ACujBGh4K,AO/kCb,GAAiBy+K,EP+kCC,EAAG,GO/kCJA,CAAQjxG,IAAR,CAAa,GAAb,CAAjB;AgB+rBV,MxBtKE,ACwjBCwnG,IDxjBG,CAAClzK,CAAC,ECwjBG,CDxjBAkC,ACwjBCjV,CDxjBA,CAAC+S,CAAC,CCwjBE,CAAE9B,CDxjBDiE,CAAC,CAACnC,CAAC,CCwjBI,CAAC;AuBjZzB,IvBmZE,EDxjBA,OAAO,IAAI;AwBsKb,IxBpKC,ACwjBC,CO7lCE,MAWO,EPklCAw2K,aAAaA,CAAEt4K,KAAK,EAAG;EDxjBhC,IC0jBC,KOnlCQu9K,EPmlCDtI,OOnlCJ,GAAiBjnL,MPmlCG,CAAEgS,EOnlCtB,GPmlC2B,CAAC+3K,SAAS,CAAE;EuBnZ3Ch2K,ExBvKAtY,EwBuKIsY,AvBqZH,CuBrZIwiB,AxBvKL,IC4jBO,EuBrZI,EAAEviB,AvBqZFzS,CuBrZG,AvBqZF,EuBrZI2C,CvBqZD,CAAC,EAAE3C,CAAC,CuBrZG,EAAE,AvBqZFylL,QAAQ,CAAC1lL,MAAM,EAAEC,CAAC,EAAG,EAAG;IuBpZ5C,AxBxKF5F,IC8jBE,CD9jBF,CwBwKQ6X,CAAC,AxBtKV,AQzhBUm7K,CPqlCF3H,EuBtZK,AhB/rBV,IgB+rBc,CAACxzK,CAAC,AxBtKnBoF,AC4jBgB,CAAErX,CAAC,CAAE,CAACwoL,SAAS,GD5jBdvxK,CAAC,AC4jBiBxG,ED5jBfiD,CAAC,EAAG,AC4jBgB,CAAC80K,SAAS,EAAG;GOvwC1C,CgBk3BR,ExBrKF,IwBqKQj2K,AxBrKJ,AC4jBDkzK,CuBvZM,AxBrKJxzK,CAAC,EwBqKM,ExBrKFgF,CAAC,CwBqKK,AxBrKJhF,AC4jBD,CuBvZMM,AxBrKJ,AC4jBDhC,CuBvZM,ExBrKFmD,CAAC,EC4jBC,CAAE1T,CAAC,EAAE,CAAE,CAAC;IuBtZxB,ExBrKF,IwBqKQ0mB,AxBrKJ,AC4jBD,CuBvZM,AxBrKJnU,CAAC,AQzhBI,EgB8rBE,ExBrKF0E,CAAC,CwBqKK,AxBrKJ1E,CwBqKKmU,AxBrKJ,CwBqKK,ChB9rBR,CRyhBMhT,CAAC,MQzhBP,CAAS25K,IAAT,EAAeW,SAAf,EAA0B;IgB+rBlCrrL,ExBpKF,EC4jBE,EuBxZM,CAACsP,AhB9rBA,CgB8rBC,CxBpKH,EwBoKMA,AhB9rBAqyJ,CgB8rBC,CxBpKH,EwBoKM,CAACtvI,ChB9rBT,CAAW,IgB8rBI,CAAC/iB,CAAC,GAAGA,CAAC,EhB9rBV,EgB8rBcQ,CAAC,AhB9rBAu7K,SAAf,GAA2B,YAAtC,CAAA,CAAoDpsK,IAApD,CAAyDyrK,IAAAA,CAAKW,SAA9D,CAAA,IAA4E,KAAnF;GAtLQ,CgBq3BRrrL,AxBnKH,EC4jBE,IuBzZO,CAAC4P,CAAC,GAAGA,CAAC,GAAG,CAACyiB,MAAM,CAACziB,CAAC,GAAGA,CAAC,IAAIE,CAAC;ExBnKnC,EwBoKE9P,AvB0ZF,MuB1ZQ,CAAC+jB,CAAC,AhBzrBA,GgByrBGA,CAAC,GAAG,CAACsO,ChBzrBR,KgByrBc,CAACtO,CAAC,ChBzrBhB,CAAS2mK,CgByrBU3mK,CAAC,EhBzrBpB,EgByrBwBjU,AhBzrBT,CgByrBU;EACnC,ExBrKAvY,ACgkBA,GDhkBA,CQphBQk6C,KPolCC+0I,AOplCD/0I,GAAQg7I,SPolCKjG,CAAE14K,KAAK,COplCZ2+K,CPolCe,AOplCE/B,IAAjB,CAAd;EgB0rBF,ExBtKAjzL,ECkkBC,GDlkBD,CCkkBKq7B,CDhkBN,AQphBUy3J,OPolCI,EDhkBd51K,CCgkBiBouK,GDhkBZzuK,CAAC,EAAG,AQphBCi2K,CAAiB94I,KAAAA,CAAM,GPolCA,CAAE3jC,KAAK,CAAC+3K,SAAS,AOplCvB,CPolCyB,AOplC1C,CAAA,GACL0E,gBAAAA,CAAiB94I,KAAAA,CAAM,oBAAN,CAAjB,CADK,GAEL84I,gBAAAA,CAAiB94I,KAAAA,CAAM,cAAN,CAAjB,CAFK,GAGL84I,gBAAAA,CAAiB94I,KAAAA,CAAM,eAAN,CAAjB,CAHK,GAIL84I,gBAAAA,CAAiB94I,KAAAA,CAAMpyB,KAAvB,CAJF;AgByrBJ,GhBz3BY,GRstBV,ACgkBC,IDhkBG,ACgkBEyT,CDhkBDxjB,CAAC,IAAIgF,CAAC,CAAChF,ACgkBE,CDhkBD,ICgkBMxT,SAAS,EAAG;AuB5ZjC,MxBnKE,ECikBEg3B,EDjkBE,CAACljB,CAAC,CQ5gBK,GR4gBD0E,ACikBA,CDjkBC,CAAC1E,CAAC,ACikBA,GO7kCF,CP6kCM8D,QO7kCN,CAASg3K,IAAT,CP6kCa,CAAC,AO7kCC,CP6kCA;MD/jB1B,ECgkBE3H,AO7kCMtxI,KR6gBD,AQ7gBCA,GAAQg7I,CR6gBL,OCgkBO,CAAE3+K,KAAK,CAAC+3K,CO7kCV4G,CAAiB/B,IAAjB,CAAd,EP6kCiC,CAAE,GAAG53J,QAAQ;EuB5ZhDusK,ExBlKD,ECgkBE,KO7kCQ9U,GgB+qBG8U,CAAChtK,MAAM,EAAEiZ,IhB/qBZi/I,CAAiB94I,IgB+qBI,ChB/qBJA,CgB+qBM,AhB/qBA,kBAAN,CAAjB,CAAA,GACL84I,gBAAAA,CAAiB94I,KAAAA,CAAM,qBAAN,CAAjB,CADK,GAEL84I,gBAAAA,CAAiB94I,KAAAA,CAAM,aAAN,CAAjB,CAFK,GAGL84I,gBAAAA,CAAiB94I,KAAAA,CAAM,gBAAN,CAAjB,CAHK,GAIL84I,gBAAAA,CAAiB94I,KAAAA,CAAMnyB,MAAvB,CAJF;ER6gBF,CQ3tBU,CgB83BR,EvB+ZDwT,EuB/ZKwY,MvB+ZG,CAAC14B,EuB/ZK,CvB+ZF,CAAE9E,GuB/ZK,EvB+ZA,CAACk3K,EuB/ZI,CAAC,EAAE,AvB+ZF,EAAEl3K,KAAK,CAACm3K,KAAM,CAAC;IDlkBzC1tL,ACokBA,EuBhaI+zC,CxBpKJ,MQlgBW,EgBsqBE,GAAG,IAAI,AhBtqBT,SAAA,CAASohJ,EAAT,EAAa;IgBuqBtB,AxBrKFj1L,ACskBA,IOvkCMizL,CRigBN,EAED,CQngBOA,CPukCGnF,EOvkCImH,EAAX,GRmgBH93K,UAAW7D,CAAC,EAAG,ICokBmBw0K,CAAEz3K,KAAK,EAAG;IuB/ZzC,ExBnKF,ACokBC,EuBjaKM,AhBvqBE8I,ERogBJ,ACokBGuvK,CDpkBFn3K,CwBmKK,AxBnKJ,CwBmKKc,ChBvqBH8G,EgBuqBM,AxBnKJnG,CwBmKK,AxBnKJ,ACokBG,AOxkCG,GPwkCEjD,CuBjaA,CAACwB,CAAC,EvBiaG,CuBjaA+iB,AvBiaCwzJ,MuBjaK,CAACv2K,CAAC,CAAC,AvBiaC,GuBjaEg8B,EvBiaGw3I,OuBjaM,CvBiaE,CAAE,CAAC,CuBjaD10K,AvBiaG,CAACy3K,GuBjaA,CAACz1K,GAAG,CAAC,CvBiaI,GuBjaA,AvBiaK0yK,CuBjaJlzK,CAAC,GAAGyiB,GvBiaQ,CAAE,CAAC,CuBjaL,AvBiaO,CuBjaNziB,CAAC,CAAC,AvBiaOkzK,GuBjaJx3I,KvBiaY,CAAE,CAAC,CAAE,CuBjaR,IAAIl9B,IAAI,CAACgC,GAAG,CAAC,IAAI,CAAC2T,CAAC,GAAGsO,MAAM,CAACtO,CAAC,CAAC,GAAGunB,SAAS,EAAE;MACjI,AxBnKJ,ACqkBC,AO1kCkB3N,IRqgBf,AQrgBeA,CRqgBd/tB,CAAC,AQrgBmB,CgBwqBd,AvBkaHmzK,AO1kCS,GRqgBPhyK,CAAC,CwBmKK,WvBkaQ,CAAE01K,OAAO,CAACZ,SAAS,CAAE;IuBja3C,AvBmaF,EDrkBA,AQvgB4BhoJ,GAAAA,EAAK,ERugB1B,IAAI;IwBoKT,AxBlKH,AQzgBkB,CAAf,MgB2qBO,IAAI;EACb,AxBnKA,ECqkBA,IO7kCM6sJ,IAAAA,CAAKiC,YAAT,EAAuB;EgB4qBzB,ExBpKAp1L,GAAA,EQvgBO;AgB4qBT,IxBrKEE,ACukBAioD,KDvkBA,ACukBK,CAAC4+D,CDrkBP,IQxgBc3gF,IAAP,CRwgBP9oB,ACqkBiB,CAAC1H,EO7kCIu9K,IAAAA,CAAKkC,GRwgBf96K,CAAC,EAAEC,CAAC,EAAG,ACqkBe,CAAE,AO7kC7B,aP6kC0C,EAAE6vK,aAAc,CAAC;AuBjanE,IvBmaEliI,EDrkBA,GCqkBK,CDrkBD,ACqkBE4+D,CDrkBDhvG,CAAC,GAAGwC,AQzgBI+rB,CRygBH,CAACvuB,CAAC,AQzgBN,EP8kCU,CDrkBDyC,ACqkBE5E,CDrkBD,AQzgBIu9K,CRygBHp7K,CAAC,EQzgBEo7K,CAAKmC,SAAnB,CP8kC2B,CAAE,aAAa,EAAEhL,aAAc,CAAC;IACjEniI,EDrkBA,GCqkBK,CDrkBD,ACqkBE4+D,CDrkBD1uG,CAAC,GAAGkC,AQzgBI44K,CRygBH,CAAC96K,CAAC,CQzgBC86K,CP8kCG,AO9kCEiC,CRygBH56K,ACqkBE5E,CDrkBD,CAACyC,CAAC,QQzgBZ,KP8kC2B,CAAE,eAAe,EAAEkyK,WAAY,CAAC;EuBjajEwd,EvBkaA5/I,EDpkBA,CQ9gBI,EPklCC,CAAC4+D,EuBlaIghF,CAACh0J,AxBlKJ,EQ1gBMo/I,ER0gBF,EQ9gBP,CPklCY,CAACv9K,CuBlaG,EAAE,avBkaW,CAAE,OAAO,EAAE40K,YAAY,EAAE;IuBjaxD,AxBjKH,ECkkB6D2E,EuBjatDp7I,KvBia6D,EAAE,EuBjatD,KAAK,KAAK,CAAC,EAAE;ExBjK5B,ECkkB2E,CAAE,CuBhazEA,AvBga0E,KO5kCrEp0B,IgB4qBI,EhB5qBX,CgB4qBc,IAAI;GhB/4BV,CgBg5BR,AxBnKF3f,GAAA;IwBqKE,AxBrKFE,ACokBA,IuB/ZM2W,CxBrKN,EAED,CwBmKW,AhBvqBA,CgBuqBCgC,GAAG,CAAC,GxBnKhB0E,CwBmKoB,AhBvqBT,CgBuqBUxF,CAAC,CAAC,GAAGg8B,ExBnKhBh3B,AQpgBC,CRogBA,AQpgBSo2K,ERogBN,EQpgBH,EgBuqBwB,AhBvqBT,IgBuqBat8K,IAAI,CAACgC,GAAG,CAAC,IAAI,CAACR,CAAC,CAAC,GAAG07B,SAAS,IAAIl9B,IAAI,CAACgC,GAAG,CAAC,IAAI,CAAC2T,CAAC,CAAC,GAAGunB,SAAS,EAAE;MAChG,AxBlKJ,IAAI,CAACh8B,AQrgBIo7K,CRqgBH,CwBkKK,EhBvqBFA,CRqgBCp2K,CAAC,CwBkKK,AxBlKJhF,CAAC,CQrgBKwN,QAAAA,CAASgwK,aAAlB,KAAoCpC,IAAAA,CAAKpxL,IAAL,IAAaoxL,IAAAA,CAAKqC,IAAtD,CAAP;IgBwqBA,AvB+ZFtuE,EDjkBA,GCikBA,CDjkBI,ACikBCj1F,CDjkBA5Z,CAAC,IAAI0E,ACikBC,CDjkBA,ACikBC,CDjkBA1E,ACikBC,CDjkBA;CQlvBf,GgBs5BI,AvB6ZY,ED/jBd,KwBkKS,AvB6ZK6uG,ED/jBP,EwBkKM,CvB6ZC,CD/jBH;EwBmKX,AvB8ZD,ED/jBA,AShxBKuuE,iBAAAA,GAAAA,UAAAA,WAAAA,EAAAA;Eek7BJ,AxBlKA,AC+jBA,OAAA5sL,YAAA,CAAA49K,aAAA;AuB5ZF,AvB4ZE,EA50C0B9wK,ED6wB1B3V,GAAA,iBC7wByC,KQF7B8G,MAAZ,EAAoByiD,QAApB,EAA8B;Aem7BhC,AvBj7B2C/pD,ID6wBzCU,GC7wByC,CAAAumL,CD6wBzC,EAED,SAAAjpK,CC/wB0C,GAAAipK,WD+wB1BjqK,EC/wB0B,ID+wBpB,EAAG;AwBmK1B,MxBjKE,IAAI,CAACzE,CAAC,IAAIyE,MAAM,gHSlxBR1V,MADsB,EACdyiD,QADc,CAAA,CAAA;MToxB9B,ESjxBQ29D,ETixBJ,CAAC7uG,CAAC,CSjxBE6uG,GTixBE1qG,ASjxBF0qG,MTixBQ,ASjxBd;Eeo7BF8gF,IxBjKA,KSlxBOtS,ETkxBA,IAAI,ASlxBT,Cem7BcsS,CAACltK,Cfn7BD,Kem7BO,Cfn7BP,Cem7BSiZ,Afn7BJ+1H,QAAL,Cem7BkB,Afn7BlB,CAAd,Cem7BkC;IAClC,AxBhKH,IwBgKO,CAAC3rJ,Efl7BAw3K,Iek7BM,CAACsS,Kfl7BZ,GAAkB1iL,Cek7BG,CAAC,Mfl7BJA,CAASktK,aAAT,CAAu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,EAAkB;Acw9B7C,IxB3JE5tC,GAAA,KU5zBU4tC,OAAJ,CAAA,GAAeA,OAAf;Acw9BR,IxB5JE1tC,GU7zBI,CAAA,CV6zBJ,EAED,SAAA4d,YAAaC,MAAM,EAAEC,MAAM,EAAG;MAE7B,IAAI,CAACjG,CAAC,GAAGlB,CU9zBK4/B,GV8zBD,AU9zBT,CV8zBU/+B,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACjG,CAAE,CAAE,CAAC;EwB2JvDiiB,IxB1JA,IAAI,CAAC3hB,CAAC,GwB0JO2hB,AxB1JJnjB,CwB0JKojB,GxB1JD,CAACviB,EwB0JM,CxB1JH,CwB0JK6jB,AxB1JHxd,MAAM,EwB0JK,AxB1JHlH,EwB0JKib,ExB1JD,CAACra,GAAG,CAAEuG,GwB0JK,EAAEwqL,CxB1JD,EAAE,IAAI,CwB0JG,AxB1JFnwL,CAAE,CwB0JE,AxB1JA,CAAC;IwB2JrD,ExBzJF,IwByJQ5B,CAAC,Adv9BAk5K,EV8zBF,CwByJK,Cdv9BV,CAAYphK,CV8zBH,CwByJK,CAAC+5K,Idv9Bf,EAAqB,Icu9BI,Mdv9BKpoM,KAAT,EAAgBF,GAAhB,EAAqB;Icw9B1C,AxBxJH,MwBwJSs5B,Adv9BE48J,Ccu9BD,Edv9BCA,Ccu9BE,Edv9BI3wK,Ecu9BA,CAACgjL,Kdv9BDhjL,CAASktK,Icu9BE,Sdv9BX,CAAuB,QAAvB,CAAZ;EV+zBJ,EwByJE,MAAMn4K,Adv9BA67K,Ccu9BC,GAAGrkK,Kdv9BR,GAAgB9xB,Ecu9BE,CAAC,Adv9BnB,Ccu9BoB;IxBzJxBA,GAAA,GU7zBQ0hD,YAAJ,CAAiB,OAAjB,EAA0BxhD,KAA1B,CAAA;Icw9BFuW,AxB3JFvW,CwB2JG,CAAC4c,GxB3JJ,CwB2JQ,CAACmd,AxBzJV,CU9zBWg8J,Kcu9BK,CAAC,CAAC,CAAC,AxBzJnBh4K,AU9zBK,Ccu9Be,Adv9BA43K,WV8zBPp+K,AU9zBR,CAA2By+K,EV8zBhB,CU9zBX,CV8zBax+K,AU9zBb,GV8zBgB,EAAG;IwB2JrB,Cd79BA,CVo0BF,AUp0BE,Ec69BI4C,CAAC,CxBzJ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A;AYokCN,IxBpJC;AwBqJD,ExBrJE,0BY/6BY9vL,MAAZ,EAAoByiD,QAApB,EAA8BurB,MAA9B,EAAsC;IZ+6BtC90E,GAAA;EwBwJA2oM,ExBxJAzoM,KAAA,CwBwJQyoM,CAACD,AxBtJV,IwBsJc,EAAE,GxBtJhB/pL,QAAS5B,CAAC,EAAG,oGYh7BJjW,MAD8B,EACtByiD,QADsB,CAAA,CAAA;IYwkCpC,ExBrJF,EYh7BQstI,EYqkCA+R,AxBrJFhqL,EwBqJI,GAAG,AZrkCLi4K,GAAU/hH,CYqkCD,CAACwzH,CxBrJD,GAAGzxL,AYh7BFi+D,IZg7BM,AYh7BI,CZg7BHv2D,AYh7BG,CYqkCA,AZrkC1B,GZg7B2B,CAAE,IAAI,CAACD,QAAQ,CAAC,CAAC,GAAGvB,CAAC,CAACuB,QAAQ,CAAC,CAAE,CAAC;IwBsJ7D,ExBpJF,IwBoJQgW,AxBpJH1V,AYh7BEk4K,EYokCG,GAAG,AZpkCX,GAAaD,CYokCE,CAAC0R,CxBpJF,IYh7BD1R,CZg7BM,AYh7BEp/K,CZg7BD,EAAG,AYh7BvB,CYokC0B,MxBpJIZ,IAAI,CAACC,EAAE,GAAG,CAAC;IwBqJzC,ExBnJF,IwBmJQ+xL,AxBnJFhqL,AYj7BCk4K,EYokCG,GAAG2R,AxBnJF,AYj7BT,GZi7BY,AYj7BC7R,CYokCE,CAACyR,ExBnJA,CAAClqL,EYj7BJy4K,CZi7BO,AYj7BCn/K,CZi7BCqF,CAAE,CAAC,AYj7BzB,CYokC0B,ExBnJE6B,WAAW;IwBoJvC,MAAM6V,AZpkCDuiK,EYokCG,GAAG0R,CZpkCX,GYokCe,AZpkCD7R,CYokCE0R,MZpkCF1R,CAAQ5jK,GYokCI,CAAC,AZpkC3B,CYokC4B;IAC5B,ExBnJF,EYh7BMqkC,MAAAA,CAAOu4H,WAAP,CAAmB,KAAA,CAAKmH,MAAxB,CAAJ,EAAqC;IYokCrC,MZnkCM,KAAA,CAAKxE,YAAL,KAAsB,CAA1B,EAA6B;IYokC/B,ExBnJF,OAAO37K,CYh7BIogL,GZg7BA,CAACn4K,IAAI,CAAEtH,IYh7BZ,CZg7BiB,CAAEqH,CYh7BE,CAArB,GZg7BwB,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;IAE3C,GYn7BK,MAEO;EZi7BX,EwBmJE,MAAMiqL,IZlkCG7R,KYkkCM,GAAG4R,EAAE,CAAC9wL,CAAC,CZlkClB,GYkkCsBuc,AZlkCDzd,EYkkCG,CAACkB,CAAC,AZlkCLlB,CAAKmD,GYkkCIsa,AZlkCT,CAAS,CYkkCE,CAACvc,AZlkCZ,CYkkCa,CZlkCAlB,GYkkCI4d,CZlkCJ5d,CYkkCM,AZlkCDsC,CYkkCEpB,CAAC,GZlkCR,CYkkCY6wL,AZlkCD/xL,EYkkCG,CAACkB,CAAC,AZlkCLlB,CAAKqD,GYkkCIua,AZlkCT,CAAS5d,CYkkCE,CAACkB,CAAC,CZlkCJlB,CAAKgC,EYkkCG4b,CZlkCR,CYkkCU,AZlkCD,CYkkCE1c,CAAC,GZlkCH,CYkkCOuc,AZlkCFk+J,EYkkCI,CAACz6K,CAAC,QZlkCpB,CAAT,CAAA,GAAwClB,IAAAA,CAAKqgL,IAAxD,CAAb,CAAA,GAA8E,EAAnG;IYmkCJ,AxBpJFl3L,GAAA,GwBoJQ+oM,SAAS,GAAGF,EAAE,CAACxwL,CAAC,IAAIic,EAAE,CAACjc,CAAC,IAAIic,EAAE,CAACjc,CAAC,IAAIoc,EAAE,CAACpc,CAAC,IAAIuwL,EAAE,CAACvwL,CAAC,IAAIoc,EAAE,CAACpc,CAAC,IAAIoc,EAAE,CAACpc,CAAC,IAAIic,EAAE,CAACjc,CAAC;IAC9E,AxBrJFnY,CYp7BE,IZo7BF,CwBqJQ8oM,CxBnJT,AY/6BU,QYkkCQ,CxBnJlBjqL,EwBmJqB8pL,EAAE,CAACr8K,CAAC,IAAI8H,CxBnJjBvX,CwBmJmB,AxBnJlB,CwBmJmByP,CAAC,AxBnJjB,IwBmJqB8H,EAAE,CAAC9H,CAAC,IAAIiI,EAAE,CAACjI,CAAC,IAAIo8K,EAAE,CAACp8K,CAAC,IAAIiI,EAAE,CAACjI,CAAC,IAAIiI,EAAE,CAACjI,CAAC,IAAI8H,EAAE,CAAC9H,CAAC;IAC9E,ExBlJF,KwBkJSs8K,CZlkCA7R,CZg7BFpgL,IAAI,CAAC0H,EwBkJM,ExBlJF,CAAE,CwBkJIwqL,CZlkClB,EZg7BkB,CAAC/pL,AYh7BE,KYkkCM,AZlkCN,CAAKg4K,GYkkCKgS,GZlkC/B,KZg7BoC,CwBkJI,AxBlJFjsL,CAAE,CAAE,CAAC;EwBmJ/C,CAAC,CAAC,AxBjJH;EAAC,QY/6BOo6K,WAAL,GAAmBR,WAAAA,CAAY,KAAA,CAAKM,aAAjB,CAAnB;EYmkCFgS,ExBpJAjpM,GAAA,CwBoJMipM,CAAA,EAAG;IACP,AxBrJF/oM,KAAA,CwBqJQuW,CAAC,AxBnJV,GwBmJa,IAAI,CAAC6xL,CxBnJlBtpL,SwBmJ4B,SxBnJTjC,CAAC,EAAG;IwBoJpB,ExBlJF,IwBkJQuc,AxBlJFra,CwBkJG,CxBlJD,EwBkJI,CxBlJD,GwBkJK,CAACspL,AxBlJF,CAACxwL,CAAC,GAAGgF,CAAC,CAAChF,CAAC,EwBkJI;IACzB,IxBnJuBmH,EAAE,CwBmJlB,CAACoa,CAAC,AxBnJmB,CwBmJlBvhB,CAAC,ExBnJqB,CwBmJlBtB,AxBnJmB4B,CwBmJlB,AxBnJmB,CwBmJlBN,CAAC,CxBnJoBgF,CAAC,CAAC1E,CAAC,CwBmJlBihB,CAAC,CAACjhB,CAAC,GAAG5B,CAAC,CAAC4B,CAAC,CAAC,IAAIihB,CAAC,CAAC9M,CAAC,GAAG/V,CAAC,CAAC+V,CAAC,CAAC;EAChD,IxBnJA,OAAOvN,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,CYj7BbnC,CZi7Be,AYj7BfA,EAAG;EYqkCZ,ExBlJD,MYl7BOq6K,EAAAA,GAAKr6K,CAAT;AYqkCJ,ExBnJE,QYh7BM,IAAA,CAAK+5K,KAAL,KAAevyL,SAAf,IAA4B6yL,EAAAA,GAAK,IAAA,CAAKN,KAA1C,EAAiD;AYokCrD,IxBpJE92L,GAAA,MY/6BS,IAAA,CAAK82L,KAAV;IZ+6BJ52L,GYh7BE,EZg7BF,EAED,EYh7BU,IAAI,GZg7Bdif,CYh7Bc,CAAK43K,KAAL,KAAexyL,QZg7BRwY,CAAC,AYh7BR,EZg7BW,EYh7BiBq6K,EAAAA,GAAK,IAAA,CAAKL,KAA1C,EAAiD;EYqkC1DmS,IxBnJA,IwBmJQA,CAACR,ExBnJF7xL,AYj7BE,EYokCI,EAAE,AxBnJJ,AYj7BF,CZi7BGgC,AYj7BEk+K,GZi7BC,CAAE,CYj7Bb,GZi7BiB,CAACh/K,CAAC,GAAGgF,CAAC,CAAChF,CAAE,CAAC,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,GAAG0E,CAAC,CAAC1E,CAAE,CAAC;IwBoJxD,AxBlJH,MwBkJSuwL,EAAE,GAAG,IAAI,CAACN,UAAU;ExBlJ5B,EwBmJE,MAAMh0K,AZnkCF,EYmkCI,EZnkCJ,CYmkCO,AZnkCF0iK,IYmkCM,CAACuR,CZnkCZ,KAAgBhkM,IYmkCM,KZnkCtB,IAA6B6yL,EAAAA,GAAK,IAAA,CAAKJ,MAAV,KAAqB,CAAtD,EAAyD;IYokCzD,AxBpJFh3L,GAAA,GwBoJQ6oM,EAAE,CZnkCDhyL,EYmkCI6xL,EZnkCJ7xL,CAAKoF,CYmkCG,CAACqsL,GZnkCT,CAAWlR,EAAAA,GAAK,CYmkCG,GZnkCH,CAAKJ,MAArB,CAAA,GAA+B,IAAA,CAAKA,MAAzC;IYokCF,AxBrJF92L,KAAA,CwBqJQu0B,CxBnJT,CwBmJW,GAAGi0K,IAAI,CAACH,AxBnJnBnpL,UwBmJ6B,AxBnJlBvZ,CwBmJmB,CAAC,IxBnJd,EAAG;IwBoJjB,ExBlJF,OAAO,IAAI,CAACmW,SAAS,CAAC,CAAC,CAACwB,cAAc,CAAE3X,MAAO,CAAC,qFYh7BxBuxL,EAAtB,CAAA;IYmkCA,AxBjJH;EAAC,EwBkJE;IxBlJFp3L,GAAA;IwBoJE,AxBpJFE,KAAA,EwBoJS0oM,AxBlJV,EwBkJY,CAAC7wL,CAAC,IAAI8wL,CxBlJlBvwL,CwBkJoB,CAACP,CAAC,CZ5jCjBs/K,CZ06BCt6K,CAAC,CwBkJmBuX,CxBlJjBjV,CwBkJmB,CAACtH,CAAC,CZ5jCzBs/K,CZ06BS,CY16BC,CY4jCmB5iK,AxBlJjB,EwBkJmB,CAAC1c,CAAC,IAAI6wL,EAAE,CAACvwL,CAAC,IAAIwwL,EAAE,CAACxwL,CAAC,IAAIic,EAAE,CAACjc,CAAC,IAAIoc,EAAE,CAACpc,CAAC,IAAIuwL,EAAE,CAACp8K,CAAC,IAAIq8K,EAAE,CAACr8K,CAAC,IAAI8H,EAAE,CAAC9H,CAAC,IAAIiI,EAAE,CAACjI,CAAC;EACrG,IxBjJA,IAAI,CAACzU,AY36BE++K,CZ26BD,IAAI,AY36BR,CZ26BU/5K,CAAC,CAAChF,AY36BCs/K,CZ26BA,GAAG,IAAI,AY36BpB,CZ26BqBt/K,CAAC,IAAKsH,KAAK;EwBmJlC8pL,IxBlJA,IAAI,CAAC9wL,CwBkJK8wL,AxBlJJ,CwBkJK5uL,AZ7jCF,CY6jCG,EAAEC,AxBlJJ,CwBkJK,AxBlJHuC,AY36BV,CZ26BW,CwBkJItC,AxBlJHpC,CwBkJI,AxBlJH,EwBkJK2K,CAAC,AxBlJH,EwBkJKpF,CAAC,CxBlJF,CwBkJIqF,AxBlJH5K,CwBkJI,AxBlJH,EwBkJK6K,CAAC,CxBlJD7D,CwBkJG8D,CAAC,EAAE,CxBlJD;IwBmJhC,ExBjJF,IwBiJQ1M,CAAC,ExBjJF,CwBiJK,GxBjJD,CwBiJK,CAAC6xL,UAAU;IACzB,AxBhJH,MwBgJShvK,CAAC,GAAG,IAAI,CAACivK,UAAU;ExBhJ3B,EwBiJEhuL,CAAC,CAACuC,IAAI,CAACrG,CAAC,CAAC;IACT+D,AxBlJFxa,CwBkJG,CAACqb,CxBlJJ,EwBkJO,CAACie,CAAC,CAACvhB,CAAC,EAAEtB,CAAC,CAAC4B,CAAC,EAAE5B,CAAC,CAAC+V,CAAC,CAAC,AZvjClB8qK,QAAAA,EAAU;IYwjCZ78K,AxBnJFva,CwBmJG,CAACmb,GAAG,AxBnJP,CwBmJQie,CAAC,AxBjJV,AYt6BQy9J,CYujCGh/K,CAAC,EAAEuhB,CAAC,AZvjCZ,CYujCajhB,CAAC,CZvjCDi/K,CYujCG7gL,AxBjJnB6I,CwBiJoB,CAACkN,CAAC,CAAC,GZvjCpB,KZs6BUjN,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;IwBkJ1B2D,CAAC,CAAC3H,AxBhJJ,GwBgJO,CAAC5E,AxBhJJ,CwBgJK,AxBhJJsB,CwBgJKA,AxBhJJ,CwBgJK,AZvjCF,EYujCIuhB,AxBhJJ/Z,CwBgJK,CAAClH,AxBhJJ,AYv6BT,CYujCc,AxBhJJN,CAAC,CwBgJKuhB,CAAC,CAAC9M,AxBhJJ,CwBgJK,AxBhJHhN,CwBgJI,CxBhJF,CAACzH,CAAC,GAAGwH,EAAE,CAACxH,CAAC,IAAKsH,KAAK;IwBiJrCzB,CAAC,CAACvC,AxBhJJ,GwBgJO,CAACie,AxBhJJ,CwBgJK,AxBhJJjhB,CwBgJKN,AxBhJJ,CwBgJK,EAAEtB,AxBhJJ8I,CwBgJK,CAAClH,AxBhJJ,CwBgJK,AxBhJJA,CAAC,CwBgJKihB,CAAC,CAAC9M,AxBhJJ,CwBgJK,AxBhJHhN,CwBgJI,CxBhJF,CAACnH,CAAC,GAAGkH,EAAE,CAAClH,CAAC,IAAKgH,KAAK;IwBiJrC4D,CAAC,CAAC5H,AxB/IJ,GwB+IO,CAAC5E,CAAC,CAACsB,CAAC,AxB/IJ,EwB+IMuhB,CAAC,CAACjhB,AxB/IJ,CwB+IK,EAAE5B,CAAC,CAAC+V,CAAC,CAAC;IACpBtJ,AxB9IH,CwB8II,CAAC7H,GAAG,CAAC5E,CAAC,CAACsB,CAAC,EAAEtB,CAAC,CAAC4B,CAAC,EAAEihB,CAAC,CAAC9M,CAAC,CAAC;ExB9ItB,EwB+IErJ,CAAC,CAACrG,IAAI,CAACwc,CAAC,CAAC,YZ9iCNi+J,SAAAA,EAAW;EY+iChB,ExBhJAv3L,GAAA,IY95BOg3L,MAAL,GAAcO,SAAd;EY+iCF,ExBjJAr3L,KAAA,EAED,AY/5BQ+2L,SZ+5BRx3K,IY/5BG,GZ+5BK1C,AY/5BgBw6K,CZ+5Bf,EAAG,MY/5BT;AY+iCJ,MxB9IE,KYh6BOJ,EZg6BIp6K,CAAC,CAAChF,CAAC,KAAK,CYh6BjB,GZg6BqB,AYh6BF4+K,CZg6BG5+K,CAAC,IAAQgF,CAAC,CAAC1E,CAAC,EYh6Bfs+K,CAAYY,EZg6BQ,IAAI,CAACl/K,CAAG,CYh6B5B,CAAnB;AY+iCJ,IxB7IC,SYj6BU,IAAP;AY+iCJ,ExB9IE;IAAArY,GAAA;EwBiJAopM,ExBjJAlpM,KAAA,EAED,GwB+IakpM,CAAC31I,KAAK,AxB/InB/zC,EwB+IqBjX,MAAM,EAAE,AxB/IlB+N,KAAK,EAAEmJ,MAAM,GAAG,CAAC,EAAG;EYj/BD4yK,EYioC3B,ExB9IF,IwB8IQ8W,AxB9IJ,CAACtxL,CAAC,AYn/BuBw6K,CAAAA,EZm/BpB/7K,EwB8IM,GAAG8yL,AxB9IJ,CAAE3pL,MAAM,CAAE,kBwB8IoB;AXrpC9C,IWspCI,ExB9IF,GaxgCO63K,CWspCCj9K,AxB9IJ,CwB8IK,AxB9IJlC,CAAC,EwB8IMgxL,CxB9IH7yL,KAAK,CwB8IK,AxB9IHmJ,CwB8II,CAAC,AXtpCvB,CWspCwB,AXtpCAzf,GbwgCA,EaxgCxB,CbwgC2B,CAAC,AaxgCGu3L,CbwgCD,OaxgC9B,EAAyC;IWupCrC,ExB7IF,AazgCMC,IWspCEl9K,CAAC,AXtpCHk9K,EbygCC,CwB6IK2R,AXtpCExyL,GbygCH,CazgCGA,CAAKmD,EWspCA,CAAC,AXtpCN,CWspCO,AXtpCE,CWspCD,CXtpCR,EAAay9K,QAAb,CAAd;IWupCE,AxB5IH,Ka1gCQ5gL,CWspCC4D,CAAC,EXtpCF5D,CWspCKwyL,AXtpCAptL,KAAL,CAAW/b,CWspCC,CAAC,CAAC,CAAC,CXtpCJA,GAAQw3L,KAAnB,CAAA,GAA4BA,KAAnC;Eb0gCA,EwB6IE,MAAM10K,CAAC,GAAGqmL,OAAO,CAAC,CAAC,CAAC;IACpB,AxB9IFrpM,Aaz/BI23L,Gby/BJ,GwB8IQ/5K,CAAC,GAAGyrL,OAAO,CAAC,CAAC,AXvoCjB1R,CWuoCkB,EXvoClBA,UAAAA,iBAAAA,EAAAA;IWwoCF,AxB/IFz3L,KAAA,CwB+IQ+iB,CAAC,AxB7IV,GwB6IaomL,MxB7IbzpL,CwB6IoB,CAAC,CAAC,CAAC,IxB7IdpJ,KAAK,GAAG,EAAE,EAAEmJ,MAAM,GAAG,CAAC,EAAG;IwB8I/B,ExB5IFnJ,IwB4IQ0M,CAAC,AxB5IJ,CAAEvD,EwB4IK0pL,IxB5IC,CAAE,EwB4II,CAAC,AxB5IF,CwB4IG,CAAC,ExB5IA,CAACtxL,CAAC,Ga5/BZjR,MAAZ,EAAoByiD,QAApB,EAA8BurB,MAA9B,EAAsC;IWyoCpC,ExB5IFt+D,IwB4IQ2M,CAAC,AxB5IJ,CAAExD,EwB4IK0pL,IxB5IC,GwB4IM,AxB5IH,CwB4II,AxB5IH,CwB4II,AxB5IF,CwB4IG,CAAC,CAAC,AxB5IF,IAAI,CAAChxL,CAAC;MAE5B,OAAO7B,KAAK,wHa9/BJ1P,MAD8B,EACtByiD,QADsB,EACZurB,MADY,CAAA,CAAA;IW2oCpC,AxB1IH,IwB0IO,CAACq0H,EXxoCAvR,QWwoCU,CAACr9K,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEuI,CAAC,EAAEpF,AXxoC5B,CWwoC6B,EAAEqF,AXxoCF,CWwoCG,EAAEC,CAAC,CXxoCnC,CWwoCqCC,CAAC,CAAC,CAAC,CAAC;ExB1I3C,Ma5/BQ+jG,KAAAA,GAAAA,MAAN;IWwoCA,AxB5IFlnH,GAAA,Cat/BM63L,CWkoCC,IAAI/xL,AXloCL+xL,CWkoCM,EXloCNA,CWkoCS,CAAC,EAAE/xL,CAAC,AXloCb+xL,CAAJ,IWkoCsB,CAAC,EAAE/xL,CAAC,EAAE,EAAE;IxB5IhC5F,EwB6II,GxB7IJ,EAED,CwB2IWqpM,CXjoCC3T,KWioCK,ExB3IjB/1K,CwB2IoBwpL,AXjoCjB,CAAA,EAAoB,IWioCI,CAACvjM,CAAC,CAAC,SxB3ITga,SAAS,EAAE1J,KAAK,EAAG;MwB4InCq9C,AxB1IJ,IAAI,Aav/BMqkI,CWioCD,AxB1IJ//K,CwB0IKyxL,AxB1IJ,GAAG1pL,Iav/BCg4K,GAAYz9I,EWioCA,AxB1IJ,CwB0IKkvJ,AxB1IJxpL,IAAI,CAAE3J,CwB0II,CXjoCPikC,CWioCSkvJ,AXjoCEriF,Ebu/BF,CAAC,Eav/BCA,CWioCI,AXjoCEsvE,CWioCD,MXjoCL,CAAct2L,KAAzB,CAAlB;IWkoCF,ExB1IF,IAAI,Aav/BI,Cbu/BHmY,Aav/BIi/C,Cbu/BH,GAAGx3C,Eav/BAw3C,CAAO1xD,KAAP,Cbu/BS,Aav/BIkyL,Cbu/BH93K,IAAI,CAAE5J,Gav/BhB,CAAL,Cbu/B2B,CAAC,Aav/BE;IWmoChC,ExB1IF,KwB0IS3N,ExB1IF,Cax/BKgzE,GWkoCG,AxB1IJ,CwB0IKzhD,IXloCV,CAAe89J,QWkoCQ,CAACuR,AXloCxB,CAAA,MWkoC+B,CAAC;EACtC,ExBzID;EwB0IC,AxB1IA;AwB2IF,IxB3IErpM,GAAA,Mat/BW+3L,QAAT,CAAA,EAAoB;AWkoCxB,IxB5IE73L,KAAA,Car/BQgnH,Cbu/BT,Iav/BSA,CAAMyrE,Ibu/Bf1yK,Yav/BK,Cbu/BSC,Cav/BmB,Kbu/Bb,EAAEzB,KAAK,EAAG;AwB2I/B,MxBzIE,IAAMhE,CAAC,GAAG5D,Aax/BE87K,Ibw/BE,CAACh4K,GAAG,CAAE8D,KAAM,CAAC,Cax/BrB,CAAuBzc,IAAvB,CAA4BklH,KAA5B,EAAmCA,KAAAA,CAAM4iD,QAAN,CAAA,CAAnC,CAAA;Qbw/BuBtwJ,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE6D,KAAM,CAAC;EwB4IlDgrL,IxB1IA,IAAM1xL,CAAC,GwB0IK0xL,AxB1IF,CwB0IGh2I,GxB1IC,CAAC17C,CwB0IG,AxB1IF,EwB0IItP,CxB1IDyX,KwB0IO,CxB1ID,CwB0IG,AxB1IFnI,CAAC;IwB2IzB,ExB1IF,IwB0IQsxL,AxB1IFhxL,CAAC,Eav/BIo+K,Cbu/BD,GwB0IK,CxB1ID,CAACp+K,Aav/Bb,CWioCgBixL,AxB1IF,Aav/Bd,EAAkB,Cbu/BDppL,MAAM,CAAC7H,CAAC,ewB0IiB;IAC1C,ExBzIF,IwByIQkC,AxBzIJ,CwByIK,AxBzIJxC,CAAC,EwByIMsxL,CxBzIHtxL,CAAC,GAAG0C,CAAC,CwByIK,CAAC,CAAC,AxBzIJpC,CwByIK,AxBzIJ,GAAGmB,CAAC,GAAG0G,MAAM,CAACnI,CAAC;IwB0I/B,ExBzIF,IwByIQyC,AxBzIJ,CwByIK,AxBzIJnC,CAAC,EwByIMgxL,CxBzIHtxL,CAAC,GAAGyB,CAAC,CwByIK,CAAC,CAAC,AxBzIJnB,CwByIK,AxBzIJ,GAAGoC,CAAC,GAAGyF,MAAM,CAAC7H,CAAC;IwB0I/B,ExBxIF,IwBwIQoC,CAAC,ExBxIF,Aax/BIu9K,CWgoCCqR,GxBxID,IwBwIQ,CAAC,CAAC,CAAC,AXhoCpB,CAAqBzrL,CAArB,EAAwB;IWioCxB,AxBvIH,MwBuISoF,AXhoCE6iH,CWgoCD,GAAGwjE,AXhoCFxjE,GAAOgyD,IWgoCE,CAAC,AXhoCHA,CWgoCI,CAAC,CXhoCGj6K,CAAAA,CAAE+uK,OAAvB;Eby/BJ,EwBwIE,MAAM/uK,CAAC,CXhoCC69D,EWgoCE4tH,MXhoCR,C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,CwBwIG,CAAClL,CxBxIDqM,GAAG,GAAGI,GwBwIK,AxBxIF,GAAGH,EwBwII7d,CxBxID,GAAGme,GAAG,EwBwII,CxBxIDL,CwBwIG,ExBxIA,GAAGQ,GAAG;MwByIvC,AxBxIJ7B,EAAE,CAAE,CwBwII,AxBxIH,CwBwIIlL,AxBxIF,GAAGqM,GAAG,GAAGK,CwBwIG,ExBxIA,CwBwIG,CAAC,CAAC,AxBxIFJ,CehqCf,EfgqCkB,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG;IwByIzC,ExBvIF,IejqCM,GfiqCC,CejqCD,CAAK4vK,EfiqCA,QejqCT,EAAqB;IS0yCrB,AxBvIH,MwBuIS38K,GTzyCC28K,MSyyCQ,GAAG,CTzyChB,CAAgB1wL,ESyyCI,CAAC8T,CTzyCrB,CAAqB,IAArB,CAAA,GSyyC+B;ExBvInC,EwByIE,IAAIC,SAAS,CAAChU,IAAI,CAAC,KAAKwC,SAAS,EAAE;IxBzIrCvE,EwB0II+V,CxB1IJ,IehqCO+zJ,IS0yCM,CAAC/nK,GT1yCZ,CS0yCgB,AT1yChB,CS0yCiB,AT1yCjB,CAAgBC,ES0yCI,EAAE,AT1yCtB,CAAqB,IAAA,CAAK8E,MAA1B,CAAA;IS2yCA,AxB3IF5G,KAAA,Ce/pCM,CfiqCP,GejqCO,CAAKyyL,KfiqCZn1K,WejqCG,EAA2B,EfiqCdhE,CAAC,EAAG;IwB2IjB,ExBzIF,EwByIM,CAACzD,CxBzIDiL,EAAE,CelqCC2xK,EfkqCE,GwByIK,CAAC5wL,AxBzIF,CAAC8b,GwByIK,CAAC,CAACusL,GxBzIC,CelqCpB,CAAsBpoM,GS2yCK,CAAC6T,AT3yC5B,CAA2B,IAA3B,EAAiC,CS2yCG,CAAC,EAAE,AT3yCN,CAAKi0J,QAAL,CAAA,CAAjC,CAAA;MS4yCA/zJ,AxBxIJiL,EAAE,CAAE,CAAC,CAAE,IwBwIM,AxBxIFxH,CwBwIGzX,AxBxIF,IwBwIM,CAAC,CAACuD,IAAI,CAACuQ,QAAQ,CAAC;IAChC,ExBzIYmL,EAAE,CAAE,CAAC,CAAE,IAAIxH,CAAC;IwB2IxB,ExB3I0BwH,EAAE,CAAE,CAAC,CwB2IxB,AxB3I0B,IwB2ItB,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,CQy0CwB8T,CRz0CD,MAAvB,CQy0CgC,CRz0CD4gL,CQy0CG,KRz0ClC,CAAA;IQ00CA,IAAI,AxB1JyB51K,AgB9qCzBijG,GhB8qC4B,CwB0JxB,ARx0CR,CQw0CShuG,ARx0CA,ChB8qC0BkL,EAAE,CAAE,CAAC,CAAE,AgB9qCjC,CAAKg4K,GQw0CK,KAAKz0L,ERx0CxB,EAA0B,KQw0CO,EAAE,IRx0CnC,EAAuC,YAAkB;MQy0CvD,ExB1JHic,EgB7qCM63K,ChB6qCH,EwB0JO,CxB1JJr3K,EAAE,CwB0JM,AxB1JJ,CAAC,AgB9qCR,ChB8qCU,AgB7qCE,IADZ,EACkB,MADlB,CAAA,CAEG8iG,IAFH,CAEQm6C,MAFR,EAEgB,SAFhB,EAE2B,YAAkB;IQu0C/C,IxB3Jct9I,GAAG,CgB3qCP44K,EhB2qCUv4K,EAAE,CAAE,CAAC,CAAE,IgB3qCrB,CAAgBkmG,KAAAA,CAAM8xE,UAAtB,EAAkC,MAAlC,CAAA;IQw0CN,GR30CE,ChB8qC2Bl4K,AgB9qC3B,EQ20CI/K,CxB7J0B,GAAGiL,EAAE,CAAE,CAAC,CwB6JzB,AxB7J2B,GwB6JxB,IAAI,CAAClL,UAAU;IAEjC,CR90CA,CAAA,EQ80CIC,AxB7JLsN,GAAG,GAAGvC,GwB6JQ,AxB7JL,CwB6JM/e,ExB7JH2e,EwB6JO,CAAC,AxB7JL,GAAGG,EwB6JOtc,CxB7JJ,GAAGoc,GAAG,EwB6JO,EAAE;MACjC,ExB7JH2C,AgB1qCKwgG,GhB0qCF,CgB1qCF,CQu0CS,ARv0CA,ChB0qCJjjG,GwB6JQ,AxB7JL,EgB1qCC,ChB0qCEL,AgB1qCGw4K,GhB0qCA,GAAGl4K,GAAG,CgB1qCpB,EhB0qCuBP,AgB1qCG,GhB0qCA,SgB1qC1B,EAAwC,YAAkB;IQw0C1D,IxB7JDgD,EgBzqCM80K,ChByqCH,GAAG13K,GAAG,CgB1qCN,CACY,ChByqCHJ,GAAG,AgB1qCZ,EACkB,ChByqCHG,GAAG,EgB1qClB,ChB0qCqBF,AgB1qCrB,CAEGsjG,EhBwqCqB,EgB1qCxB,CAEQm6C,MAFR,EAEgB,UAFhB,EAE4B,YAAkB;IQu0ChD,IxB7JDz6I,EwB6JOpN,CxB7JJ,CgBzqCQmjL,EhByqCLj5K,CwB6JM,ExB7JH,CwB6JMvK,ExB7JHsN,GAAG,AgBzqCR,CAAgB6jG,EhByqCLzmG,CwB6JM,CAAC1e,CxB7JJ,AgBzqCEmlH,CAAM8xE,EQs0CA,AxB7JL11K,CwB6JM,CAACtN,CxB7JJ,GAAG4K,EgBzqCvB,CQs0C+B,AxB7JL,CwB6JM/K,ARt0CE,EhByqCL0N,GAAG,CgBzqChC,CAAA,CQs0CwC,CAAC;IAE/C,ExB7JF,CgB9qCI,CQ20CEnN,AR30CF,EhB8qCCoN,GwB6JM,AxB7JH,KwB6JQ,AxB7JH,CwB6JI,AxB7JH,CwB6JI,CxB7JD,CwB6JG,MxB7JI,IAAI,CAACnI,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;KgB/qC3D,CQ60CEtF,AxB5JJ,AgBjrCE,IhBirCI0N,KwB4JO,CAAC1hB,AxB5JF,GAAG,CwB4JG,AxB5JF,CwB4JG,CAACsU,CxB5JDmN,GAAG,EwB4JI,CAACpN,KAAK,EAAE,CAAC,CAAC;IAClC,ExB3JF4K,EAAE,AgB3qCMw4K,ChB2qCJ,CAAC,CAAE,GAAGn2K,GAAG,CgB3qCLm2K,EhB2qCQ/1K,CgB3qCK8B,KhB2qCC,GgB3qCDA,CAASktK,aAAT,CAAuB,KAAvB,CAAnB;IQw0CA,ExB5JFzxK,EAAE,CAAE,CAAC,CwB4JI,AxB5JF,AgB1qCEkxK,GhB0qCC,CwB4JG,AxB5JDtxK,EgB1qCV,ChB0qCa,AgB1qCC,GhB0qCED,GAAG,AgB1qCL,CAAKq4K,EhB0qCGl4K,GAAG,GAAGL,EgB1qCd,ChB0qCiB,AgB1qCDy5B,IhB0qCMz2B,CgB1qCpC,EAAqC,GhB0qCK;EwB6J5C,IxB5JAzC,EAAE,CAAE,CAAC,CAAE,EgB1qCI,ChB0qCD,CAAEH,GAAG,EgB3qCwB,ChB2qCrBJ,GAAG,GAAGG,GAAG,GAAGF,GAAG,IAAK+C,MAAM;EwB6J5C,IxB3JAzC,EAAE,CAAE,CAAC,CAAE,GAAGsC,AgB3qCE,GhB2qCC,GAAGG,CgB7qCu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gBtqCiB,KAJ8B;AQ80CjD,IxBpKEE,KAAA,EAED,IgBvqCc,KhBuqCd0jB,SgB5qCgD,OhB4qC/BC,OAAO,EAAG;AwBmK5B,MxBjKE,OAAO,CgBxqCK,GhBwqCD,CAACrC,cAAc,CAAEqC,OAAQ,CAAC,CAACT,MAAM,CAAC,CAAC,CAACM,SAAS,CAAC,CAAC;AwBkK5D,IxBhKC,CgBhrCG,CAAA;AQy0CJlkB,ExBzJE,KwByJF,CAAA2qM,GRh0CWjY,MAAP,CAAcsH,CQg0ClB,GAAA2Q,MRh0CkB3Q,CAAWt/I,IQg0C7B,CRh0CI,EAAgC;AQy0CpC,IxBlKEl6C,EwBkKIsxB,CxBlKJ,MgBtqCW,GQw0CG,CAAC,ERz0CmB;EQ00ClCnrB,ExBnKAjG,KAAA,EAED,EwBiKYiG,CAAC4R,ARx0CA,CQw0CC,EAAEM,CAAC,EAAEmU,AxBjKnB1I,AgBzqCmC,CQ00Cf,EAAE2I,CAAC,EAAE,axBjKL1I,CAAC,EAAG;IwBkKrB,ExBhKF,EwBgKMhM,CAAC,CxBhKDF,CAAC,GwBgKK,AxBhKF,IAAI,AgBxqCE,CQw0CC,AxBhKFgG,CwBgKG,EAAE,KxBhKG;KgB3qCrB,CQ40CE9F,AxB/JJgM,AgB7qCE,CQ40CG,AxB/JJ,CAAE,CAAC,CwB+JI,AxB/JF,CwB+JG,ExB/JAlM,CAAC,CAAE,CAAC,CAAE;IwBgKb,ExB/JFkM,CAAC,CAAE,CAAC,CAAE,GAAGlM,CAAC,CAAE,CAAC,CAAE,EgBxqCE2hL,UAAf,EAA2B,KAA3B,EAAkC,eAAlC,EAAmD,MAAnD,CAAA;IQy0CA,ExBhKFz1K,CAAC,CwBgKK1L,AxBhKH,CwBgKI,AxBhKH,CAAE,CgBvqCG65K,EhBuqCAr6K,CwBgKG,AxBhKF,CAAE,CAAC,CAAE,AgBvqCb,CAAc,CQu0CC,CAAC,EAAE,ERv0CJ,CAAKwhL,WAAL,CAAiBn/I,KAA/B,EAAsC;MQw0CpC7hC,AxBhKJ0L,CwBgKK,AxBhKJ,CAAE,CAAC,CwBgKI,AxBhKF,CwBgKG,ExBhKAlM,AgBvqCE,ChBuqCD,CAAE,CAAC,CAAE,EgBxqCyB;IQy0CtC,ExBhKFkM,CAAC,CAAE,CAAC,CAAE,GAAGlM,CAAC,AgBvqCE,ChBuqCA,CAAC,CAAE,IgBzqCyB;IQ20CtC,ExBjKFkM,CAAC,CwBiKKyI,AxBjKH,CwBiKI,AxBjKH,CAAE,GAAG3U,CwBiKG,AxBjKF,AgBvqCE,ChBuqCA,CAAC,CAAE,EwBiKE,CAAC,EAAE,QR30CoB;MQ40CpC2U,AxBjKJzI,CwBiKK,AxBjKJ,CAAE,CAAC,CwBiKI,AxBjKF,CwBiKG,ExBjKAlM,CAAC,AgBvqCE,ChBuqCA,CAAC,CAAE,QgB3qCyB;IQ60CtC,ExBjKFkM,CAAC,CAAE,CAAC,CAAE,GAAGlM,CAAC,CAAE,CAAC,AgBvqCC,ChBuqCC,SgB5qCyB;IQ+0CtC,ExBlKFkM,CAAC,CwBkKK0I,AxBlKH,CwBkKI,AxBlKH,CAAE,CgBvqCG,EhBuqCA5U,CwBkKG,AxBlKF,CAAE,CAAC,AgB7qC2B,ChB6qCzB,EwBkKE,CAAC,EAAE;MAChB4U,AxBjKJ,CwBiKK,GAAG,CAAC,ExBjKF,AgBxqCI,IhBwqCA;IwBkKT,AxBhKH,CgBjrCG,CAAA;EhBirCF,EwBkKE,IAAI,CAAC1U,CAAC,GAAGA,CAAC,ERz0CE,MAAA,CAAKshL,WAAjB,CAAA;IQ00CA,AxBnKFr5L,GAAA,CwBmKM,CAACqY,CAAC,CRx0CC65K,EQw0CE75K,CAAC,GRx0CV,CAAc,MAAA,CAAKm+K,OAAL,CAAat8I,KAA3B,EAAkC;IQy0ClC,AxBpKFh6C,IwBoKM,CAACssB,AxBpKP,CwBoKQ,CxBlKT,EwBkKYA,CAAC,CRx0CC,KhBsqCdxI,CgBvqCqC,chBuqCrBC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,EAAEC,EAAE,EAAEC,EAAE,EAAG;IwBmKhD,ExBjKF,EwBiKM,CAACkI,CAAC,AxBjKFhS,CAAC,EwBiKIgS,CAAC,AxBjKF5V,GgBtqCK,ChBsqCD,CAAC8D,GAAG,CAAE0J,EgBzqCgB,MhByqCP,CAAC;EwBkK9B,IxBjKA,IAAM7K,CAAC,EgBpqCI,ChBoqCD3C,IAAI,CAAC+D,AgB1qCqB,GhB0qClB,CAAEyJ,QAAS,CAAC;EwBkK9B,IxBhKA,IAAI,CAAChJ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AAC;IACvB,CAAC,CxBnHH,IgB3sCQ5O,CQ8zCC,AR9zCDA,CAAE7b,ChB2sCH,GgB3sCC,ChB2sCG,AgB3sCIiU,OAAP,CAAe,OAAf,CAAA,KAA4B,CAAC,CAAjC,EAAoC;IhB6sCzC,EwBkHKu0L,IR/zCwCh/E,MQ+zC9B,CAACxzG,CAAC,GAAG,GR/zCuB,CQ+zCnB,AR/zCmB,CQ+zClBA,AR/zCkB,CQ+zCjB,GAAGyB,CAAC,CAAC,CAAC;ExBlH/B;IAAAxZ,EwBoHIuqM,CxBpHJ,GgB3sCUvQ,MQ+zCI,CAAC3hL,CAAC,CR/zCN2hL,EQ+zCS,CR/zCG9yE,GQ+zCC,CAAC7uG,CAAC,AR/zCH6uG,CAAM+xE,EQ+zCAz/K,CAAC,eR/zCP,CAAyBizK,qBAAzB,CAAA,CAAlB;IhB2sCJvsL,EwBqHIqqM,GxBrHJ,EAED,KwBmHe,CAAC/9K,AR/zCmB5O,CQ+zClB,AR/zCkBA,CAAEsqK,ChB4sCrCxoK,CwBmHoB,IAAI,CAAC8M,AR/zCU,CQ+zCT,GAAGhT,AxBnHlBhD,AgB5sCqCoH,CQ+zClB,AR/zCkBA,CAAEsqK,GhB4sClC,EAAEvoK,EgB5sC8B,CAAU,CAAV,CAAd,ChB4sCV,GAAG,AgB5sCsC/B,ChB4sCrC,AgBhtCP,EhBgtCU;IwBoH5B,ExBlHF,EgB9sCY8uK,GhB8sCN,IAAI5mL,AgBltCU,ChBktCT,EgBltCS,ChBktCN,CAAC,EAAEA,AgBltCG,ChBktCF,AgB9sCN4mL,GhB8sCS,CAAC,EAAE5mL,CAAC,AgBltCL,EhBktCQ,EAAG;IwBoH7B,IxBlHD,AgBhtCoB6mL,GQk0CZ,CAAC4d,AxBlHL,CAAC1sL,EgBptCc,GAAA,GhBotCN,CwBkHM,AxBlHJ/X,AgBptCI,ChBotCH,AgBhtCI6mL,CQk0CCluK,AxBlHH,GAAGjI,EwBkHK,CAAC,ARt0CR,EhBotCO,CAAE1Q,CAAC,GAAG6Z,MAAM,CAAE;EwBmHzC,IxBjHA,IgBjtCQnG,CAAAA,GAAI,CAACkzK,OAAAA,GAAUsN,SAAAA,CAAU5zJ,IAArB,KAA8B4zJ,SAAAA,CAAU3zJ,KAAV,GAAkB2zJ,SAAAA,CAAU5zJ,IAA1D,CAAR;EQm0CJ,IxBhHA,IgBltCQrpB,CAAAA,EhBktCD,CgBltCK,CAAA,EhBktCD,CgBltCK,CAAC4vK,OAAAA,GAAUqN,SAAAA,CAAU1zJ,GAArB,KAA6B0zJ,SAAAA,CAAUzzJ,MAAV,GAAmByzJ,SAAAA,CAAU1zJ,GAA1D,CAAZ;AQm0CN,IxB/GC,MgBltCSvpB,CAAAA,GAAI,CAAR,EAAW;AQk0CjB,ExBhHE,UgBjtCU,CAAJ;IhBitCN/c,GAAA,AgBltCI,MAEO,IAAI+c,CAAAA,GAAI,CAAR,EAAW;EQm0CtBytL,ExBnHAtqM,KAAA,EAED,CgBjtCW,CAAJ,GQk0CQsqM,CAAClxK,CAAC,EAAEvc,AxBjHnB6C,CwBiHoB,EAAE,KxBjHbpJ,KAAK,GAAG,EAAE,EAAEmJ,MAAM,GAAG,CAAC,EAAG;IwBkH/B,ExBhHF,EwBgHM2Z,CAAC,CAAC0uK,AxBhHFhnL,EAAE,GAAG,IAAI,CAACnD,MwBgHQ,CAACd,CAAC,AxBhHF,CwBgHG,EAAE;MACzB,AxB/GJvG,IgBltCQgD,ChBktCH,AgBltCGA,CQi0CE8mB,AxB/GH3gB,EwB+GK,ARj0CA,CAAR,EQi0CW8qL,ARj0CA,ChBktCF,CAAE,GAAGzpL,CwB+GG,CxB/GD,CAAE,CAAC,CAAE;MwBgHrB,AxB/GJxK,KAAK,CwB+GKmoH,AxB/GHh/G,AgBltCG,CAAJ,CQi0CM,GAAG+qL,CxB/GF,GAAG,CAAC,CwB+GI,AxB/GF,GAAG1pL,EAAE,CAAE,CAAC,CAAE;MwBgHzBsY,AxB/GJ9iB,CwB+GK,ARn0CD,CQm0CEqsC,GxB/GD,CAAEljC,CgBltCI,GQi0CG,CAAC2gB,ARj0CA9mB,ChBktCF,AgBltCEA,CQi0CE,EAAEmlH,AxB/GH,AgBltCG,ChBktCF,AgBltCN,CQi0CU,AxB/GF,CwB+GG,ARj0CA,EhBktCA39G,EAAE,CAAE,CAAC,CAAE;MwBgHzB,AxB9GJxK,IwB8GQ,CAAC+b,AxB9GJ,CAAE5S,AgBntCG,CAAJ,KhBmtCO,GAAG,CAAC,CAAE,GAAGqB,CwB8GG,CAACsf,AxB9GF,CAAE,CwB8GE,AxB9GD,CAAE,CwB8GCzpB,IAAI,CAACC,EAAE,CAAC;IACpC,CAAC,CxB9GHN,KwB8GS,AxB9GJ,CAAEmJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MwB+GzB,AxB9GJxK,KAAK,CwB8GK+D,AxB9GHoF,AgBltCGk5K,CQg0CC,GAAGv/J,CAAC,CAACjb,AxB9GH,CgBltCT,CAActB,ChBktCF,AgBltCZ,ChBktCa,CwB8GI,AxB9GF,CwB8GGA,ARh0CAA,CQg0CC,ARh0CnB,CQg0CoB,AxB9GFiE,EAAE,CAAE,CAAC,CAAE;MwB+GzB,AxB7GJxK,IwB6GQ,CAACuB,AxB7GJ,CwB6GK,AxB7GH4H,AgBntCGk5K,GQg0CGt+K,CAAC,CAACxC,CAAC,AxB7GH,CgBntCT,CAAcyB,ChBmtCF,AgBntCZ,ChBmtCa,CAAE,CgBntCGA,CAAlB,ChBmtCkBwH,EAAE,CAAE,CAAC,CAAE;MwB8GzB,AxB7GJxK,IwB6GQ,CAAC6B,AxB7GJ,CwB6GK,AxB7GHsH,AgBltCG87D,GQ+zCGlhE,CAAC,CAAClC,CAAC,AxB7GH,EgBltCT,ChBktCY,AgBltCG6uG,ChBktCF,CAAE,GAAGlmG,AgBltCHkmG,CAAM2xE,ChBktCD,CAAE,CAAC,CAAE,GgBltCV,CAAckB,UAAd,CAAA,CAAf,CAAA;MQg0CA,AxB7GJvjL,IwB6GQ,CAACgW,AxB7GJ,CwB6GK,AxB7GH7M,CgBhtCI,EQ6zCEpF,CAAC,CAACiS,CAAC,AxB7GH,AgBhtCT,GhBgtCY,CAAC,CAAE,GAAGxL,EAAE,CAAE,CAAC,CAAE;MwB8GzB,AxB5GJ,IwB4GQ,CAACyL,CAAC,CxB5GHjW,EwB4GMK,GxB5GD,CwB4GK,CAAC0H,IAAI,CAAC+a,CAAC,CAACzzB,MAAM,CAAC,CAAC,IAAI,CAAC,GAAGkX,CAAC,CAAClX,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAGyzB,CAAC,CAAClb,GAAG,CAACrB,CAAC,CAAC;IxB1GrE,EwB2GK,IAAI,CAACf,ER5zCE69K,IAAT,CAAcj8K,CAAd,CQ4zCgB,CAAC,AR5zCA,CQ4zCC;ExB3GpB,EwB4GE,MR5zCMA,CAAAA,CAAE7b,IAAF,CAAOiU,OAAP,CAAe,OAAf,CAAA,KAA4B,CAAC,CAAjC,EAAoC;IQ8zCtC,AxB9GFhW,GAAA,GgBhtC4CurH,CQ8zCnC,IAAI,SR9zC6B,CAAA,CAAA;EQ+zC1C,ExB/GArrH,KAAA,EAED,SAAA2c,MAAA,EAAQ;EwB8GP,IxB5GA,IgBltCUm9K,GhBktCH,IAAI,EgBltCDA,EhBktCK,CAAC7zL,AgBltCM+gH,KAAAA,CAAMmyE,KhBktCD,CAAC,CAAC,CAAC35K,GgBltCR,CAAkB+sK,KhBktCD,CAAE,IAAI,CAAC5uK,QAAS,CAAC,CgBltClC,CAAA,CAAlB;AQ+zCN,IxB3GC,cgBntC0BD,CAAAA,CAAEsqK,OAAF,IAAatqK,CAAAA,CAAEsqK,OAAF,CAAU,CAAV,CAAd,IAA+BtqK,CAJpC;AQm0CrB,ExB5GE,MgBntCY+uK,OAJO,GAAA,KAAA,CAIPA,OAJO;EhButCnB,OAAAtsK,CgBltCQ8C,CAAAA,GAAI,CAAA,ChBktCZ,EgBltCgB,CAACwpK,OAAAA,GAAUqN,SAAAA,CAAU1zJ,GAArB,KAA6B0zJ,SAAAA,CAAUzzJ,MAAV,GAAmByzJ,SAAAA,CAAU1zJ,GAA1D,CAAZ;AhBktCJ,EwB+GAqkK,IAAIA,CAAC1hB,GR/zCG9lK,CQ+zCC,AR/zCDA,EQ+zCG1a,CR/zCC,CAAR,EAAW,EQ+zCE,EAAE;AxB/GnBjJ,IwBgHE,GxBhHF,CwBgHMiJ,AxBhHN4X,IgB/sCU,CAAJ,CQ+zCM,CxBhHZ,GAAAA,CwBgHiB,KAAK,CAAC,AxBhHvB,EwBgHyB;AxB5G3B,IAAMoE,EwB6GAhc,CxB7GG,AgBptCH,GhBotCM,EwB6GA,CR/zCC,EQ+zCE,ER/zCE0a,CAAAA,CQ+zCEmO,ER/zCE,CAAR,ChBktCa,CgBltCF,GhBktCMjR,EwB6GD,CAAC,CAAC,GxB7GM,CAAC,CAAC;AAEvC,IwB4GI,KxB5GK2E,GgBntCG,CAAJ,YhBmtCiBA,CAAExO,KAAK,EAAG;EAElC,EwB4GG,MAAMohB,EAAE,GAAG,IAAI,CAAC7f,CAAC;IACjB,MAAM8f,EAAE,AR/zCAghK,GQ+zCG,IAAI,AR/zCb,CQ+zCcxgL,AR/zCA8K,CQ+zCC,AR/zCf,GAAkBA,CAAAA,GAAI,GAAtB;EhBotCL,EwB4GG,GxB5GG,GwB4GG2U,CxB5GChyB,CwB4GC,AxB5GA,AgBltCA21E,GQ8zCG,AxB5GAjlE,IwB4GI,CAACgW,AxB5GA,AgBltCd,CQ8zCe,AxB5GA3mB,AgBltCAqhH,KAAAA,ChBktCM,AgBltCA2xE,GhBktCG,CAAC,EAAE/yL,CAAC,AgBltCb,CAAci0L,GhBktCG,CAAC,EAAE,EAAGj0L,CAAC,CgBltCxB,ChBktC2B,AgBltC3B,CAAf,CAAA;IQ+zCF,AxB3GF,IAAK0Q,EwB2GGo0L,EAAE,CxB3GA,AgBltCC,ChBktCC9kM,CwB2GC,AxB3GA,CAAE,EgBltCX,CQ6zCa,CAAC2mB,AxB3GC,CwB2GA,IxB3GK,EAAG,OAAO,IAAI,CAAC,CAAC;EAEzC,EwB0GG,MAAMsL,EAAE,GAAGkxJ,IAAI,CAAClxK,CAAC;IACjB,MAAMigB,EAAE,GAAGixJ,IAAI,CAAC5wK,CAAC;ExBzGpB,EwB0GG,KxB1GI,CwB0GE4f,EAAE,ExB1GC,CwB0GEgxJ,IAAI,CAACz8J,CAAC;AxBxGrB,IwByGI,MAAMq+K,EAAE,GAAG5hB,IAAI,CAACx8J,CAAC;AxBvGrB,IwBwGIhkB,AxBxGEwc,MwBwGI,CAAClN,CAAC,GAAG6f,CxBxGG,CwBwGD,ExBxGI,CwBwGDizK,EAAE,GAAGD,EAAE,GAAG7yK,EAAE,GAAGF,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE;ExBvGnDjc,EwBwGGtT,MAAM,CAAC4P,AxBxGD,CwBwGE,CxBxGA0D,EwBwGG8b,EAAE,GAAGgzK,EAAE,AxBxGD,GwBwGID,EAAE,GAAG5yK,EAAE,GAAGF,CR/zCjB,CQ+zCmB,GAAGC,EAAE,GAAGH,EAAE,GAAGK,EAAE;ExBvGnDrc,EwBwGGnT,MAAM,AR/zCA3C,CQ+zCC0mB,AR/zCD1mB,CQ+zCE,AxBxGD,EAAE8V,AgBvtCCk1K,CQ+zCCh5J,EAAE,GAAG+yK,EAAE,CR/zCR/Z,ChButCS,AgBvtCC,CQ+zCC8Z,EAAE,CR/zCH,CAAK9gC,CQ+zCC7xI,EAAE,GAAGL,EAAE,AR/zCb,CAAA,CAAV,CQ+zC0BI,AR/zCpC,EQ+zCsC,GAAGH,EAAE,GAAGE,EAAE;ExBvGnD7S,EwBwGGzc,MAAM,AR9zCF3C,CQ8zCG2mB,AR9zCH3mB,CQ8zCI,GAAG8kM,CR9zCD,CQ8zCG,ExBxGC,CwBwGEC,CxBxGA3lL,AgBttChB,CQ8zCkB,CR9zCD,EQ8zCI0S,EAAE,GAAGG,EAAE,GAAGF,EAAE,CxBxGA,EwBwGGG,EAAE,GAAGF,EAAE,GAAGG,EAAE;ExBvGnDnc,EwBwGG,OAAOrT,CxBxGA,AgBttCDwxL,EhBstCGn+K,GwBwGI,GR9zCPm+K,GAAW,ChBstCE,IgBttCjB;EQ+zCJ,AxBxGDt+K,WAAW,EAAEA,AgBntCDg0K,IAAP,CAAYh2I,KAAAA,ChBmtCO,AgBntCD04I,UAAlB,EAA8B,UAASn0I,SAAT,EAAoB;EQ4zCtD,AxBxGDriC,UAAU,EAAEA,AgBntCD,CAACy7C,MAAAA,CAAOu4H,EhBmtCG,SgBntCV,CAAmB/pL,CAAAA,CAAEo4C,SAAF,CAAnB,CAAD,IAAqC,CAACoZ,MAAAA,CAAOu4H,WAAP,CAAmB,IAAA,CAAKgJ,OAAL,CAAaxJ,OAAb,CAAqBnxI,SAArB,CAAnB,CAAtC,IACFp4C,CAAAA,CAAEo4C,SAAF,CAAA,KAAiB,IAAA,CAAK26I,OAAL,CAAaxJ,OAAb,CAAqBnxI,SAArB,CADnB,EACoD;AQ2zC5D,ExBxGCxiC,WAAW,EAAEA,QgBltCO,GhBktCI,CgBltCf;AQ2zCV,ExBxGCD,YAAY,EAAEA,GgBltCE,CAAA,CAAP,OhBktCiB;EAC1B0J,YAAY,EAAEA;AACf,CAAC,CwByGCsxG,OAAOA,ARj0CH,CQi0CIhuH,CR3zCD,IANH,CQi0CU,ARj0CV,EQi0CY;AxBvGlB,IwBwGI,IAAIA,CxBxGC2c,GgBhtCC60K,EQwzCI,KAAK,CRxzCb,EhBgtCgB70K,AgBhtCF,ChBgtCIrjB,CwBwGA,CAAC,EAAE,AxBxGC,EAAEsjB,MAAM,EAAG;EAEtC,IwBuGK5c,GxBvGE,GwBuGI,CxBvGAwc,EwBuGG,ERxzCAitK,EQwzCI5gK,IRxzCX,CAAc,ChBitCE,CAAEvvB,EgBjtCJ,CQwzCO,ARxzCF82L,CQwzCG,AxBvGA,CwBuGC,AxBvGC,CAAExzK,IgBjtCZ,CAAagqK,ChBitCM,CAAC,KgBjtClC,EAAoCvpL,CAApC,CAAA;AhBmtCR,IwBsGI;AxBpGJ,IwBsGI,KxBtGKwf,CwBsGCvN,CAAC,GAAG,IAAI,CAACA,CAAC,IxBtGIuN,CAAElf,IAAI,EAAG;EAEhC,EwBqGG,KxBrGImf,CwBqGElN,CAAC,ERxzCA65K,CQwzCG,GxBrGE,CwBqGE,AxBrGD5sK,CwBqGEjN,ARxzCf,CQwzCgB,ARxzCF,IAAA,CAAKygL,MAAL,CAAYzJ,ChBmtCE,CAAE,KgBntC9B,EAAmC,IAAA,CAAKwJ,OAAL,CAAaxJ,OAAhD,CAAA,EhBmtC4D,EAAEjpL,IAAK,CAAC;AAExE,IwBoGI,MAAMomB,CAAC,ARvzCFssK,GQuzCK,GRvzCV,CQuzCc,ARvzCFv+K,CQuzCGiS,ARvzCf,CQuzCgB,ERvzCA,CAAhB;AhBqtCJ,IwBmGI,AxBnGEhH,MwBmGIiH,AxBnGE,AgBntCFytK,CQszCC,ExBnGI,CwBmGD,AxBnGE,AgBntCNA,ChBmtCO,EgBntCC,CQszCA,CAACztK,CAAC,CRtzCF,CAAKosK,OAAL,CAAa97K,CAAb,GAAiB,GAAjB,IAAwB,IAAA,CAAK87K,OAAL,CAAar/K,CAAb,GAAiB,GAA1C,GAAiD,GAAjD,GAAuD,CAApE;AhBqtCJ,IwBkGI,IAAI,CAAC2Z,AxBlGA1N,CgBptCC00K,KAAAA,EhBotCO10K,CwBkGC,AxBlGCC,AgBptCD,CQszCCjd,ERtzCD,GAAMyxL,CQszCC,AxBlGC,CwBkGA,CxBlGG,CgBptCzB;EhBstCH,EwBiGG,ExBjGEx0K,IwBiGIolL,GxBjGG,AgBptCF5Y,GQqzCK,CxBjGC1sK,EwBiGE,ARrzCf,CQqzCgB,ARrzCF,GhBotCK,CwBiGCzN,ARrzCN,CQqzCO,AxBjGC,AgBptCHmhL,GQqzCKnhL,CAAC,GAAGM,CAAC,GAAGA,CAAC,ARrzCnB,CAAkB6hC,EQqzCI1tB,CAAC,ERrzCrC,CQqzCwCA,CAAC,ARrzCF,GQqzC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C,CAAC,CAACx1K,YAAY,CAAEmI,gCAAiC,CAAC;AAEpF,MwBgFM,CRnzCCo0B,GQmzCG,CAACniC,CAAC,ARnzCV,CAAW+1B,EQmzCE,CAAC,ORnzCd,GAAwB,EAAxB;AhBquCF,MwB+EM,CRnzCCoM,EhBouCEh0B,CwB+EC,CAAC7N,CAAC,ARnzCV,CAAWoiL,EQmzCE,CAAC,IRnzCd,IAAsB,MhBouCMv0K,CAAEF,KAAK,EAAG,sHgBpuCtC;EhBsuCD,IwB8EK,CRnzCCk0B,GQmzCG,CAAC1tB,CAAC,ARnzCV,CAAWiuK,EQmzCE,CAAC,IRnzCd,IAAsB,iIAAtB;EhBsuCD,IwB8EK,CRnzCCvgJ,EhBquCCl0B,CwB8EE,CAACyG,CAAC,ARnzCV,CAAWguK,ChBquCA,CwB8EE,AxB9ED98K,CwB8EE,IRnzCd,IAAsB,GhBquCE,CAAEkI,gCAAiC,CAAC,CAACM,mBAAmB,CAAC,CAAC,iEgBruClF;AhBuuCF,IwB6EI,CAAC,ERnzCE+zB,IQmzCI,CRnzCT,CAAWugJ,OAAX,IAAsB,6HAAtB;MQozCIhkL,CAAC,ARnzCAyjC,GQmzCG,CAAC,CRnzCT,CAAWugJ,CQmzCChkL,CAAC,KRnzCb,IAAsB,yHAAtB;AhBuuCF,MwB6EM,IAAI,CAACsB,CAAC,IAAItB,CAAC;AxB5EjB,AiB5iDA,IjB4iDM2P,AiB5iDAu0K,EOynDA,CPznDAA,GOynDI,APznDE,COynDDtiL,CAAC,CxB7EG,GwB6EC5B,CAAC,AxB7EF4P,UAAA,OAAAC,eAAA,CAAAD,UAAA,EACZlT,oBAAoB,EAAI,UAAE6S,KAAK;EAAA,IwB6E5B,EPznDE,CjB4iDgCA,CwB6E9B,CAACwG,CAAC,ExB7EiC,EwB6E7B/V,CAAC,APznDT,IAAA,CAAS2S,GAAT,EAAcwxK,KAAd,EAAqB;AjB4iDgB,IAAAt0K,EwB8EvC,EPznDIu0K,EOynDA,CAACpuK,APznDDouK,COynDE,EPznDID,EOynDAnkL,CAAC,ExB9E4B,AiB3iD7BmkL,CjB2iD6Bv0K,GiB3iDpBd,OjB2iDoB,CiB3iDzC,CjB4iDDrS,cAAc,EAAI,UAAE8S,KAAK;EAAA,EwB8ExB,IPznDM80K,CjB2iDwB90K,GiB3iDxB80K,EjB2iD6B,CAAC70K,AiB3iDvB40K,GAAAA,CAAIpI,aAAJ,CAAkB,CjB2iDwB,CAAC,CAAC,GiB3iD5C,CAAb;AjB2iDyD,IwBgFzD,AxBhFyDnsK,KiB1iDpDvkB,EO0nDE,EP1nDP,EO0nDW,CP1nDC,GjB0iD6C,CAAAskB,MiB1iDzD,IjB0iDyD,EAC1DjT,mBAAmB,EAAI2S,qBAAqB,GAAAM,UAAA,CAC9C;EwB+EC,OP1nDO00K,GAAL,GAAW,YAAX;AjB6iDJ,EwB8EE,OP1nDOvF,IAAL,GAAYpsK,GAAZ;AO2nDJ,AxB9EA,IAAM7C,IiB5iDEy0K,OjB4iDS,IAAAx0K,SiB5iDb,CAAyB,EjB4iDZ,IiB5iDb,CAAA,CAAiC,CjB4iDpBF,AiB5iDb,CAAA,CAAoCuvK,WAApC,CAAgDiF,CjB4iDnC,CAAAt0K,EiB5iDb,CAAA,SjB4iDa,EACdrT,oBAAoB,EAAI,UAAE6S,KAAK;AwB8ElC,ExB9EkC,CiBpjDtB,MjBojD4BA,KAAK;AwB+E7C,AxB/E6C,IAAAM,MiB1iDnC,SjB0iDmC,AiB1iDnC,CjB0iDmCE,KiB1iDnC,CAASy0K,MjB0iD0B,EAC1C/nL,EiB3iDO,EAAqB0nL,KAArB,EAA4B,GjB2iDrB,EAAI,UAAE50K,KAAK;EAAA,MiB1iDlB60K,CjB0iDwB70K,EiB1iDxB60K,GjB0iD6B,AiB1iDvBD,CjB0iDwBz0K,IiB1iDxBy0K,IAASr1K,QAArB,GjB0iDuD,CAAC,CAAC;AAAA,EwBiF3DwlL,ExBjF2DzkL,IiBziDnD40K,OO0nDK6P,CAAA,AP1nDL7P,EO0nDQ,CxBjF2C,AiBziDxC31K,CjByiDwCiB,OiBziDxCjB,CAASktK,IjByiD+B,EAC1Dr/K,OiB1iDkB,CAAuB,OAAvB,CAAjB,GjB0iDkB,EAAI8S,qBAAqB,GAAAM,YAAA,CAC9C;AAED,IwB8EI,AxB9EEC,MwB8EIxD,CAAC,EP1nDElhB,CO0nDC,CAAC,EP1nDX,CO0nDc,CxB9EG,CiB5iDD,EO0nDE,AxB9EE,IwB8EE,CAACgW,CAAC,EP1nDxB,CO0nD2B,I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BvBLpjL,GwBuBQ,EH1rDf,CG0rDkBsE,AH1rDF0tB,CG0rDG,GAAG1tB,CAAC,AH1rDvB,CrBmqDmB,AqBnqDGg5F,CrBmqDDh9F,MqBnqDrB,GrBmqD8B,AqBnqDE,ErBmqDA,CAAC,EAAE,CAAE,CAAC,AqBnqDtC;QrBqqDD,EwBsBOyiL,CH1rDDlkF,IrBoqDCl/F,EwBsBO,GAAGhR,CxBtBJ,AqBpqDZ,CAAgBqjC,EG0rDI,CAACx7B,EH1rDrB,CAAsB4zB,EG0rDI,CAAC,CAAC,GAAGj6B,AH1rD/B,CG0rDgC,EH1rDA,CG0rDGoU,AH1rDnC,CG0rDoC,GAAG,CAAC,GAAG1U,CAAC,GAAGyU,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG6+K,GAAG,GAAG,CAAC,GAAGC,GAAG,CAAC,CAAC,CAAC;MxBpB5E,CAAC,IqBpqDMvkF,ErBoqDA,IAAKt/F,IqBpqDV,CrBoqDe,AqBpqDCyyB,CrBoqDAxxB,IAAI,AqBpqDpB,CAAsBszK,CrBoqDC,cqBpqDvB,GAAwC,YAAxC;QrBsqDD,EwBoBOkP,CHxrDDjP,CrBoqDAvzK,KAAI,AqBpqDT,CGwrDc,AHxrDd,CAAA,CrBoqDYjB,CwBoBK5Q,IAAI,AxBpBJ,CwBoBKuwB,AxBpBJ1e,IwBoBQ,AxBpBJ,CwBoBK,AxBpBJthB,CwBoBK,GAAGsgB,CxBpBH,CAAE,CAAE,CwBoBG,AxBpBF,CwBoBG,CAAC,CAAC;QxBlBvC,KAAM,AqBpqDEw0K,IrBoqDEp2L,CqBpqDT,CrBoqDU,AqBpqDG,GrBoqDA,CAAC,EAAEA,EAAC,GAAG4iB,CqBpqDI,IrBoqDA,CAAC7iB,MAAM,EAAEC,EAAC,EAAG,EAAG;UwBoBlCqlM,AxBlBN,IwBkBU,AxBlBLziL,AqBrqDGmzK,GGurDKhlL,ExBlBJ,EwBkBQ,CAAC6H,KAAK,CAAC,CAAC,ExBlBJ9C,AqBrqDnB,CGurD0B7D,AHvrDFmiC,CGurDG,GAAGztB,CAAC,AHvrD/B,CAA8B6lB,EGurDI,CAAC,AxBlBN,GwBkBSj6B,CAAC,AxBlBNqQ,AqBrqDjC,GGurD0C8D,AHvrDF,CGurDG,AHvrD3C,CrBqqDqC,CwBkBQ,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,ExBVA,CwBUGtX,AxBVF,EwBUI,GAAGyX,EAAE,GAAGD,EAAE,GAAGvX,EAAE,GAAGsX,EAAE;AFjwD1CuoK,EtByvDC,CsBzvDDA,CAAI4B,EEkwDE,IAAI,AFlwDV,CEkwDW9vK,AFlwDA+vK,CEkwDC,GAAGrqK,EAAE,GAAGtX,CFlwDpB,CEkwDsB,AFlwDtB,GEkwDyBuX,EAAE,GAAGC,EAAE,GAAGvX,EAAE,GAAGwX,EAAE;AF/vD1C,EtBsvDEzpB,EwBUE,AFhwDE4zL,CEgwDD,MAAM,GxBVT,CwBUa/hL,AxBVbkO,EsBtvDI6zK,GEgwDc,AFhwDE,CtBsvDpB,GsBtvDF,CEgwDyB,KAAK,EAAE;AF9vDhC,ItBovDEz8L,AsBpvDI08L,EE+vDA,CxBXJ,GwBWQ,CAAC3kL,CAAC,GAAGsa,EAAE,AF/vDXqqK,GE+vDc7hL,AF/vDE,EE+vDA,AF/vDtB,GE+vDyBuX,EAAE,GAAGD,EAAE,GAAGrX,EAAE,GAAGwX,EAAE;AF5vD1C,ItBivDEjX,AsBjvDIshL,EE6vDA,CxBZJ,EAED,CwBUS,CAACtkL,CAAC,GAAG8Z,EAAE,CxBVhB9W,EwBUmBP,EAAE,AxBVJ5a,CsBnvDZy8L,EE6vDmBvqK,CF7vDG,CE6vDD,AxBVJ,CsBnvDvB,CtBmvD0B,CwBUIC,EAAE,GAAGxX,EAAE,GAAGyX,EAAE;AF3vD1C,IAAMsqK,EE4vDA,AxBTJ,IwBSQ,AxBTH18L,CwBSIssB,CAAC,GAAG2F,AxBTH,EwBSK,GAAGtX,AxBTH,EwBSK,ExBTD,CwBSIyX,CxBTD,CwBSG,GAAGD,AxBTF,CAACvJ,AsBnvDvB8zK,CE4vD0B,EF5vDI,CE4vDD9hL,EAAE,CxBTD,EwBSIsX,AxBTD,EwBSG,CF5vD1C;AAEA,ItBmvDC,AsBnvDKyqK,EE2vDA,IAAI,CAACpwK,CAAC,GAAG0F,EAAE,GAAGtX,EAAE,GAAGuX,CF3vDnByqK,CE2vDqB,EF3vDK,CE2vDFxqK,EAAE,GAAGvX,EAAE,GAAGwX,CF3vDG,CE2vDD;ExBRxC,EwBSE,CAAC,CF3vDC,KE2vDK,IAAI5X,KAAK,KAAK,KAAK,EAAE;IxBT9B1a,EwBUI,CxBVJ,GwBUQ,CAAC+X,AF3vDA,CE2vDC,AF3vDA,CAACkmJ,EE2vDE5rI,EAAE,EF3vDJ4rI,CE2vDOpjJ,AF3vDAiiL,EE2vDE,GAAG1qK,EAAE,GAAGD,EAAE,AF3vD5B,GE2vD+BrX,EAAE,GAAGwX,EAAE;GF5vDxC,CtBkvDApyB,AsBhvDE,EE2vDE,GxBXJ,CwBWQ,CAACmY,AxBTV,AsBlvDUuF,CE2vDC,AF3vDR,EAAU,CE2vDCuU,EAAE,GAAGrX,AxBTnBiO,EwBSqB,GAAGqJ,EAAE,AxBTlBpJ,GwBSqBqJ,CxBTjB,CwBSmB,CxBThB,EwBSmBxX,EAAE,GAAGyX,EAAE;MACpC,AxBRJ,IwBQQ,AxBRFrJ,CwBQGuD,AF3vDA,CE2vDC,GAAG2F,CF3vDX,CE2vDa,GAAGtX,EAAE,AxBRF,GwBQKyX,AxBRAtJ,EwBQE,ExBRE,CwBQCqJ,EAAE,ExBRE9tB,CwBQCuW,EAAE,GAAGsX,EAAE,CxBRC,IAAI,OAAOpJ,IAAI,KAAK,QAAU;MwBSnE,AxBPJ,IwBOQ,AxBPH,CwBOIyD,AxBPFxD,CwBOG,GAAGkJ,EAAE,GAAGtX,EAAE,CxBPD,EwBOIuX,EAAE,AxBPFpJ,GwBOKqJ,CxBPD,CwBOG,AxBPFnJ,GwBOKpO,EAAE,CxBPD,CAAE,CwBOEwX,EAAE,CxBPA,CAAChb,IAAI,CAAE,KAAK/S,SAAS,EAAG;CsBzvDlC,CAAA,CAAhC,CEiwDI,CAAC,GxBNF,GwBMQ,IAAImW,AxBNLsO,IAAI,CwBMM,AxBNLE,KwBMU,CxBNJ,CAAE,GwBMO,CxBNH,CwBMK,AxBNJ5R,IAAI,CAAE;AsBnvDlC,IAAIylL,EE0vDE,AxBLJ,IwBKQ,CAAChlL,CAAC,GAAGsa,EAAE,AF1vDb0qK,GE0vDgBliL,AF1vDhBkiL,EE0vDkB,GAAG3qK,AF1vDrB2qK,CAAJ,CE0vD2B,GAAG5qK,EAAE,GAAGrX,EAAE,GAAGwX,EAAE;AFvvD1C,IAAI0qK,EEwvDE,AxBJJ,IwBIQ,AxBJF7zK,CwBIG9Q,CAAC,GAAG8Z,CxBJD,CwBIG,ExBJA,AsBpvDb6qK,CEwvDgBliL,EAAE,AFxvDA,GEwvDGsX,CFxvDzB,CEwvD2B,GAAGC,EAAE,GAAGxX,EAAE,GAAGyX,EAAE;AFrvD1C,IAAI2qK,EEsvDE,ExBJH3lL,EwBIO,CAACkV,CAAC,AxBJL,EAAE,CwBIM2F,EAAE,CxBJJ,CAAC7a,CwBIMuD,EAAE,AFtvDlBoiL,CtBkvDc,EwBIO3qK,AFtvDrB2qK,EEsvDuB,GAAG5qK,AFtvD1B4qK,CAAJ,CEsvDgC,GAAGniL,EAAE,GAAGsX,EAAE;AFnvD1C,IAAI2pK,EEovDE,ExBJH3yK,AsBhvDC2yK,EEovDM,CAACtvK,AxBJL,AsBhvDK,CEovDC,CxBJJ,EwBIO0F,CFpvDf,CEovDiB,GAAGtX,EAAE,GAAGuX,EAAE,GAAGC,EAAE,GAAGvX,EAAE,GAAGwX,EAAE;AFjvD1C,IEkvDI,AFlvDE4qK,CEkvDD,CxBJH,CAAC,IwBIQ,IAAIxiL,CFlvDTwiL,GAAe,CEkvDD,CFlvDpB,IEkvDyB,KAAK,EAAE;AFvtDhC,IAAMC,EEwtDA,AxBHJ,CsBrtDIA,GEwtDI,AxBHFz0K,AsBrtDI,CEwtDD3Q,CAAC,ExBHA,CwBGGsa,EAAE,AxBHF,EsBrtDT8qK,CEwtDctiL,CxBHD,CwBGG,AxBHF6N,AsBrtDR,CAAS4zE,EEwtDIlqE,CxBHD,CwBGG,AFxtDf,EAAe,CEwtDGD,EAAE,GAAGrX,EAAE,GAAGwX,EAAE;MACpC,AxBFJ,AsBttDM40F,IEwtDE,AxBFHx+F,CwBEIrQ,AFxtDH6uG,CEwtDI,ExBFD,AsBttDK,CEwtDD/0F,EAAE,CFxtDf,CtBstDc,CwBEIrX,EAAE,CxBFF,EwBEKsX,AxBFF,EwBEI,GAAGC,EAAE,GAAGxX,EAAE,GAAGyX,EAAE;MACpC,AFvtDAwiD,EtBstDH,EwBCO,CAACtoD,CAAC,AxBDLpD,AsBttDD0rD,GEutDS3iD,AxBDL,AsBttDKmqE,EEutDE,EFvtDFA,CEutDKzhF,EAAE,CFvtDC,CAAA,CEutDEyX,AFvtDvB,EEutDyB,GAAGD,EAAE,GAAGvX,EAAE,GAAGsX,EAAE;MACpC,CFltDC20F,CtBktDJ,EwBAO,CAACt6F,CAAC,AxBAJpD,GwBAO8I,EAAE,AxBAJ,AsBltDX,CtBktDY7I,EwBAMzO,AFltDA0K,EEktDE,GAAG6M,AxBAJ,CAAE1J,CwBAI,CFltDPnD,CAASktK,CEktDCpgK,AxBAF,CAAC,CwBAG,CxBAA,EwBAGvX,EAAE,GAAGwX,EAAE,AFltDtB,CAAuB,KAAvB,CAAlB;IEmtDE,CAAC,EFltDE8qK,GtBmtDH,CwBDO,AFltDT,GAAY73K,CEktDC7K,KAAK,EFltDN6K,CAASktK,EEktDE,KAAK,EAAE,IFltDlB,CAAuB,IAAvB,CAAZ;MEmtDI,CFltDC1rE,GEktDG,CAAChvG,CAAC,GAAGsa,EAAE,AFltDf,CAAgBwjK,EEktDEh7K,EAAE,GAAGuX,EAAE,EFltDzB,CEktD4BD,AFltDA,EEktDE,EFltDF,CEktDKrX,AFltDAsiL,EEktDE,EFltDnC,CEktDsC9qK,AFltDtC,EEktDwC;MACpC,AFjtDA+lK,IEitDI,AxBCNjvK,CwBDO/Q,CAAC,CxBCL,CsBltDL,CEitDa8Z,AFjtDA,CtBktDL,CwBDO,CxBCL,CsBltDG,CEitDKrX,AFjtDAisG,EEitDE,GAAG30F,EAAE,GAAGC,AFjtD5B,EEitD8B,AFjtDAoqK,GEitDG5hL,EAAE,GAAGyX,EAAE,GFjtDxC,CAAA;MEktDI,CF5sDC+qK,GE4sDG,AxBEN,CwBFO7wK,CAAC,GAAG2F,AxBEL,CsB9sDR,CE4sDe,ExBEHrsB,AsB9sDK,CE4sDC+U,AxBEL,AsB9sDI,CAAjB,CE4sDoB,CxBEJ,CAAC,CwBFMyX,CxBEJ7b,CwBFM,AxBEL,GwBFQ4b,AxBEL3J,EwBFO,ExBEH,CwBFM5N,AxBELjV,EwBFO,GAAGusB,CxBEJ,CwBFM,CxBEJtsB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;MwBD9C,CF3sDCw3L,GE2sDG,CAAC7wK,CAAC,AxBGP,GwBHU0F,CxBGLzJ,CwBHO,GAAG7N,AxBGN,AsB9sDZ,CtB8sDc/U,CwBHM,AxBGL,CAAE,AsB9sDI,CtB8sDHyjB,CwBHK6I,AF3sDvB,EE2sDyB,GAAGC,EAAE,GAAGvX,EAAE,AxBGJ,EAAG,CwBHIwX,EAAE;IACtC,GFtsDGirK,OtB0sDDn0K,GAAG,CAAC9jB,I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iBF,CAAChF,AsBhsDd,IAAoB8vC,MtBgsDI,AsBhsDJA,CtBgsDM7vC,AsBhsDCooK,KtBgsDK,CAAC,KsBhsDb,CAAmB/6G,MAAAA,CAAOipH,UAA1B,CAAxB,EAA+D;EtBksDhE,CAAC,CwBlBE,IAAI8M,CxBkBA,CwBlBE,CF/qDC9M,EE+qDEwN,MAAM,CAAC9+K,CAAC,AF/qDjB,GAAoB,IAApB;IEgrDA,AxBmBF,IwBnBM++K,AxBmBD/jL,KwBnBM,AxBmBD,CAACiB,IAAI,EAAG;IwBlBhB,ExBoBD,AsB/rDGs1K,EE2qDEyN,KAAK,QF3qDPzN,GACFnB,sBAAAA,IACAC,YAAAA,CAAamB,OAAb,CAAqBC,mBAAAA,CAAoB,IAApB,EAA0B,SAA1B,CAArB,CAAA,KAA+D,MAFjE;IE4qDE,EFxqDEC,EEwqDEuN,KAAK,WFxqDPvN,GAAAA,KAAAA,CAAJ;IEyqDE,ExBoBD,AsB5rDGC,EEwqDEuN,KxBoBE,CwBpBI,AFxqDRvN,GAAAA,KAAAA,CAAJ;IEyqDE,IAAIwN,AxBoBJljL,CsB3rDK+gB,GtB2rDD,EwBpBM,AxBoBJpgB,CwBpBK,CAAC,GxBoBD,CAACI,IAAI,CAAEhC,AsB3rDpB,CAAwB,ItB2rDC,AsB3rDzB,CtB2rD0BiB,IAAK,CAAC;QAC9BZ,IsBrrDU,CtBqrDL,EAAEL,KAAK,CAACK,KAAK;IwBnBlB2jL,IxBoBA1jL,CwBpBK,EFjqDI,CEiqDD6P,EAAE,AxBoBJ,EAAEnQ,CwBpBKsQ,EAAE,CFjqDN,CtBqrDI,CwBpBKF,AxBoBJ9P,EwBpBM,EFjqDX,CEiqDciQ,AFjqDd,CtBqrDW,CwBpBK,AFjqDL,GEiqDQF,EAAE,GAAGG,EAAE,GAAG2yK,EAAE,GAAGC,EAAE,CAAC,CAAC;QxBqB/C9oM,IAAI,EAAE0lB,CsBrrDOqtD,ItBqrDF,CAACpsD,CsBrrDCosD,CAAOzrC,EtBqrDJ,CAACljC,GsBrrDX,QtBqrDsB,CAACC;IwBnB7B,ExBoBD,CAAC,CwBpBIqlM,KAAK,GAAG,GAAG,EAAE;IxBsBnB,CAAC,AsB/rDC,CE0qDEA,KAAK,AxBqBF,GwBrBK,CAACA,KAAK;MACd1zK,AxBsBHzc,EwBtBK,GAAG,CAACyc,CxBsBF,CwBtBI,AxBsBHxc,EsBtrDO,EtBsrDH,CAAE,6CAA8C,CAAC;MwBrB1Dyc,AxBsBH,EwBtBK,GAAG,AFhqDE,CEgqDDA,CxBsBF,CwBtBI,AxBsBH,CAAC,KsBtrDC,MAAA,CAAA,EAAW;ItBwrDtB,EwBvBIC,EAAE,GAAG,CAACA,EAAE,CFhqDG68C,MAAAA,CAAOipH,UAAd;EtByrDT,IwBxBK8M,EAAE,GAAG,CAACA,EAAE;AxB0Bd,IwBzBI,CAAC,AF/qDD,CE+qDE;AxB2BN,IAAInhL,SAAS,EsBrrDI,CtBqrDD,CAAC;AAAC,IwBxBd,AxB0BEC,IwB1BE,GAAG,AxB0BE,AsBtrDA,GE4pDC8hL,KAAK,CF5pDN,EE4pDS,IF5pDT,CAAA,EAAW,CE4pDM,EAAE,KxB0BnB7hL,gBAAA;EAAAC,IwBzBP,KxByBO,CAAAF,GsBrrDImrD,ItBqrDJ,EAAAlrD,AsBrrDIkrD,CAAO6oH,SAAd,MtBqrDG;EAAA,IwBxBP6N,AxBwBO1hL,KwBxBF,CxBwBE,EwBxBCjT,CxBwBDkT,GwBxBK,CAACjL,IAAI,CAAC2sL,GxBwBX,CAAA9hL,CwBxBgB,CAAC,KxBwBjB;EAEZ,GsB9sDG,CEqrDE+hL,KAAK,AxByBV/hL,GwBzBa9S,IAAI,CAAC+D,AxByBL6M,GwBzBQ,CAAC+jL,CxByBJ,GAAG7hL,CwBzBM,CAAC,KxByBA,CAACK,aAAa,EAAEC,OAAO,GAAGN,OAAO,CAACO,eAAe,EAAEC,KAAK,GAAGtc,mBAAmB,EAAEuc,KAAK,GAAGvc,mBAAmB,EAAEwc,SAAS,GAAGjc,YAAY,EAAEkc,SAAS,GAAG/b,wBAAwB,EAAEgc,MAAM,GAAGlb,UAAU,EAAEtN,IAAI,GAAG0M,gBAAgB,EAAE+b,UAAU,GAAGb,OAAO,CAACc,kBAAkB,EAAE5D,UAAU,GAAG5T,YAAY,EAAG;IAAA,EwBxBvT04L,ExBwBuTjhL,IwBxBjT,ExBwBiT,CwBxB9S7T,CFvpDG,GEupDC,CAAC+D,GAAG,CAAC,CAAC,GAAG,GAAGrC,CAAC,IAAIizL,KAAK,CAAC,GAAGE,KAAK;IxBwB2QrjM,EwBvBvTujM,KFvpDO,CEupDD,GAAG/0L,IAAI,AxBuB0S,CwBvBzS+D,AFvpDP,GEupDU,CAACrC,CAAC,CxBuBoSoR,AsB9qDhT,CAAA,CEupDe6hL,CFvpDJ,IEupDS,AxBuB4R,CwBvB3R,GAAGE,KAAK;IACtC,AxBwBFhhL,CwBxBG,KxBwBH,CwBxBS,ExBwBTZ,EsB/qDegrD,ItB+qDf,CAAA9yE,CsB/qDe8yE,CAAOupH,EtB+qDtB,QsB/qDQ;ItBirDR3zK,EwBzBI,IxByBJ,CAAKC,SAAS,GAAG,IAAI;IAErBjrB,CsBptDE,CE0rDE,IxB0BE,CAACI,cAAc,CAAA8qB,sBAAA,CAAAF,MAAA,GAAQ,IAAI,EAAE;MwBzB/BihL,AxByBiCzrM,KAAK,CwBzBhC,AFlpDE,CtB2qDgCwpB,EwBzB/B,GAAG,GAAGnR,CAAC,AxByBiC;IAAI,CAAE,CwBxBvDqzL,AxBwBwD,KsB1qDjD,CEkpDD,GAAGrzL,CAAC,IFlpDH,MAAA,CAAA,EAAW;IEmpDpB,AxByBFmS,CwBzBG,CAAC,IxByBJ,CAAKpT,CsB3qDO4vG,GtB2qDH,EsB3qDGA,CtB2qDAlwG,AsB3qDMqyB,MAAV,EAAkB,ItB2qDF,CAAC,CAAC;IAE1B3e,MAAA,CAAKtkB,IAAI,EsB5qDQ8gH,CtB4qDL,EAAE,EsB5qDGA,CAAM0tD,OAAN,CAAA,CAAA,CAAgBgpB,MAAvB;IEopDRn1L,AxB0BFiiB,MwB1BQ,AxB0BR,CwB1BS3S,AxB0BJ8S,CwB1BK,GAAG8gL,ExB0BF,GAAG,CwB1BK,GAAG/zK,AxB0BJhP,EwB1BM,GAAGgjL,CxB0BH,CAAEnkL,IwB1BO,CxB0BD,CAAC,CwB1BGsQ,EAAE;IACpCtvB,AxB0BFiiB,MwB1BQ,AxB0BR,CwB1BSrS,AxB0BJyS,CwB1BK,GAAG6gL,AFlpDE72H,GtB4qDH,GwB1BO,AxB0BJ,AsB5qDAA,CAAOs5E,CtB4qDL,CwB1BKv2H,EAAE,AFlpDT,CAAY+lK,EEkpDAgO,IFlpDnB,EEkpDyB,GAAG5zK,EAAE;IACpCvvB,AxB2BFiiB,GsBprDY,GEypDJ,AxB2BR,CwB3BS8B,AxB2BJvC,CwB3BK,GAAG0hL,GxB2BD,GwB3BO,AxB2BJ1hL,GwB3BO6N,EAAE,ExB2BF,CwB3BK8zK,MAAM,GAAG3zK,EAAE;IACpCxvB,AxB2BFiiB,MwB3BQ,AxB2BR,CwB3BS+B,AxB2BJ1B,AsB5qDM,CEipDD,GAAG4gL,GxB2BD,EsB5qDD,CEipDQ,AxB2BJ,CAAC,EwB3BMf,EAAE,AFjpDb,CAAS7tL,CAAT,CEipDgB6uL,CFjpDJ,KEipDU,GAAGf,EAAE;IACpC,AxB4BFngL,MAAA,CwB5BSjiB,AxB4BJ0hB,CsB7qDO+8F,ItB6qDF,CwB5BK,AFjpDHA,CAAM79E,CtB6qDLlf,KAAK,AsB7qDV,EAAkB;EEkpD1B,ExB4BAO,MAAA,CAAKN,KAAK,AsB7qDMwqJ,GtB6qDHxqJ,IsB7qDH,CtB6qDQ,AsB7qDR,CAAA,CAAgBwzK,MAAhB,GAAyB7gL,CAAzB;EEkpDV,ExB6BA2N,KsBhrDQ,CtBgrDR,CAAKL,IsB9qDU,KtB8qDD,GAAGA,SAAS;AwB5B5B,IxB6BEK,MAAA,CAAKJ,MsB9qDY8jI,GtB8qDH,CsB9qDJ,CAAYwvC,CtB8qDLtzK,KsB9qDP,GAAqBvN,CtB8qDL,AsB9qDhB;AEkpDZ,IxB8BE2N,MAAA,CAAKF,UAAU,GAAGA,UAAU;IAE5BE,MAAA,CAAKH,MAAM,GAAGA,MAAM,GsBhrDS,IAArB,CAAA;EEmpDRshL,ExB8BAnhL,MAAA,CwB9BSmhL,AxB8BJ7gL,CwB9BK2tF,EFlpDI2lF,MAAN,CAAA,CAAA,GtBgrDW,EwB9BM,CxB8BH,CwB9BK5lL,EAAE,CxB8BH,CwB9BKozL,aAAa,EAAErjM,MAAM,EAAE;IACpD,AxB8BFiiB,IwB9BMjiB,ExB8BN,CAAK1G,GwB9BO,CxB8BH,GAAGA,CwB9BK,GxB8BD,EwB9BM,CAAC,EAAE;IxBgCzB2oB,CsB5uDE,CE6sDEjiB,IxB+BJ,CAAKkX,CwB/BK,GAAG,ExB+BF,EwB/BM2R,CxB+BH,IAAInV,KwB/BS,CAAC,CAAC,AxB+BJ,CAAE,CAAC,EAAE,CAAE,CAAC;IwB9B/B,AxB+BFuO,MAAA,CAAKO,AsB5qDM,MtB4qDA,GAAG,IAAI9O,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IwB7B/B,AxB8BFuO,MwB9BQkN,AxB8BR,CAAK1X,AsB5qDM,CE8oDD,GAAGy4F,ExB8BF,GAAG,AsB5qDH,ItB4qDOx8F,EsB5qDP,CAAA,EAAW,CE8oDM,CAACpE,AxB8BJ,CwB9BK,AxB8BH,CAAC,EwB9BK+zL,AxB8BH,CAAE,CAAC,WwB9Ba,CAAC/zL,CAAC;IxB+BhD2S,EwB9BQmN,EAAE,ExB8BV,CwB9Ba8gF,AxB8BRt0F,IsB5qDUywD,ItB4qDF,EsB5qDEA,CtB4qDC,AsB5qDMhtD,CtB4qDL,GwB9BW,CAACzP,AF9oDrB,CE8oDsB,GAAGyzL,aAAa,CAACzzL,CAAC;IxBgChDqS,EwB/BQoN,CFjpDG,CEipDD,ExB+BV,CwB/Ba6gF,AxB+BRztF,ewB/BuB,CAACsB,AxB+BR,CwB/BS,ExB+BN,CwB/BSs/K,GxB+BL,UwB/BkB,CAACt/K,CAAC;IxBgChD9B,EwB/BQqN,EAAE,ExB+BV,CwB/Ba,AxB+BRhT,AsB7qDM,IE8oDM,CAAChN,CAAC,AxB+BR,GAAG,AsB7qDH,ItB6qDOsI,EsB7qDP,CAAStD,CAAT,EAAY,CtB6qDE,CAAC,CAAC;IAE3B2N,EwBhCQsN,EAAE,ExBgCV,CwBhCa,AxBgCR7M,IwBhCY,AF9oDFrD,CE8oDGzP,CAAC,GF9oDX,GAAe0E,CAAf,EtB8qDY,GAAG,IAAI;IAC3B2N,EwBhCQuN,EAAE,ExBgCV,CwBhCa,AxBgCR7M,IwBhCY,CAACoB,CAAC,AF9oDF06F,KAAT,EAAgBnqG,CAAhB,CAAA,CtB8qDa,GAAG,KAAK;IAC7B2N,EwBhCQmgL,EAAE,ExBgCV,CwBhCa,AxBgCRx/K,IwBhCY,CAACoB,AxBgCR,CwBhCS,ExBgCN,IAAI;IwB/Bf,AxBgCF/B,CsBvvDE,KEutDMqhL,AxBgCR,CAAKzgL,MwBhCU,GAAG5S,EAAE,GAAG,CxBgCH,EwBhCM,CxBgCH,CAAC,CAAC,CAAC;IwB/BxBjQ,MAAM,AFxoDE,CEwoDDsP,CAAC,IAAIg0L,OAAO,IAAIn0K,EAAE,GAAGizK,EAAE,GAAGhzK,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE,CAAC;IACnDvvB,AxBgCF,IAAK,EwBhCG,CAAC4P,AFxoDE,CEwoDD,GxBgCEwO,CwBhCEklL,IFxoDH,GEwoDU,ExBgCC,CsBxqDX,CEwoDcl0K,AFxoDd,EEwoDgB,AFxoDL,CtBwqDK,EwBhCGgzK,EAAE,GAAG/yK,CxBgCA,CwBhCE,CxBgCC,EwBhCEC,EAAE,GAAGH,EAAE,GAAGK,EAAE,CAAC;IACnDxvB,ExBiCDiiB,IwBjCO,CAAC8B,CAAC,AxBiCT,CAAK3F,EsBzqDSiuD,CEwoDDi3H,KFxoDCj3H,CAAO1uE,CEwoDD,AxBiCL,GAAGygB,AsBzqDX,CEwoDiBiR,EAAE,GAAG+yK,EAAE,ExBiCH,CwBjCMjzK,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE,CAAC;IACnDtvB,AxBkCF,CAAC,EsB7qDS,GE2oDF,CAACgkB,AxBkCF,CwBlCG,IAAIs/K,OAAO,IAAI,CAACn0K,EAAE,GAAGG,EAAE,GAAGF,EAAE,GAAGG,EAAE,GAAGF,EAAE,GAAGG,EAAE,CAAC;IACpD,ExBiCO,KwBjCAxvB,AFxoDE,MEwoDI,GFxoDJ,MAAA,CAASsU,CAAT,EAAY;EEyoDvB,aFvoDe3W,IAAP,GAAc2W,CAAd;AEyoDV,MxBgCG0I,MsBxqDW24K,EtBwqDH,CAAE,KsBxqDH,EAAc,8DtBwqD2D,CAAC;AwBhCnF5+L,MxBiCEkrB,CwBjCF,CAAA4G,IxBiCE,CAAKzK,KwBjCP,CFvoDoBsvK,EEuoDpB7kK,ExBiCiB,GAAGzK,EsBxqDT,GEuoDX,AFvoDgCiuD,KtBwqDF,CsBxqDEA,CAAO1uE,GtBwqDJwM,CsBxqDxB,WtBwqDoC,GAAGM,cAAc,GAAGD,YAAY;AwBhChF,IxBkCE,EwBlCIw3L,MAAM,GAAG,IAAI7E,IAAI,CAAC,CAAC;AACzB,IxBoCEl7K,EwBpCIggL,IxBoCJ,CAAKn/K,CwBpCK,GAAG,IAAIq6K,AxBoCJ,GAAG,CwBpCK,AxBoCJ,CwBpCK,AxBoCJ,CwBpCK;IxBsCvBl7K,CsBvwDE,KtBuwDF,CAAK5B,OAAO,GAAG,CAAC;AwBpClB,IxBqCE4B,MAAA,CAAKc,CsBvqDO,OtBuqDC,GAAG,IAAI;AwBpCtB,IxBsCEd,MAAA,CAAKe,AsBxqDM,SAAA,MAAA,CAAA,EAAW,GtBwqDI,GAAG,KAAK,CAAC,CAAC;AwBrCtC,IxBsCEf,MAAA,CAAKgB,IsBxqDUopD,MAAAA,CAAOmqD,KtBwqDD,CsBxqDb,EtBwqDgB,KAAK,CAAC,CAAC;AwBrCjC,IxBqCiC,EwBrC3B+sE,CFroDQ,ItB0qDmBthL,MwBrChB,AxBqCgB,GwBrCb;EAClB,AxBsCD,SsBxqDY,SAAA,MAAA,CAAS3N,CAAT,EAAY;EEmoDvBkvL,AxBqCApjM,MwBrCM,EAAE,CAAC,GxBqCT,CAAA8gB,AsBvqDes1G,MAAP,CtBuqDR,EsBvqDwBliH,CAAhB;EEooDR,ExBmCA/c,GAAA,KsBtqDY80E,MAAAA,CAAOmqD,MAAX,EAAmB;EEooD3BitE,ExBkCA5vL,GwBlCK,AxBkCL,EwBlCO,AxBoCR,CwBpCS,IFnoDM+7K,ItBuqDf/7K,IAAA,AsBvqDW,CAAa4qG,CtBuqDZ,IsBvqDYA,CAAMk2E,IAAnB,EAAyBD,GAAAA,CAAIoB,YAA7B,CAAA;EEqoDV,IxBoCA,GsB1qDQ,ItB0qDD,EsBxqDQ,EtBwqDJ,CAAC1zK,MAAM,CAACnC,IAAI;EwBnCvByjL,ExBqCD,CwBrCI,AxBqCH,EwBrCK,CAAC,MFpoDQ5S,WAAJ,CAAgBryE,KAAAA,CAAMk2E,IAAtB,EAA4BD,GAAAA,CAAIoB,YAAhC,CAAA;EEsoDV,ExBmCAljL,GAAA,EAED,SAAAA,IAAWnb,KAAK,GAAG,IAAI,EAAG;EwBpCzBksM,IxBsCA,IwBtCQ,AxBsCJ,CAACvhL,CwBtCK,CAAC,AFloDE2zK,ItBwqDF,CAAC91K,GsBxqDJ,CtBwqDQ,AsBxqDR,CAAA,EtBwqDWxoB,KAAK;EwBpCxB,ExBsCD,QsBxqDagnH,KAAAA,CAAMu3E,aAAV,EAAyB;EEmoDjC4N,AxBqCA,csBvqDgB5N,EEkoDA,EAAE,EAAE,OFloDV,CAAoBtI,SAApB,GAAgCp5K,CAAAA,GAAIogL,GAAAA,CAAIuB,SAAR,GAAoBvB,GAAAA,CAAIwB,WAAxD;EEooDV,ExBmCA3+L,GAAA;EwBlCAssM,ExBkCApsM,KAAA,EAED,EwBpCY,EAAE,EAAE,GxBoChByrB,aAAA,EAAe;EwBlCd,GFzvDE,CtB6xDF,IAAI,CAAC5G,MAAM,CAACf,cAAc,CAAE,IAAI,CAACrE,MAAM,CAAC5H,CAAC,EAAE,IAAI,CAAC4H,MAAM,CAACtH,CAAC,EAAE,IAAI,CAAC4S,MAAM,CAAClT,CAAC,EAAE,IAAI,CAACkT,MAAM,CAAC5S,CAAC,EAAE,IAAI,CAACgM,QAAQ,EAAE,IAAI,CAACnE,MAAM,CAACnI,CAAC,EAAE,IAAI,CAACmI,MAAM,CAAC7H,CAAE,CAAC;EwBnCrIk0L,ExBqCD,MwBrCS,AF/nDE,EE+nDA,EAAE;EAEZ,AxBmCA,SsBnqDW,SAAA,MAAA,CAAA,EAAW;EEioDtBC,ExBkCAxsM,GAAA,GwBlCQ,EAAE,GAAG,AFhoDE80E,MAAAA,CAAOs5E,IAAd;EEkoDR,ExBgCAluJ,KAAA,EAED,SAAA2c,MAAA,EAAQ;EwBjCP4vL,GFhwDE,CtBmyDF,GwBnCO,EAAE,ExBmCF,IAAI,IAAI,CAACtmM,WAAW,CAAC,CAAC,CAAC2W,IAAI,CAAE,IAAK,CAAC;AwBlC5C,CAAC,GxBoCA,iBsB/pDsB;AE4nDvB,ExBmCE,SsB7pDW,SAAA,MAAA,CAAA,EAAW;AE2nDxB,IxBkCE9c,GAAA,QsB5pDeg+L,eAAP;AE2nDV,IxBiCE99L,GsB/pDqB,EtB+pDrB,EAED,SAAA4c,KAAM+N,MAAM,EAAG;MAEd,IAAI,CAACzkB,AsB9pDM,ItB8pDF,GAAGykB,EsB9pDD,ItB8pDO,CAACzkB,CsB9pDR,CAASyuL,EtB8pDG,EsB9pDZ,EAAe;AE2nD5B,MxBqCE,IAAI,CAAChqK,CsB/pDOgyK,KtB+pDD,GAAGhyK,MAAM,CAACA,MAAM,CsB/pDnB,EAA4B;AE2nDtC,MxBqCE,IAAI,CAACC,OAAO,GAAGD,MAAM,CAACC,AsB/pDM+pK,IAAlB,GtB+pDmB,CAACztL,KAAK,CAAE,CAAE,CAAC;AwBpC1C,MxBsCE,IAAI,CAAC6iB,GsBhqDS4qK,ItBgqDF,AsBhqDF,EAAU,CtBgqDLhqK,MAAM,CAACZ,OAAO;AwBxC/BzqB,MxByCE,CwBzCF,CAAAwsM,ExByCM,CAACjhL,KsBhqDW+4F,EtBgqDJ,CwBzCd,CFvnDc,CtBgqDGj5F,AsBhqDMozI,CEunDvB+tC,KxByCuB,AsBhqDT,CtBgqDUjhL,CsBhqDO,IEunD/B,ExByC+B,EsBhqDjB,EAA2BozK,kBAA3B,CAAA;AE0nDd,MAAM1wD,AxBwCJ,IAAI,CwBxCK,AxBwCJtjH,AsBnqDK,CE2nDA,IxBwCA,CsBjqDO,EtBiqDJU,MAAM,CAACV,KAAK;EwBvCzB,IxBwCA,IAAI,CAACC,KAAK,AsBjqDMqhJ,GtBiqDH5gJ,GsBjqDD,CAAWozI,EtBiqDJ,CAAC7zI,GsBjqDR,EtBiqDa,AsBjqDM,QAAnB,EAA6B+zK,kBAA7B,CAAA;AE0nDd,MxByCE,IAAI,CAAC9zK,SAAS,GAAGQ,MAAM,CAACR,SAAS;AwBxCnC,MxByCE,IAAI,CAACC,SAAS,GAAGO,AsBlqDM+zK,MtBkqDA,CAACt0K,AsBlqDd,CAAqB4zK,QtBkqDE,WsBlqDFA,CAAoBh3E,KAApB,EAA2B,SAA3B,CAArB,EAA4D2tE,IAA5D,CAAA;MtBoqDV,IAAI,CAACrqK,UAAU,GAAGK,MAAM,CAACL,UAAU;EwBzCnC,IxB2CA,IAAI,CAACD,MAAM,GAAGM,MAAM,CAACN,MAAM;AwB1C7B,MxB2CE,IAAI,CAACS,cAAc,GAAGH,MAAM,CAACG,cAAc;AwB1C7C,GFlxDE,CAAA,EtB6zDA,IAAI,CAACjpB,IAAI,GAAG8oB,MAAM,CAAC9oB,IAAI;MAEvB,AsBnqDIu1D,ItBmqDA,CAAC33C,CsBnqDD23C,CAAOu4H,ItBmqDA,CAAC/yK,IAAI,CAAE+N,CsBnqDd,CAAmBiqD,ItBmqDC,CAACn1D,CsBnqDFm1D,CAAOzrC,ItBmqDE,CAAC,CsBnqD7B,CAAJ,EAAuC;EEwnDvC,IxB4CA,GsBnqDO41F,CtBmqDH,CAACh0G,IsBnqDH,EtBmqDS,CAACnO,AsBnqDIg4D,ItBmqDA,CAAEjqD,CsBnqDFiqD,CAAOmqD,ItBmqDC,CAACh0G,CsBnqDT,IAAiB,CtBmqDD,CAAC,GsBnqD/B;AEwnDJ,MxB4CE,EsBlqDMotK,EtBkqDF,CAACn4K,KsBlqDH,CtBkqDS,AsBlqDI,CtBkqDHpD,GsBlqDG,CtBkqDC,AsBlqDIiqG,CtBkqDFl8F,MAAM,CAAC3K,EsBlqDvB,EAA8Bi9K,EtBkqDA,CAAC,AsBlqDDA,CAAI0B,UAAlC,CAAA;AEunDJ,MxB4CE,EsBlqDM9F,EtBkqDF,CAAC10K,QAAQ,GAAGwG,AsBlqDd,CAAmB,IAAA,CtBkqDC,AsBlqDIk8F,CtBkqDH1iG,QAAQ,CsBlqD7B,EAAoC,KAApC,CAAA;MtBoqDF,EsBjqDMw4K,EtBiqDF,CAAC3xK,gBAAgB,GAAGL,AsBjqDtB,EAA4B,ItBiqDA,CAACK,gBAAgB;EwB5C/C,IxB6CA,IAAI,AsBjqDI8yK,CtBiqDHj5K,MAAM,CAACjI,IAAI,CAAE+N,EsBjqDd,EAAqB,EtBiqDD,CAAC9F,MAAO,CAAC;AwB5CnC,MxB8CE,IAAI,CAACoG,GsBlqDO6yK,YtBkqDQ,GAAGnzK,AsBlqDjB,GAAwB,GtBkqDD,CAACM,AsBlqDxB,etBkqDuC;AwB7C/C,MxB8CE,IAAI,CAACC,CsBjqDO0zK,QAAAA,GAAWhC,ItBiqDF,GAAGjyK,KsBjqDDiyK,CtBiqDO,AsBjqDMmB,CtBiqDL7yK,MsBjqDR,CAAqB8yK,StBiqDG,UsBjqDHA,CAAoB,IAApB,EAA0B,KAA1B,CAArB,CAAjB;AEonDR,MxB8CE,IAAI,CAAC7yK,CsBhqDKyzK,ItBgqDA,GAAGj0K,CsBhqDP,EAAc,GtBgqDD,CAACQ,KAAK;MACzB,IAAI,CAACC,MsBhqDU8iI,IAAP,GAAcxiI,EtBgqDF,EsBhqDEA,CtBgqDCf,AsBhqDIgB,KAAL,CtBgqDO,AsBhqDIizK,CtBgqDHxzK,OsBhqDR,CAAd,OtBgqDqC;EwB7C7C,IxB8CA,IAAI,CAACzE,UAAU,GAAGgE,MAAM,CAAChE,UAAU;AwB7CrC,MxB+CE,IAAI,CAAC0E,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEjB,MAAM,CAACU,QAAS,CAAE,CAAC;AwB9CjE,MxBgDE,IAAI,CAACQ,WAAW,GAAG,IAAI;MAEvB,GsBlqDO0yK,ItBkqDA,IAAI,KsBlqDT,GAAqBl5K,QAAAA,CAASktK,aAAT,CAAuB,KAAvB,CAArB;EEknDF,ExBkDD,KsBnqDQgM,aAAL,CAAmBtI,SAAnB,GAA+BgH,GAAAA,CAAIwB,WAAnC;AEknDJ,ExBiDE,MsBlqDMtG,QAAJ,CAAa,IAAA,CAAKoG,aAAlB,EAAiCtB,GAAAA,CAAI4B,kBAArC,CAAA;AEknDJ,IxBgDE/+L,GAAA,CsBjqDM80E,MAAAA,CAAOupH,UAAX,EAAuB;ItBiqDzBn+L,KAAA,CsBhqDQm4L,CtBkqDT,OsBlqDK,CAAa,CtBkqDlBtvK,GsBlqDkB,CAAK01K,GtBkqDfz1K,IAAI,EAAG,IsBlqDV,EAAiCm0K,GAAAA,CAAI6B,eAArC,CAAA;EEknDJ,IxBkDA,IAAM/1K,CsBnqDG89F,UAAL,CtBmqDc,AsBnqDEk4E,GtBmqDGj2K,IAAI,KAAKzkB,AsBnqD5B,CAA6B,IAAA,CAAKk6L,GtBmqDG,IAAI,MsBnqDzC,CtBmqDgDz1K,CsBnqDC,GtBmqDG,CsBnqDH,CAAK+9F,GtBmqDG,OsBnqDR,CtBmqDkB,AsBnqDFm4E,UAAhB,CAA2B,CAA3B,CAAjD,CAAA;AEknDN,KFpnDI,CtBuqDF,IAAK,CAAEj2K,AsBpqDE,YtBoqDU,IAAID,IAAI,CAACgD,QAAQ,CAAE,IAAI,CAAC1U,IAAI,CAAE,KAAK/S,SAAS,EAAG;AwBlDpE,QxBoDG,EsBrqDO8zL,KtBqqDArvK,GsBrqDJ,CtBqqDQ,AsBrqDK,CtBqqDJgD,GsBrqDI,CAAKyyK,ItBqqDD,CAAE,IAAI,CAACnnL,GsBrqDxB,CtBqqD4B,CAAE,AsBrqDG6lL,GAAAA,CAAIgC,kBAArC,CAAA;MtBuqDJ,KsBtqDSp4E,UAAL,CAAgB8uE,WAAhB,CAA4B,IAAA,CAAK4I,aAAjC,CAAA;EEknDJ,IxBsDA,IAAMt1K,MAAM,GAAG;AwBrDjB,QxBuDG8C,AsBvqDK63F,IAAJ,CAAS,GtBuqDF,CsBvqDE,CtBuqDA,AsBvqDK26E,aAAd,EAA6B,OAA7B,EAAsC,YAAW;AEinDrD,UxBuDI31K,EsBvqDQm2G,KtBuqDD,CsBvqDL,CtBuqDO,EsBvqDQ,CtBuqDL,AsBvqDM/X,KAAAA,CAAM+X,MAAtB;KADF,CAAA,ItByqDAl9H,IAAI,EAAE,SAAS;EwBtDjB,CFjpDA,MAkCO,CtBsqDLR,SAAS,EAAE;AwBtDf,QxBuDG,AsBtqDKuzE,CtBsqDJ,KsBtqDIA,CAAOmqD,MAAP,KAAkB16H,SAAtB,EAAiC;AEgnDrC,QxBwDG+S,IAAI,CsBvqDM2nH,CtBuqDJ,IAAI,CAAC3nH,AsBvqDR,GAAgB,CtBuqDJ,GsBvqDZ;EEgnDJnR,MxBwDCC,IAAI,CwBxDMD,CAACooB,AxBwDL,IAAI,CAACnoB,EwBxDO,EAAE,AxBwDL;IwBvDd,IAAImoB,AxByDL9G,AsBvqDO23K,KtBuqDF,EwBzDO,AxByDL,IAAI,CwBzDM,AxByDLv0K,AsBvqDLu0K,GAAe75K,EE8mDA,CAAC,AxByDL,CAACwD,CwBzDM,GF9mDHxD,CAAS85K,CtBuqDN,CAAEr2K,IAAK,CAAC,CAAC1R,IAAI,EsBvqDhB,CAAwBw9D,MAAAA,CAAO1uE,IAA/B,CAArB;ME+mDEmoB,ExB0DHtE,AsBxqDKouK,KE8mDK,ExB0DH,CwB1DM,AF9mDZ,CE8mDa,AxB0DL,AsBxqDK+G,CE8mDC,GxB0DF,CAACn1K,OAAO,AsBxqDpB,EAA2B,iBAA3B,CAAA;IE+mDA,IxB0DDc,OAAO,AsBvqDKu0K,EtBuqDH,IAAI,AsBvqDDA,CtBuqDEv0K,AsBvqDKm8F,KAAP,EtBuqDS,AsBvqDKk4E,YAAd,CAAX;IE+mDA,IAAI,AxB0DLn0K,AsBvqDOs0K,CE6mDDvzJ,EAAE,GAAGyhG,AxB0DL,EAAE,CAAE,EwB1DM,CAACi/D,AF7mDVnN,CtBuqDO,CAACt0K,CsBvqDO,KtBuqDD,CwB1DK,AxB0DJlT,CAAC,CwB1DK,CxB0DH,AsBvqDlBwnL,ItBuqDsB,CAACt0K,MAAM,CAAC5S,AsBvqDf,CtBuqDgB,AsBvqDPuF,CtBuqDS,AsBvqDlB,EAAY;IE8mDjC,IAAI,AxB0DL+B,AsBvqDK4rG,CE6mDCxpH,IAAI,CxB0DJ,EwB1DOwsB,AxB0DL,CAAE,IAAI,CAAC5O,AsBvqDZ,CE6mDiB,AF7mDjB,CE6mDkB5d,AF7mDlB,IE6mDsB,AxB0DJ,CAACgW,CAAC,EwB1DM,AxB0DJ,CwB1DK,GxB0DD,CAAC4H,MAAM,CAACtH,CAAC,CAAE;IwBzDvC,IAAI,AxB0DL6H,CwB1DMysL,GF7mDG1tE,EtBuqDH,EAAE,CAAE,CsBvqDP,GtBuqDW,AsBvqDI,CtBuqDH/+G,AsBvqDIgnG,KAAAA,CtBuqDE,AsBvqDI+X,CE6mDC,AxB0DJlnH,CAAC,EwB1DM,AxB0DJ,CwB1DK,CF7mD3B,EtBuqD0B,CAACmI,MAAM,CAAC7H,CAAC,CAAE;IwBzDvC,IAAI,AxB0DLgM,CwB1DMuoL,IF7mDI,GtBuqDF,EAAE,AsBvqDP,ItBuqDW,CAACvoL,GwB1DQ,GAAGkK,ExB0DH,KwB1DU,CAACq+K,iBAAiB,GAAGr+K,OAAO,CAACq+K,iBAAiB,GAAG,IAAI;IACrF,CFjnDA,GEinDI,AxB2DL5rM,CwB3DM6rM,GxB2DF,EAAE,CAAE,IAAI,CAAC1iL,KAAK,EAAE,EwB3DM,ExB2DF,CwB3DKoE,AxB2DJnE,KAAK,CAAE,CwB3DI,CAACyiL,oBAAoB,KAAKtoM,SAAS,GAAGgqB,OAAO,CAACs+K,oBAAoB,GAAG,CAAC;IACzG,IAAI,AxB4DLtiL,AsBxqDK8tK,CE4mDCyU,KxB4DA,EAAE,AsBxqDP,CAAa,GtBwqDF,CAACviL,AsBxqDC,CAAK6yK,IAAlB,CtBwqDkB,CwB5DM,AF5mDAD,GE4mDG5uK,AF5mDH4uK,CAAIoB,ME4mDM,CAACuO,KF5mDnC,CAAA,aE4mDsD,KAAKvoM,SAAS,GAAGgqB,OAAO,CAACu+K,mBAAmB,GAAG,CAAC,CAAC;IACvG,IAAI,AxB4DL9hL,AsBvqDKqtK,CE2mDC3pJ,OF3mDL,CE2mDa,AF3mDA0vJ,GE2mDG7vK,ExB4DH,EAAE,CsBvqDf,EE2mDuB,AF3mDA,CE2mDCmgB,AxB4DL,CAAC1jB,KsBvqDpB,CAAA,CE2mDgC,GAAGuD,IxB4DD,GwB5DQ,CAACmgB,QAAQ,GAAG,IAAI;IAC1D,IAAI,AxB4DL3sC,AsBvqDK+hH,CE2mDCmsC,GxB4DF,AsBvqDH,CE2mDS,AF3mDAmuC,CtBuqDJ,EwB5DO,ExB4DH,CAACr8L,CwB5DM,CF3mDhB,EtBuqDc,AsBvqDK,OAAnB,EAA4Bw9L,YAA5B,CAAA;EE4mDF,MxB4DC14K,AsBtqDK,CAACiuD,MAAAA,CAAOmqD,EtBsqDH,EAAE,EsBtqDX,EtBsqDe,AsBtqDK,CtBsqDJp4G,UAAU;EwB3D5B,MxB6DCyD,GsBvqDQ20G,MtBuqDC,AsBvqDN,EtBuqDQ,CsBvqDM,GtBuqDF,CAAC30G,CsBvqDb,QtBuqDsB;AwB5D5B,QxB6DGD,SAAS,EAAE,IAAI,CAACA,SAAS;AwB5D5B,QxB6DGG,UAAU,EAAE,IAAI,CAACA,UAAU;AwB5D9B,MFzmDMsqD,EtBuqDHzpD,IsBvqDGypD,CtBuqDE,AsBvqDK6oH,EtBuqDH,IAAI,CAACtyK,EsBvqDb,EAAsB,CtBuqDJ;QAEjBF,AsBxqDKmsC,MAAAA,CAAOu4H,QtBwqDG,EAAE,CsBxqDZ,CAAmB/6G,EtBwqDH,CAAC3pD,GsBxqDE2pD,CAAOzrC,MAA1B,CAAJ,EAAuC,EtBwqDH;EwB7DtC0jK,MxB8DC3hL,EsBxqDO4xK,ctBwqDS,CsBxqDb,CtBwqDe,CsBxqDM,CE0mDC+P,CAAA,CxB8DH,CwB9DM,AxB8DL3hL,gBAAgB;IwB7DtC,IxB8DDE,EwB9DQ,axB8DO,EAAE,IAAI,AsBxqDK/F,CtBwqDJ+F,OsBxqDI/F,CAASktK,aAAT,CAAuB,KAAvB,CAArB,gBE0mDkE,IAAI,CAAC1wL,IAAK,EAAC;EACnF,IxB+DA,CAAC,KsBzqDSs2L,QAAJ,CAAa4E,kBAAb,EAAiCR,aAAjC,CAAA;EE2mDN,IxBgEA,IAAK/8L,EsB1qDK24L,ItB0qDC,CAACzxL,GsB1qDN,CtB0qDU,AsB1qDGq2L,CtB0qDD,IAAI,CAAC1xK,QAAS,CAAC,CAAC1lB,EsB1qD5B,EAAiCs3L,EtB0qDC,CsB1qDDA,CAAIqC,CtB0qDA,CAAC,EAAGr2K,MAAM,CAACoC,QAAQ,GAAG,IAAI,AsB1qD/D,CtB0qDgEA,AsB1qDhE,QtB0qDwE;AwB/DhF,MxBiEE,IAAK,CAAEtC,Ms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C;AsBjrDrC8kL,GAAAA,CE6lDI,AF7lDA4C,IE6lDIxxK,IxBqFH,EsBlrDL,CE6lDe,EF7lDE,GE6lDG,KAAK,CAAC,EAAE,CF7lDA;ME8lDtBA,GF7lDG,CtBmrDL,AsBnrDMwtK,GE6lDG,CF7lDX,CtBmrDOluL,CwBtFO,CAAC,CAAC,gBxBsFU;IwBrFxB,KF7lDK8hL,GtBorDJvjK,CsBprDH,CtBorDK,AsBprDO8wK,CtBorDN7kL,CAAC,GAAG+T,EAAE,CAAC/T,CAAC,GAAG,AsBprDjB,CtBorDkB,CsBprDQ,EtBorDL,CAAC,GAAG,CAAC,GsBprDS2nL,GAAT,EAAc;IE+lDtC,IAAI,AF9lDAj5E,CE8lDCxrF,GxBsFJ,KwBtFY,CF9lDb,CAAe2e,CE8lDC,IAAI0rJ,AF9lDpB,CAAqBpgF,GE8lDG,CAAC,CAAC,EF9lD1B,GAA+Bu2E,IAAAA,GAAO,MAAP,GAAgB,EAA/C;GADF,CEgmDE,AFhmDF,IEgmDM,CAACjqK,CxBuFL,KAAKhkB,IwBvFU,GAAG,IAAIwjB,UAAU,CAAC,AxBuFN,CwBvFO;CFlmDtC,GEomDI,IAAI/C,IxBuFH,GwBvFU,CAACgN,AxBuFN1kB,IAAI,CAACgC,GwBvFS,AxBuFN,CAAEhC,CwBvFM,GxBuFF,CAACsC,KAAK,CAAEiT,EAAE,CAAC/T,CAAE,CAAC,GAAG,CAAE,CAAC,KAAK,CAAC,EAAG;AsBprDrD8kL,GAAAA,CAAIsC,EE8lDE,IAAI,CAAClkK,GxBwFLnP,EAAE,CAAC/T,CAAC,CwBxFS,CAACyE,AF9lDpB,CtBsrDajG,EsBtrDU,CE8lDC,CAAC0X,AxBwFR,CAACtU,AsBtrDlB,ItBsrDsB,CAAEmS,CwBxFQ,CAACmP,AxBwFP,CAACljB,CAAE,CAAC,GAAG+T,EwBxFQ,AxBwFN,CwBxFO,AxBwFN/T,CAAC;AsBrrDrC8kL,GAAAA,CE8lDI,AF9lDAqC,QtBurDC,CAAC,MAAM,WsBvrDZ,GAAiC,IAAjC;AACArC,GAAAA,CE+lDI,AF/lDA0B,IE+lDItwK,MxByFFnC,AsBxrDN,CE+lDe,CAAC0F,AxByFR,CAACzZ,AsBxrDQ,CtBwrDP,GAAG+T,EAAE,AsBxrDf,CtBwrDgB/T,CAAC,CwBzFS,EAAE,AxByFRxB,IAAI,CAACsC,KAAK,CAAEiT,EAAE,CAAC/T,CAAE,CAAC;AsBvrDtC8kL,GAAAA,CAAI8C,EE+lDE,IAAI,CAACnuK,CxB0FN,SwB1FgB,CAAChV,EF/lDtB,EE+lD0B,CAACyR,AF/lDA,IAA3B,GE+lDkC,CAACuD,UAAU,CAAC;AF9lD9CqrK,GAAAA,CE+lDI,AF/lDA+C,QtB0rDC,MsB1rDL,GAAqB,oBAArB;AACA/C,EE+lDE,CF/lDFA,CAAIoB,ItB2rDD,QsB3rDH,GAAmB,QAAnB;AACApB,EE+lDE,CF/lDFA,CAAI4B,EtB4rDF,gBsB5rDF,GAAyB,cAAzB;AEgmDA,AF/lDA5B,GAAAA,CAAI6B,EtB6rDF,IAAK,IAAI,CAAC3zK,IsB7rDZ,CtB6rDiB,EAAG,AsB7rDE,WAAtB;AEgmDA,AF/lDA8xK,GAAAA,CAAIgC,ItB8rDD/yK,EAAE,CAAC/T,CAAC,GAAG,CAAC,GAAG+T,EAAE,CAAC/T,AsB9rDjB,CtB8rDkB,EsB9rDO,cAAzB;AACA8kL,GAAAA,CAAIgD,EtB+rDF,QsB/rDF,GAAiB,MAAjB;AAEAhD,EE+lDEqM,CF/lDFrM,CAAIO,EtB+rDF,OAAOtxK,CwBhGKo9K,CAAC8D,AxBgGJ,EsB/rDX,GAAoB,GAApB,EE+lDyB,EAAElqM,MAAM,EAAE;AF9lDnC+5L,GAAAA,CE+lDI,AxBiGH,AsBhsDGwB,OE+lDO0O,IF/lDX,GAAkB,EE+lDE,CAACE,aF/lDrB,IE+lDsC,CAAC,IAAI,CAAChyK,QAAQ,EAAE,IAAI,CAACzJ,UAAU,EAAEw7K,UAAU,EAAElqM,MAAM,CAAC;AF9lD1F+5L,EE+lDE,AxBgGA,CsB/rDFA,CAAIuB,SAAJ,GAAgB,eAAhB;AAEAvB,EE8lDE,CF9lDFA,CtB6rDEn9L,AsB7rDEogM,GtB6rDF,YsB7rDF,GAAsB,UAASxiL,CAAT,EAAY;AE+lDlC,IxB8FEvC,EsB5rDIkK,CtB4rDJ,EAED,KsB9rDKA,CAASgwK,GtB8rDdl6K,IAAiBnb,KAAK,CsB9rDjB,CtB8rDoB,AsB9rDG6B,IAAvB,KAAgC,MAAhC,KACD6b,CAAAA,CAAEyiL,KAAF,KAAY3D,aAAZ,IAA6B9+K,CAAAA,CAAE62K,OAAF,KAAciI,aAD1C,CAAJ,EAC8D;AE8lDhE,MxBiGE,EsB9rDMqD,EtB8rDD7/L,KAAK,GsB9rDR,CAAA,CtB8rDa,AsB9rDb,ItB8rDiB,EAAG;QAErB,IAAI,CAAC4oB,OAAO,EAAG;CsBnsDlB,CEmmDE4gL,MxBiGC,IAAI,CAAC7+K,CwBjGM6+K,CAAC8D,IxBiGD,CAACzhL,KwBjGU,EAAE3oB,IxBiGD,EwBjGO,CxBiGJ,CwBjGM,GxBiGF;AsB9rDjC8vL,GAAAA,CE8lDI,AF9lDApvE,EtBgsDF,EsBhsDF,CAASm6C,EE8lDEovC,IF9lDX,EAAiB,GE8lDG,CAACI,KF9lDrB,EAA4BtQ,GAAAA,CAAIiD,ME8lDM,CAAC,IAAI,CAAC7kK,GF9lD5C,EAAiD,GE8lDG,EAAE,AF9lDtD,CAAA,GE8lD0D,CAACzJ,UAAU,EAAE07K,UAAU,EAAEpqM,MAAM,CAAC;AF5lD1Fk0D,EE6lDE,ExBmGD,EsBhsDDA,CAAO46H,MAAP,CACEiL,GAAAA,CAAIx9L,SADN,EAIE;EE0lDA,AxBkGA,KsBnqDO,SAAA,GAAA,CAASmH,MAAT,EAAiByiD,QAAjB,EAA2B;AEkkDpC,IxBiGEvpD,GAAA,IsBlqDWgd,IAAAA,CACL,IADK,EAELlW,MAFK,EAGLyiD,QAHK,EAIL;AE8jDR,IxBgGEjtC,GAAA,EAED,SAAAA,CsB/pDsB+M,GtB+pDtB,EAAe,AsB/pDOA,CAAM1pB,SAAN,CAAgByH,KAAhB,CAAsBpF,IAAtB,CAA2B0pC,SAA3B,EAAsC,CAAtC;KALV,CtBoqDK,AsBpqDZ;EEqkDJgiK,CF/lDA,iBE+lDkBA,CAACC,WAAW,EAAEvqM,MAAM,EAAE;IACtC,ExBgGFqiB,EwBhGMriB,IFxiDM,EEwiDA,AxBgGJ,CAAE,IwBhGO,EFxiDL,GEwiDU,CAAC,EAAE,EFxiDb,CAAS0D,MAAT,EAAiByiD,QAAjB,EAA2B,oCtBwoDyC,CAAC;MwB/F7EnmD,AxBgGJ,KsBxoDW4Z,CEwiDD,CxBgGH,EwBhGM,AFxiDFA,CACL,CtBuoDK,CAAC6J,CwBhGK++K,CFxiDN,EAEL9+L,CEsiDe,CAAC,CAAC,GxBgGD,AsBxoDX,EAGLyiD,GtBqoDqBr2C,KsBxoDhB,EAIL,OtBooDmC,GAAGN,YAAY,GAAGD,cAAc;IwB/FvE,AxBiGH,CAAC,QsBroDe;IEsiDb,AxB+FF0I,CsB1oDW,CAAP,CtB0oDJ,CwB/FM,CAACyW,AxBiGR,SAAAzW,CwBjGkB,CAACwqL,ExBiGLx5K,GwBjGU,CAACshL,IxBiGH,EAAG,KwBjGW,EAAEvqM,MAAM,CAAC;GFpmD5C,CEqmDE,ExBgGwB,KwBhGjBA,MAAM;EACf,QF9hDU,SAAA,MAAA,CAASu5G,UAAT,EAAqB;EE+hD/B,IxBgGAl3F,GsB7nDS23K,IAAL,CtB6nDI,AsB7nDMkD,CtB6nDJ,UsB7nDN,CAAsB3jF,UAAAA,CAAW4jF,IAAjC,CAAA,0CtB6nD4E,CAAC;AwB/FnF,MxBgGE,GsB7nDSjD,CtB6nDL,CAACz2K,UAAU,CsB7nDX,CAAmBxQ,CtB6nDLgW,KsB7nDd,CAA0B,EtB6nDJ,EsB7nDI,CAAKixK,EtB6nDJ1qL,WsB7nDD,CtB6nDa,AsB7nDMoD,GtB6nDH9C,IsB7nDhB,CAA2BypG,StB6nDG,CsB7nD9B,CAA1B,CtB6nD2D1pG,CsB7nDO,CAAlE,CAAA,StB6nDuE;AwB/F7E,IxBiGC,IsB9nDWi0G,KAAAA,GAAQ,IAAd;EtB8nDJ,SsB7nDWg1E,KAAP,CAAa,YAAW;EE+hD5B,AxB8FA,OwB9FOqR,AxB8FP5jL,GsB5nDY60K,ItB4nDZ,IsB5nDM,CAAA,CAAA,IE8hDkB+O,CAAChyK,QAAQ,EAAEzJ,UAAU,EAAEw7K,UAAU,EAAElqM,MAAM,EAAE;AxB8FnE,EAlToBuS,EwBqNlB,CFhiDE,CAAA,EEgiDEvS,MAAM,GxBrNuB,EwBqNlB,KAAK,CAAC,EAAE;AxBrNU5D,GsBx5CnC,GE8mDI4D,CxBtN+B,CAAAumB,IwBsNzB,GAAG,AxBtNsB,GAAAA,CwBsNlBi8K,IAAI,CAAC,CAAC,AxBtNY;AAsTrCj8K,IwB/FI,GxB+FG,CAACK,GsBvnDK,SAAA,CtBunDQ,GAAG,GsBvnDX,CtBunDe,AsBvnDf,EAAW;AtBwnDxBL,IwB9FI2jL,GxB8FG,CAACpjL,AsBvnDE,IAAA,CAAKmf,CEyhDD,CAAC49J,IAAI,AFzhDb,CEyhDc1rK,CFzhDG,EtBunDA,GAAGjuB,EwB9FE,EAAElK,KxB8FK,CwB9FC,CAAC;AxB+FrCumB,IwB9FImI,GxB8FG,CAACrH,IsBvnDM,EEyhDA,CAAC0I,CFzhDGtvB,KAAJ,CACJ,EEwhDc,CAAC+pM,CxB8FC,GAAG,CAAC,IwB9FI,CAAC,0CFxhDzB,GACA,uDAFI,CAAN;AtBunDuB,IwB7F3BA,AxB+FEthL,OAAO,EwB/FA,CAACu5K,KAAK,CAACziM,MAAM,EAAEA,MAAM,CAAC,ExB+FtBmpB,iBAAA;EAEZ,EwBhGG,IFrhDM,GEqhDCnpB,AxBgGVkpB,CsBrnDS,CAAKqxK,IEqhDE,ExBgGH5lL,CAAC,EsBrnDT,CtBqnDY,CAAC,AsBrnDO,EtBqnDLM,CAAC,GAAG,CAAC,EAAEmU,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAG;EwB/FzC,ExB+FyCpkB,eAAA,MsBpnDhBi4L,CtBonDgBh0K,OAAA,GsBpnDnC,CAA+B,IAAA,CAAKy6F,UAApC,CAAA;EEshDN,ExBgGAz6F,OAAO,CAAC3sB,SAAS,CAAC+sB,SAAS,GAAG,IAAI;AwB/FpC,IxBiGE,IAAI,AsBrnDMw6F,CtBqnDLnvG,CAAC,GAAGA,AsBrnDCmvG,CtBqnDA,EsBrnDQ,IAAd;AEqhDN,IxBiGE,IAAI,CAAC7uG,CAAC,CsBrnDKs3K,EtBqnDFt3K,CAAC,CsBrnDN,CAAY,IAAA,CAAKglL,SAAjB,EAA4B,UAASmD,SAAT,EAAoB;ItBsnDpD,IAAI,CAACh0K,CAAC,EsBrnDMi0K,CtBqnDHj0K,CAAC,UsBrnDJ,CAAmBg0K,SAAnB,CAAA;EEshDN,ExBgGA,CsBvnDI,CAAA,EtBunDA,CwBhGGiN,AxBgGFhhL,CAAC,GAAGA,CAAC,YwBhGcghL,CAAClyK,QAAQ,EAAEzJ,UAAU,EAAE07K,UAAU,EAAEpqM,MAAM,EAAE;ExBkGpE,EwBjGG,IAAIA,AFphDEqoK,MEohDI,AFphDR,CAAWxN,IEohDE,EFphDb,EAAmB,CEohDD,CAAC,EAAE,KFphDrB,EAA8Bk/B,GAAAA,CAAIiD,eAAlC,EAAmD,KAAnD,CAAA;EtBqnDJv3L,IwBhGIzF,MAAM,ExBgGV,CwBhGa,AxBgGbkpB,IwBhGiBs5K,CFnhDG,EtBmnDpB,CwBhGqB,CAAC,AFnhDlB,CEmhDmB,AFnhDnB;GA1GJ,CE8nDE,AxB+FF5lM,GAAA;IwB7FE8xB,AxB6FFxV,GAAA,EAED,IsB1mDc,CE2gDD,CAACupL,GxB+FdvpL,EwB/FmB,CAACkxL,CxB+FpB,AsB1mDc,EtB0mDF,OwB/FkB,AF3gDhB,CAASpnM,CE2gDShD,GF3gDlB,EAAe,CE2gDS,CAAC;IACpCA,ExBgGF,EsBzmDQ,EEygDA,CAAC4jM,CFzgDD,CtBymDD,AsBzmDM3J,EEygDA,CAAC9hK,CxBgGH,CAAC/O,CAAC,GsBzmDL,CAAepmB,CEygDD,EAAEhD,CFzgDhB,CAAA,IEygDsB,CAAC,AFzgDEmB,SAA7B,EAAwC;IE0gD1C,AxBiGH,CAAC,MwBjGSnB,CFzgDG,IAAIS,CEygDD,IFzgDH,CAAU,8CAAA,GACd,SADc,GACFuC,IADE,GACK,GADf,CAAN;EE0gDN,ExBgGAiV,GAAA,EAED,SAAAA,IAAWnb,KAAK,EAAG;EwBjGlB,IxBmGA,EsB1mDUwgM,EtB0mDN,CAACl0K,CAAC,GAAGtsB,KAAK,AsB1mDJwgM,GAAe;AEwgD3B,IxBoGC,EsB5mD4Bt6L,IAAAA,EAAMA,IAAR;AEygD3B,ExBmGE,IsB5mDuCijC,MAAAA,EAAQ;ItB4mD/CrpC,AsB5mDyB,CAArB,EtB4mDJ;EwBhGA,ExBgGAsc,GAAA,EwBhGOoxL,AxBkGR,QsBzmDkB/P,CtBymDlBrhL,IAAA,EAAa,EsBzmDR,CEugDqBoxL,CAAC57K,CFvgDG,IAAA,CAAK6rK,IEugDE,EAAEgQ,GFvgDlC,QEugD6C,EAAEvqM,MAAM,EAAE;IACzD,ExBmGF,EwBnGMA,AFrgDE,IAAA,CtBwmDD,AsBxmDMgrJ,CEqgDD,GxBmGD,AsBxmDH,CtBwmDI3hI,CwBnGK,AxBm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,EwBvGM,CFl/CT,CtBylDO,AsBzlDM,CEk/CD,IAAI5qK,OFl/CQ,GEk/CE,CAAC,CAAC;IxByGjC,QsB1lDaktK,QAAN,CAAA,CAAA;AEm/CR,ExBuGE,GsB3lDI,CAAA;AEq/CN,GFrqDE,CtB2wDAx+L,GAAA;AwBrGF,IxBqGEE,IsBnlDQ,CtBmlDR,EAED,MsBrlDS,GtBqlDTuc,CsBrlDS,CAAA,EAAW,CtBqlDd1E,CAAC,EAAG;AwBtGX,MxBwGE,GsBtlDSknH,CtBslDL,CAAClnH,CAAC,GAAGA,AsBtlDL,CtBslDM,EsBtlDQ,KAAd;AE++CN,GFxqDE,GtBixDA,OAAO,IAAI;AwBxGb,IxB0GC,KsBplDU,SAAA,KAAA,CAAA,EAAW;AE2+CtB,ExByGE,OsBnlDSknH,MAAL,GAAc,IAAd;AE2+CN,GF3qDE,CtBmxDAj/H,GAAA;AwBvGF,IxBuGEE,IsB7kDQ,CtB6kDR,EAED,MsB/kDS,GtB+kDTwc,CsB/kDS,CAAA,EAAW,CtB+kDdrE,CAAC,EAAG;AwBxGX,MxB0GE,GsBhlDS0uG,CtBglDL,CAAC1uG,CAAC,GAAGA,CAAC,GsBhlDN,CAAgB6hC,KAAhB,CAAsBsrE,OAAtB,GAAgC,MAAhC;AEu+CN,GF9qDE,GtByxDA,OAAO,IAAI;AwB1Gb,IxB4GC,IsB9kDS,SAAA,IAAA,CAAA,EAAW;AEm+CrB,ExB2GE,OsB7kDSuB,UAAL,CAAgB7sE,KAAhB,CAAsBsrE,OAAtB,GAAgC,EAAhC;AEm+CN,GFjrDE,CtB2xDAxlH,GAAA;AwBzGF,IxByGEE,KAAA,EAED,CsB3kDa,QtB2kDbysB,CsB3kDa,ItB2kDPH,CAAC,EAAG,CsB3kDG,CAAA,EAAW;AEi+CzB,MxB4GE,EsB3kDUgiJ,EtB2kDN,CAAChiJ,CAAC,AsB3kDIgiJ,GtB2kDDhiJ,AsB3kDQ,CtB2kDP,GsB3kDO,CAAKooJ,OAAL,CAAA,CAAb;AEg+CN,MxB6GE,EsB5kDQpG,IAAAA,CtB4kDD,AsB5kDMuvB,ItB4kDF,MsB5kDP,EAAqB;AEg+C3B,IxB8GC,EwB9GKgQ,IF/9CQznK,GAAAA,GAAM4sJ,GAAAA,CAAI6N,EE+9CF,OF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,IAAI,CAACA,QAAQ;IAC9B,AxBsGFloD,KAAA,CwBtGQo9I,CxBwGT,AsBxiDYuzC,IEg8CE,GAAG,CFh8CZ,CtBwiDL5zK,EwBxGqB,CAACsxL,OxBwGX/0L,CAAC,EAAG,CwBxGkB;GF/vDhC,CEgwDE8jI,ExByGF,GwBzGO,CAACz3I,AxByGJ,CAACkS,CAAC,IwBzGQ,AxByGJyB,CAAC,EwBzGM,CAAC;IAChB,ExByGF,EsBxiDQ,EE+7CAi1L,AxByGJ,CAACp2L,CAAC,EwBzGM,ExByGFmB,CwBzGK,AxByGJ,AsBxiDH,IE+7CWosL,AF/7CX,CAAA,EAAW,CE+7CI,CAAC,CAAC;IAEvB,ExBwGF,EsBxiDQ,CEg8CD,AFh8CE,CtBwiDL,CAACp5K,CAAC,CwBxGK1mB,AFh8CF,CEg8CG,AFh8CEsoJ,EtBwiDJ50I,CwBxGK,AxBwGJ,CwBxGK,AFh8CP,CAAU6nL,CEg8CDv7L,CAAC,KAAKitI,GFh8CpB,EEg8CyB,AFh8CE,CEg8CDltI,MAAM,EAAEC,CAAC,EAAE,EAAE;MACvC,AxBwGJ,IAAI,CAAC2mB,AsBxiDM2hI,CEg8CD1mG,AxBwGJ,GsBxiDA,CEg8CQ,AxBwGJluC,AsBxiDM6nL,CtBwiDL,EwBxGMtuD,KAAK,CAACjtI,CAAC,AFh8ClB,CEg8CmB,EFh8CI,CAAA,CAAvB;MEi8CF,AxByGJ,MwBzGU4oM,CxByGH,IAAI,MwBzGU,GAAGhnJ,IAAI,CAAC7hD,MAAM;IxB2GpC,EwBzGK,GFh8CKuoJ,EEg8CA,EFh8CL,CAAUizC,CEg8CD9jK,CAAC,GAAG,CAAC,EAAEA,CAAC,CFh8CjB,CAAqB,GEg8CCmxK,CFh8CD,CAAK9Q,MAA1B,CAAA,EEg8CiC,CFh8CG0D,CEg8CD/jK,CAAC,EAAE,EAAE,UFh8CJ+jK,CAAiB,IAAjB,CAApC;EtByiDJ,MwBxGM,MAAM3jG,CAAC,GAAG,CAACpgE,CAAC,GAAG,AFh8CE,CEg8CD,GFh8ClB,CEg8CsBmxK,CFh8CG,KAAzB,CAAA,IEg8CiC;IxBwGrC1uM,GAAA,CwBvGMooD,CFh8CGy3I,OEg8CK,CAACn4I,IAAI,CAACnqB,CAAC,CAAC,CAAC,CAAC0pK,IAAI,CAAC7+I,MFh8CzB,CAAA,CEg8CiC,AFh8CjC,CEg8CkCV,IAAI,CAACi2C,CAAC,CAAC,CAAC,EAAE8wG,IAAI,CAAC;GFzwDrD,CtBg3DAvuM,IwBtGMuuM,CxBsGN,EAED,CwBxGW,CAACzyL,OxBwGZkB,EwBxGqB,CAAC,CAAC,OxBwGX3C,CAAC,EAAEC,CAAC,EAAG;MAElB,EwBzGM,ExByGF,AsBxiDM,CtBwiDLzC,CwBzGK42L,AxByGJ,GAAGp0L,CAAC,CwBzGK,AxByGJxC,CAAC,CsBxiDF,CE+7CQ,CxByGHyC,CAAC,CAACzC,CAAC,CwBzGK,AF/7Cb,CAASwpL,UAAT,EAAqB;MtByiD/B,EwBxGM,AFh8CE,CAAC,CtBwiDL,CAAClpL,CAAC,CwBxGK,AFh8CF,CAAK+1I,CtBwiDL7zI,CAAC,CwBxGKqsB,AxBwGJvuB,CwBxGK,AxBwGJ,AsBxiDH,CAAUgpL,EEg8CA,AxBwGJ7mL,CwBxGK,AxBwGJ,CAACnC,CwBxGKuuB,AxBwGJ,CwBxGK,IFh8CnB,CEg8CwB02G,CFh8CG,IEg8CE,CAACz3I,MAAM,EAAE+gC,CAAC,EAAE,EAAE;MxByG/C,IwBxGQ,AxBwGJ,CAACpa,AsBviDM4hI,CtBuiDL,EwBxGM9Q,CxBwGH/iI,AsBviDH,CtBuiDI,AsBviDM8mL,CtBuiDL70K,CAAC,CwBxGK,CAACoa,CAAC,AxBwGJpsB,CwBxGK,AxBwGJ,CwBxGKstL,AxBwGJt7K,CAAC,EsBviDZ,GAAuB,CAAA,CAAvB,IE+7C2B,CAACiiL,IAAI,CAAC,IAAInxD,KAAK,CAAC12G,CAAC,CAAC,CAACkhK,YAAY,CAAC2G,IAAI,CAAC,EAAE;MxByGxE,IAAI,CAAChiL,AsBviDM2hI,CE+7CDugD,AxBwGJ,GAAGp0L,AsBviDH,CtBuiDI,AsBviDM8mL,CE+7CD,AxBwGJ50K,CAAC,EwBxGM,CxBwGHjS,CAAC,CAACiS,CwBxGK,AxBwGJ,EsBviDZ,CAAqBmwK,2BAArB,CAAA,GAAoD0E,gBAAAA,CAAiB,IAAjB,EAAuB,IAAvB,CAApD;MtByiDN,MwBzGU,CxByGH,IAAI;IAE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EigB,CAAC,CF37CN,EE27CS,GxB0GfhjB,CwB1GmB,AxB0GlB,CwB1GmBw4H,CxB0GjBv4H,CAAC,EAAG,CwB1GkB,CAAC1U,AF37CpB,CE27CqB,AF37CrB,CE27CsB,CAACD,AF37CZ,ME27CkB,EAAE03B,CAAC,EAAE,EAAE;MxB4GrD,IwB3GQjiB,AxB2GJ,CAACvD,AsBtiDM43K,CtBsiDL,GAAGp1K,AsBtiDL,CtBsiDM,AsBtiDM,CE27CD,AxB2GJxC,CwB3GKwD,AxB2GJ,EsBtiDI,CtBsiDDf,AsBtiDM8iL,CE27CD,AxB2GJ,CwB3GM,AxB2GLvlL,CAAC,UsBtiDd,EE27C8B,AF37CE,IE27CE,CAACg7H,KAAK,AF37CCp2B,CE27CA72G,CAAC,CAAC,CAACy3B,CAAC,CAAE,IF37Cf,EAAqB,ME27CK,IAAI,CAAC6qB,QAAQ,CAAC,IAAI,CAAC2qF,KAAK,CAACjtI,CAAC,CAAC,CAACy3B,CAAC,CAAC,CAAC,CAACqX,QAAQ,CAAC,CAAE,GAAE,CAAC;MxB4G5G,EwB3GM,ExB2GF,CAACv8B,CAAC,GAAGkC,CAAC,CAAClC,AsBtiDMu6K,CtBsiDL,GAAGp4K,CAAC,CAACnC,CAAC,MsBtiDZ,CAAA,CAAA;KADF,CE67CA,AxB2GJ,AsBxiDI,ItBwiDA,CAACmU,CAAC,GAAGjS,CAAC,CAACiS,CAAC,GAAGhS,CAAC,CAACgS,CAAC;IwB1GhB,ExB2GF,IAAI,CAACC,AsBtiDMkjK,CtBsiDL,GAAGp1K,AsBtiDL,CtBsiDM,AsBtiDM,CtBsiDLkS,CAAC,EsBtiDI,CtBsiDDjS,AsBtiDM6iL,CtBsiDL,CAAC5wK,CAAC,MsBtiDd,EAA4B,UAASo0K,MAAT,EAAiB;EE47CjD,IxB4GA,OAAO,AsBviDMjO,ItBuiDF,SsBviDL,CAAA,CAAA;EE47CN,ExB6GD,CsB1iDK,CAAA;AE87CN,ExB4GE;AwB3GF,CFh0DA,CAAA,EtB26DE5yL,GAAA;AsB1hDF,ItB0hDEE,KAAA,AsB1hDOo/L,EtB4hDR,IsB5hDD,CAAgBU,GAAhB,CtB4hDCziL,CsB5hDoBikL,MAArB,EtB4hDWzkL,AsB5hDkB0kL,CtB4hDjB,EAAG,KsB5hDf,EAAuC;EEk7CrCmN,IxB4GA,AsB7hDMhO,EAAAA,EtB6hDF,CAAC7oL,AsB7hDMwN,CtB6hDL,GwB5GOqpL,CAAC9oM,AxB4GJiX,CwB5GK,AxB4GJ,CAAChF,CwB5GKtP,AxB4GJ,AsB7hDF8c,CAASktK,KEi7CG,EAAE,MFj7Cd,CAAuB,IAAvB,CAAX;IEk7CE,ExB4GF,AsB7hDI+O,IEi7CIv+K,AxB4GJ,CwB5GK,AxB4GJ5K,CAAC,AsB7hDN,EEi7CY,AFj7CA,EtB6hDF0E,CAAC,CwB5GK,AxB4GJ1E,CwB5GK06H,AxB4GJ,KwB5GS,CAACjtI,CAAC,CAAC;IACvB,ExB4GF,CsB7hDK+vL,GEi7CG1kJ,AxB4GJ,CAAC3kB,CwB5GK,AxB4GJ,GwB5GO,CxB4GHzP,CAAC,CAACyP,AsB7hDV,CEi7Ce,AxB4GJ,AsB7hDIg1K,CEi7CCp5I,KFj7ChB,CAAA,EEi7CwB,CAACnlC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,ExB4GF,IwB5GQiuB,AxB4GJ,CAACzkB,CwB5GK,AxB4GJ,GwB5GO,CxB4GH1P,CAAC,CAAC0P,CwB5GK,AxB4GJ,CwB5GK27B,QAAQ,CAACnlC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,ExB6GF,AsB7hDIw+K,IEg7CI1wJ,EAAE,CxB6GH,CsB7hDP,CEg7Ca,CFh7CC,CtB6hDH,EwB7GM,CAACqX,QAAQ,CAACnlC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B8qL,AxB8GH,IsB9hDO3Q,IAAJ,CAAS6B,OEg7CO,CAAC4P,IFh7CjB,CAAsBjO,EAAtB,EAA0Ba,IEg7CI,CAACtwJ,EAAE,CFh7CjC,CEg7CmCD,AFh7CnC,EEg7CqC,EAAEH,EAAE,EAAEtoC,MAAM,CAAC;EACpD,AxB6GA,CsB/hDA,MAEO;EEi7CP,ExB4GAzI,GAAA,CsB5hDMo9L,IAAJ,CAASvH,WAAT,CAAqB+K,EAArB,CAAA;AEi7CJ,IxB2GE1gM,KAAA,EAED,SAAAsd,eAAgBhB,MAAM,EAAG;AwB5G1B,MxB8GE,AsB9hDIgiL,ItB8hDA,CAACzmL,CAAC,EsB9hDN,CAAA,CtB8hDUyE,AsB9hDV,MtB8hDgB;MAChB,GsB9hDOokL,CtB8hDH,CAACvoL,AsB9hDL,CtB8hDM,IAAImE,MAAM;EwB5GhB,IxB6GA,GwB7GOqyL,CxB6GH,CAACriL,CAAC,IAAIhQ,MwB7GUqyL,AxB6GJ,CwB7GK19J,EAAE,EAAED,EAAE,EAAEH,EAAE,EAAEtoC,MAAM,EAAE;AF/6C3C,IEg7CI,ExB6GF,GsB7hDOi5L,CEg7CCn9I,AxB6GJ,CAAC93B,CwB7GK,AxB6GJ,GwB7GO,CxB6GHjQ,GwB7GOopL,GxB6GD,CwB7GK,CAAC,AFh7CxB,CEg7CyB,AFh7CA5F,GAAzB,EAA8B;IEi7C1B,ExB8GF,AsB9hDIv0B,IEg7CIjnH,EAAE,AFh7CV,CtB8hDO,AsB9hDIy5G,EEg7CE,ExB8GF,EwB9GM2nC,AFh7CjB,EAAmB,EEg7CE,CAAC,CAAC,IFh7CvB,EAA6B5F,GAAAA,CAAIN,eAAjC,CAAA;IEi7CExuJ,AxB+GH,EwB/GK,AF/6CA8uJ,CE+6CCiH,EF/6CDjH,CAAIH,CE+6CC,CAAC1uJ,EAAE,EAAEqT,EAAE,CAAC,mBF/6CjB,EAAsC;EtB8hDtC,EwB9GEzT,EAAE,CAACk2J,CF/6CCx7B,GE+6CG,CAACv6H,EAAE,AF/6CV,CAAW+sH,CE+6CC15G,EAAE,CAAC,EF/6Cf,EAAmB,QAAnB,EAA6By7I,GAAAA,CAAIH,4BAAjC,CAAA;IEg7CAt7I,AxB6GFvkD,EwB7GI,CAACqe,AxB6GL,KwB7GU,CAACmmC,EAAE,EAAE/7C,MAAM,CAAC;IAEpB,AxB2GFvI,IwB3GM,CAACuI,AxB2GP,EAED,IwB7Gc,CAAC++L,IxB6Gf36K,EwB7GqB,CAAC,CAAC,EAAE,OxB6GXhV,CAAC,EAAG;AsB3hDnB,ME+6CMpP,AxB8GJ,GsB7hDOk5L,CtB6hDD5pL,CAAC,CwB9GG,CAACiE,CxB8GD,IAAI,CAACjE,CAAC,EwB9GI,CAAC,CAAC,GF/6CxB,CAA4BioL,GAA5B,EAAiC4B,QAAjC,EAA2C;IEg7CvC,EF/6CI1L,EtB4hDY79K,CAAC,AsB5hDb69K,GtB4hDgB,AsB5hDV8J,GAAAA,CtB4hDc,AsB5hDV6B,CtB4hDWxpL,CAAC,asB5hDhB,CAAoB2nL,GAAAA,CAAI6B,eAAJ,CAAoBxL,aAAxC,CAAZ;EEg7CA,IF96CIuL,EtB0hD0Bp1K,CAAC,GAAG,EsB1hDlC,EtB0hDsC,AsB1hDxB,CtB0hDyBA,CAAC;EwB3GxC,MxB2G0CC,AsBzhDpC0pK,CtByhDqC,GAAG,IAAI,CAAC1pK,AsBzhDjD,CtByhDkD,EsBzhDlCypK,GAAAA,CAAIh2L,KAAJ,GAAY,GAA5B;AE+6CJ,GFh7CE,GtB2hDA,GsBzhDO,CtByhDD0d,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;AwB1GtB,MxB4GE,EsB1hDMs4K,EtB0hDF,CAACp+K,CAAC,GAAG6F,CAAC,CAAE,AsB1hDV,CtB0hDW,CAAE,CsB1hDGs4K,EtB0hDAn+K,CAAC,AsB1hDDm+K,CAAIh2L,EtB0hDA0d,CAAC,CAAE,CAAC,AsB1hDxB,CtB0hD0B,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAG4O,CAAC,GAAG5O,CAAC,CAAE,EAAE,CAAE,GAAG6O,CAAC;AwB3G7D,MxB4GE,IAAI,CAACpU,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAG4O,CAAC,GAAG5O,CAAC,CAAE,EAAE,CAAE,GAAG6O,CAAC;MAC3D,IAAI,CAACD,CAAC,GAAG5O,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE,GAAG4O,CAAC,GAAG5O,CAAC,CAAE,EAAE,CAAE,GAAG6O,CAAC;AsBxhD9D,EE86CEqiL,IxB2GA,GsBzhDOhN,CtByhDH,CAACr1K,CAAC,GAAG7O,CAAC,CwB3GKkxL,AxB2GH,CwB3GIC,AxB2GH,CAAE,GwB3GK,AxB2GFh3L,CAAC,CwB3GGi3L,ExB2GApxL,AsBzhDxB,CtByhDyB,AsBzhDEoiL,CtByhDA,CwB3GE,AxB2GD,CAAE,AsBzhD9B,CE86C+BiP,CF96CCrO,CtByhDCvoL,CAAC,AsBzhDlC,EE86CoC,AF96CAskG,CtByhDC/+F,CwB3GCsxL,AxB2GA,CAAE,EAAE,CwB3GA,AxB2GE,EwB3GAC,CxB2GG3iL,CAAC,AsBzhDhD,EAAgD,CE86CC,AxB2GE5O,CAAC,CwB3GDwxL,AxB2GG,EAAE,CAAE,GAAG3iL,CAAC,SwB3GK,EAAE4iL,OAAO,EAAEC,OAAO,EAAElsM,MAAM,EAAE;IAC3F,ExB4GF,IwB5GQmsM,GxB4GD,AsB1hDIhP,ItB0hDA,AsB1hDX,GAAkBK,CE86CC,CF96CnB,EE86CsB,IAAIgF,IAAI,CAAC,CAAC;IAC9B,AxB6GH,IwB7GO4J,KF96CKzN,KAAX,EE86CkB,CF96CC/B,EE86CE,CAAC,AF96CtB,CE86CuB;ExB6GvB,EwB5GE,IAAIyP,CF76CCvd,GE66CG,GAAG,AF76Cb,CE66Cc3oL,AF76CAozG,ME66CM,CAAC0iB,GF76CrB,EAA6D,IE66C/B;IAE5B,AxB0GFr/H,GAAA,EwB1GO,IAAI0nD,AF16CA,IE06CI,GAAG,CAAC,CF16CR,CE06CUA,IAAI,EF16Cd,CE06CiBunJ,AF16CR1gL,KE06Ca,CAACwkH,EF16CvB,EAAkB,CE06CU,CAACltI,MAAM,EAAE6hD,IAAI,EAAE,EAAE;IxB0GxDxnD,EwBzGIqvM,GxByGJ,CsBnhDQ7jK,CtBqhDT,MwB3GgB,CAAC5uB,CF16CR4uB,CtBqhDThuB,AsBrhDmB7X,EE06CE,CAACopM,GF16Cb,EE06CkB,CAACjB,AF16CA,CAAvB,EAA0B,CtBqhDjBxxL,MAAM,CwB3GmB,CAACkrC,AxB2GjB,IwB3GqB,CAAC,CAAC;MACzCynJ,AxB4GJ,KwB5GS,CAACtJ,AF16CE7D,CtBshDL,IwB5GQ,AxB4GJ,CwB5GKuN,AxB4GJ/xL,KsBthDAwkL,GAAcrlF,GE06CC,EAAE4yF,CxB4GH,CAAE,CAAC,EsBthDH5yF,CtBshDMngG,AsBthDK+jL,IAAX,CE06Cc,AF16CE0B,CE06CD,AxB4GF,CAAC,gBsBthDlC;ItBwhDP,EwB7GK,MAAMj/K,CAAC,GAAGusL,GF16CG5jK,MAAX,CAAA,CE06CmB,AF16CnB,CE06CoBvtB,GAAG,CAACgxL,gBAAgB,CAAC;ExB6G/C,IwB3GI,IAAIpsL,CAAC,GAAGysL,CF16CCzyL,GE06CG,CF16CHA,CE06CK,AFz6CVgjL,GADK,EAELrjF,UAAAA,CAAW71G,MAFN,EAGL61G,UAAAA,CAAWpzD,QAHN,EAIL;ItBihDRvpD,GAAA,CwB1GMyvM,IAAI,GAAGzsL,CAAC,EFt6CIg/K,WADV;ItBihDR9hM,IwBzGMsvM,CxByGN,EAED,SwB3GmB,AxB2GnB1iL,GwB3GsB46B,AFt6CE,CAAC4P,GEs6CC,GFt6CDA,CAAO13C,OAAP,CAAe8rB,QtBihDZpxB,CAAC,AsBjhDJ,CAAD,CtBihDQ;MwB1G3B,AxB4GJ,GsBzhDa,CAAP;IE86CJ;IAEA,ExB2GF,IwB3GQo1L,AFr6CAp4I,MAAAA,CAAOhuC,KEq6CK,EFr6CZ,CEq6Ce,AFr6CAiF,EEq6CE,MFr6CjB,CAAA,IAA2B+oC,MAAAA,CAAOs4H,QAAP,CAAgBrhK,QAAhB,CAA/B,EAAyD;IEu6C3D,KAAK,GFt6CKyzK,CEs6CDl8L,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmpM,AFt6CVjN,GAAcrlF,EEs6CC,CAACo2B,KAAK,CAACy8D,CFt6CR7yF,CAAW4jF,IAAX,CAAgB0B,KEs6CI,CAAC,CAACp8L,MAAM,EAAEC,CAAC,EAAE,AFt6CrD,EEs6CuD;MACzD,AxB0GJ,IAAI,CAAC2mB,CwB1GKjS,AxB0GJ,CwB1GK,ExB0GF,CwB1GKy0L,AxB0GJ,GAAGp4L,AsBhhDI80B,EEs6CE,CAACyc,CxB0GH,CAACtpC,CsBhhDZ,CAAA,CAAA,CtBghDgB,CAAExE,CwB1GI,AxB0GH,CwB1GI20L,AxB0GHxiL,CAAE,CAAC,GwB1GK,CAACsmH,KAAK,CAACy8D,YAAY,CAAC,CAAC1pM,CAAC,CAAC,CAAC;MACtD,AxB2GJ,IAAM0T,CAAC,CwB3GGm2L,ExB2GA94L,CsBhhDGmG,GEq6CG,AxB2GF,CAACuB,AsBhhDFvB,CACLgjL,CEo6CW,ExB2GA,AsBhhDN,CtBghDQ,CwB3GE4F,AxB2GD,AsB9gDdjpF,GtB8gDiBriG,CwB3GE,AxB2GD,CwB3GE,AxB2GDmS,CwB3GE,AxB2GD,GAAGnS,CAAC,AsB9gDxBqiG,CtB8gDyBlwF,AsB9gDd3lB,CtB8gDgB,CAAC,IsBhhDvB,EAGL61G,UAAAA,CAAWpzD,QAHN,EAIL;MEk6CJomJ,AxB4GJ,IAAKn2L,CAAC,CwB5GI,CAACsD,CxB4GF,GwB5GM,CAACtC,AFj6CEwnL,CEi6CD,CAAC,AxB4GH,EAAG,QsB9gDV;MEm6CJmN,ExB6GH,GwB7GQ,CAACtJ,AxB6GL,CAAC9tL,CAAC,GwB7GQ,AxB6GL,CwB7GM43L,AxB6GL,KsB9gDY,CEi6CD,AFj6CEphL,EEi6CAohL,MAAM,AFj6CP,CEi6CQ;MAC3BT,ExB6GH,CsBrhDY,CEw6CL,AFx6CF,CEw6CGlI,CxB6GJ,CAAC3uL,CAAC,CwB7GM,CAACs3L,CxB6GJ,CAAC,IwB7GS,EAAEA,MAAM,CAAC;MACzBD,ExB6GH,IAAI,CAACljL,CAAC,GAAG,CwB7GM,AxB6GL,CwB7GMlnB,IAAI,CAACqqM,MAAM,CAAC;IAC3B,CFn8C2D,CtBijD7D,CAAC,MAAM;IwB5GL,IAAIH,AxB8GL,EsBzgDO,EtBygDH,CAACz3L,CAAC,GAAGuC,CAAC,CAACvC,AsBzgDJ,CE25CU,AxB8GL,GAAGyB,AsBzgDR,CE25Cc,AxB8GL,AsBzgDApT,CE25CM,EAAE,EF35CjB,EAAe;ME45CnB,ExB8GH,EwB9GO,CAACwpM,CxB8GJ,CAACv3L,CAAC,GAAGiC,AsBzgDKimL,CtBygDJ,CAACloL,CAAC,CsBzgDT,CAAgB6pL,CtBygDJ1oL,CAAC,MwB9GW,CAAC41L,QF35CzB,CAAkClN,OE25CO,EAAE6M,IAAI,EAAEC,EF35CjD,CAAoD7Y,EE25CE,EAAEuZ,KF35CxD,GAAgEtpM,IE25CI,CF35CpE,CE25CsEipM,OAAO,EAAEC,OAAO,EAAElsM,MAAM,CAAC;IACjG,IxB8GD,IAAI,CAACopB,AsBzgDKmwF,CtBygDJ,GAAGriG,CAAC,CAACkS,CAAC,GAAGhT,AsBzgDZ,CtBygDa;EwB7GjB,GFx8C6D,CtBujD7D;EwB9GA,IxBgHA,MsBtgDU,CtBsgDH,IAAI,IsBtgDD,MAAA,CAAA,EAAW;AEu5CvB,IxBiHC,asBvgDgBuoL,KAAX,CAAiBI,MAAjB,CAAwBxlF,UAAxB,CAAA;AEu5CN,ExBgHE,WsBtgDWA,UAAP;AEu5CN,IxB+GE38G,CsB3jD6D,EtB2jD7D;AwB9GF,IxB8GEE,KAAA,EAED,CsBjgDW,QtBigDX6sB,CsBjgDW,MAAA,CAAA,EAAW,qBtBigDUlV,CAAC,EAAG;MAEnC,WsBlgDekqL,KAAX,CAAiBp2J,MAAjB,CAAwBgxE,UAAxB,CAAA;EEm5CJkzF,WFl5CWlzF,OEk5COkzF,CAACZ,EFl5Cf,GEk5CoB,EAAEF,IAAI,EAAEC,KAAK,EAAEE,IAAI,EAAEC,KAAK,EAAE1mM,MAAM,EAAEqnM,SAAS,EAAEC,SAAS,EAAE;IAChF,ExBgHF,IwBhHQC,cAAc,GAAG,IAAIpK,IAAI,CAAC,CAAC;GFj9CnC,CEk9CE,AFl9CF,MEk9CQqK,YAAY,GAAG,IAAIrK,IAAI,CAAC,CAAC;IAC/B,ExBgHF,AsBhgDIjpF,IEg5CIuzF,AxBgHJzxL,KAAK,CwBhHK,AFh5CVk+F,CtBggDO5kG,CAAC,CwBhHK,CxBgHHM,CAAC,EwBhHMutL,AxBgHJp5K,CAAC,CAAC,CAAC,CwBhHK,CAAC,AFh5CA0rK,CEg5CC,qBFh5C3B,EAAkD;IEi5ChD,ExBgHF,EsBhgDQ19J,EEg5CA21K,AxBgHFnjL,CsBhgDEwN,GAAM,GtBggDD,CsBhgDKm9J,EEg5CA,AxBgHF,GwBhHK,CxBgHD,GwBhHKiO,IAAI,CAAC,CAAC,IFh5CjB,CAAwBjpF,UAAAA,CAAW71G,MAAnC,EAA2C61G,UAAAA,CAAWpzD,QAAtD,EACV;IEg5CF,EFh5CI9xC,EtB+/CiB,CsB//CjBA,CEg5CE24L,CFh5CGzzF,SEg5CO,CFh5CPA,CAAWm6E,CEg5CD,IAAI8O,AFh5CrB,IEg5CyB,CAAC,CAAC;IAC7B,EFj5C2BluL,EtBggD5BuV,CsBhgD4BvV,CEi5CrB24L,CFj5C0B1zF,IEi5CrB,CxB+GJ,EwB/GO,CxB+GJ,EsBhgDsBA,CEi5CdipF,AxB+GL,AsBhgD8B7O,IEi5CrB,CAAC,AFj5CrB,CEi5CsB;IACxB,EFl5CkD9jK,EEk5C9Cq9K,AxB8GY,EsBhgDkCr9K,EEk5C1C,AFl5CgD0pF,GEk5C7CpzG,MAAM,CAAC81H,AFl5CsC1iB,CAAWq6E,QEk5CxC;IAC3B,AFn5CE,CADU,CAAZ,IEo5CMuZ,KAAK,GAAG,IAAI;IAElB,IAAI,AxB6GLvvL,CwB7GMuvL,CxB6GJ,CsBhgDM5gB,EtBggDH93K,CwB7GM,AxB6GL,CwB7GMy2L,AxB6GLzwL,AsBhgDN,CAAY,CAAC,MtBggDC,EwB7GO,EAAE,KFn5CX,EAAkB,UAAlB,EAA8B,gBAA9B,EAAgD,MAAhD,EAAwD,KAAxD,EAA+D,KAA/D,CAAZ,EAAmF,UAASjb,MAAT,EAAiB;MEo5ClG,ExB8GHsqB,EsBjgDSk1K,CtBigDN,CwB9GMoO,AFn5CApO,EtBigDHphL,CsBjgDQ27F,CtBigDN,CAAE,CAAC,CAAE,EwB9GK,GAAGmzF,CFn5CPnzF,CAAW/5G,MAAX,CEm5CgB,AFn5C3B,GEm5C8BktM,SAAS,CAACjqM,MAAM,GAAG0qM,KAAK,CAACx9D,KAAK,CAACltI,MAAM,CAAC,CAAC;QxB8GzDsnB,EsBhgDNk1K,CtBggDS,CsBhgDTA,EtBggDYrhL,CsBhgDPwZ,CtBggDS,CAAE,CAAC,AsBhgDZA,CtBggDc,AsBhgDV53B,MAAJ,CAAX;MEo5CA,ExB4G2BwqB,GwB5GtB,AxB4GyB,GAAGpM,CwB5GxBlb,CAAC,AxB4GyB,CAAE,AsB//C1BlD,CtB+/C2B,CwB5GzB,AxB4G2B,CwB5G1B,EAAEkD,CAAC,AFn5CjB,CAAA,EEm5CoB0qM,CFn5CCh2K,GAAAA,CAAI53B,IEm5CI,EAAEkD,AFn5CV,CEm5CW,AFn5CX,EEm5Ca,CFn5CC,CEm5CC,WFn5CU;QEo5C5C,AxB4GLunB,GAAG,CsB//CQ0iK,EEm5CA0gB,AxB4GLzvL,EwB5GO,AxB4GL,AsB//CG+uK,CtB+/CD,CAAC,CwB5GK+f,AxB4GH,AsB//CKzmL,KAAAA,CAAM1pB,GEm5CC,GAAGmwM,GFn5CV,CAAgB1oM,KEm5CG,AFn5CnB,CEm5CoBtB,AFn5CE9D,CEm5CD,CAAC,EFn5CtB,CEm5CyB8D,AFn5CE4lC,CEm5CD,CAAC,CAAC,MFn5C5B,CAAb;QtB+/CUpe,GAAG,AsB9/CV85E,GtB8/CapmF,EAAE,AsB9/ClB,CtB8/CoB,AsB9/CXwZ,CtB8/CY,CAAE,CsB9/CvB,EAAcu1J,IAAd,CAAA;QEo5CAigB,AxB0GyBziL,GAAG,GAAGvM,CsB7/CxBohL,CtB6/C0B,CAAE,AsB7/C5BA,CtB6/C6B,AsB7/C1Bh7F,CtB6/C4B,GwB1GxB,CAACtqF,AFn5CR,CAAS6/F,GEm5CG,CAAC4zF,KAAK,CAACvC,AFn5CnB,EAAqBje,IAArB,CAAP,IEm5CqC,CAAC0gB,EAAE,CAAC,CAAC;OFt5C5C,CEu5CEzB,AxB0GLxhL,GAAG,EwB1GO,CAACq4K,AxB0GL7kL,EAAE,CAAE,CAAC,CwB1GK,AxB0GH,CwB1GIgvL,cAAc,EAAEA,cAAc,CAAC;KF15C/C,CAAA,EE25CI,AxByGUviL,GAAG,GwBzGPzK,AxByGUhC,CwBzGT,CxByGW,CAAE,CwBzGVuvL,AxByGW,CAAE,IwBzGR,CAACG,WAAW,CAACV,cAAc,EAAEf,KAAK,EAAEF,IAAI,EAAEC,KAAK,EAAEE,IAAI,EAAEC,KAAK,CAAC;QAE5E,AxBuGyBzhL,AsB1/CzB2qK,GtB0/C4B,CwBvGxBr1K,CAAC,CxBuG0BhC,EAAE,AsB1/CrC,CtB0/CuC,AsB1/C1B4/K,CEm5CC,CxBuG2B,AsB1/CzC,CtB0/C2C,CsB1/C1B,EEm5CE,EAAE,QFn5CrB,CAAA;MtB4/CF,IwBxGQ,AxBwGD/pL,IAAI,CAACgC,AsB3/CCkuG,EEm5CE,CxBwGA,CAAE55F,GwBxGG,AxBwGA,GAAGE,AsB3/CrB,CAAsB4xK,EtB2/CG,CAAC,GAAGjyK,MsB3/C7B,CtB2/CoC,AsB3/CDwN,GAAAA,CtB4/C9B3jB,AsB5/CkCkwG,ItB4/C9B,CAACluG,GAAG,CAAEuU,CsB5/Cf,EtB4/CkB,AsB5/CiCuvF,GtB4/C9BnvF,GAAI,CAAC,GAAGR,AsB5/CsB2vF,CAAWoK,MtB4/CxB,IACjClwG,AsB7/C8C,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I,AxB+GF0K,AsBv/CZ,GtBu/Ce,AsBv/CE4pC,GtBu/CC,CAAC,EsBv/CFA,CAAO9zB,CtBu/CA,CAAC,KsBv/CR,CAAezf,CAAf,EAAkB44F,UAAAA,CAAWllG,GAA7B,CAAjB;QtBw/CD,EwB/GOhP,ExB+GDqlB,EAAE,CsBv/CIpW,CEw4CC,CAACoF,AxB+GH,CAAEqQ,AsBv/CZ,GEw4CiB,AxB+GF,AsBv/CEmqC,CEw4CC04I,ExB+GA3iL,GAAG,AsBv/CJiqC,CAAO9zB,GtBu/CE,CAAC,GsBv/CV,CEw4Ce,AFx4CAzf,CEw4CC,AFx4ChB,EAAkB44F,UAAAA,CAAWjlG,GAA7B,CAAjB;GA/BK,KEw6CD,AxB+GL,CsBv/CM,GtBu/CAqW,CsBv/CI4uF,CtBu/CF,GAAG,CAAEvvF,GAAG,EsBv/CNuvF,CtBu/CSnvF,GAAG,IAAK,CAAC,GsBv/CIioK,iBAA1B,EAA6C;MEy4ChD,ExB+GH,AsBv/CK3xE,ItBu/CC91F,AsBv/CL,CAAS4yK,CtBu/CF,CsBv/CP,EtBu/CU,AsBv/CG,CtBu/CDrzK,GAAG,GAAGE,AsBv/ClB,EAAsB,CtBu/CD,IAAK,CAAC,MsBv/CM;IEy4CjC,IxBgHD,EsBx/COi1K,EtBw/CA/0K,EAAE,GAAGC,EAAE,AsBx/CX,CAAc+uF,GtBw/CKhvF,EAAE,GAAGE,EAAI,AsBx/Cd8uF,CAAWg5E,CtBw/CM,SsBx/C/B,EAAqC,OAArC,CAAA;IE04CF,CF34CA,CAAA,EE24CI,CAACsZ,CxBgHL,IwBhHU,CAACX,UAAU,EAAE;MACrB,EFx4CExqF,IAAJ,CAASnH,UAAAA,CAAWg5E,UAApB,EAAgC,OAAhC,EAAyC,UAAS/3K,CAAT,EAAY;MEy4CnD,EFx4CE+kL,EtBw/CJ,EwBhHQgO,ExBgHHhjL,EAAE,GAAGX,EwBhHO,EFx4Cf,CEw4CkB+iL,AFx4ClB,CAAA,CtBw/Ce,EAAG,KwBhHS,GAAGA,SAAS,CAAClqM,MAAM,GAAGopM,KAAK,CAACl8D,KAAK,CAACltI,MAAM;KFz4CrE,CE24CE,AF34CF,KE24CO,CxBgHNkS,CAAC,EwBhHSjS,CAAC,AxBgHP,CAAC,EwBhHS,CAAC,EAAEA,CAAC,GAAG6qM,SAAS,EAAE7qM,CAAC,EAAE,EAAE;GFh5CjC,KEi5CD,CFz4CC,GtBy/CJuS,CAAC,AsBz/COskG,CEy4CC8zF,EAAE,AxBgHP,GwBhHUV,IFz4CNpzF,ItBy/CO,CwBhHQ,GAAGozF,IFz4CItX,KEy4CK,CAAC3yL,CAAC,CAAC,GAAGA,CAAC,MFz4CtC,EAA8C;QE04C/CmqM,AFz4CAnsF,ItBy/CHt3F,AsBz/CD,CtBy/CE,AsBz/COo0K,EAAT,CtBy/CK,CsBz/CQ,GEy4CG,CAAC9jL,GFz4CjB,CEy4CqB,CAACmyL,AFz4CA,CtBy/CN,IwBhHW,CAACjB,MFz4CK,KEy4CM,CAACyC,EAAE,CAAC,CAAC;QACxCtB,ExBiHJ,AsB1/CMzM,CtB0/CL,EwBjHQ,CAACmD,GxBiHH,EwBjHQ,AFz4Cb,CEy4CcoK,AFz4CAtzF,UAAAA,CAAW+7E,CEy4CC,EAAEuX,KFz4C5B,EAAmC,KEy4CK,CAAC,CFz4CzC,CAAA;KADF,CAAA,EE24CI,IxBkHHl4L,CAAC,CwBlHQiL,CAAC,CxBkHNnM,EwBlHS05L,ExBkHL,CAAChyL,EwBlHS,CAACmyL,CxBkHN,CAAE/iL,EAAG,CAAC,MwBlHW,CAACsiL,YAAY,EAAEhB,KAAK,EAAEF,IAAI,EAAEC,KAAK,EAAEE,IAAI,EAAEC,KAAK,CAAC;QAE1E,AFz4CArrF,IEy4CI9gG,AxBiHP3K,AsB1/CD,CEy4CS,AxBiHP,AsB1/COuoL,EAAT,CtB0/CK9yK,CsB1/CQ,CEy4CC,AxBiHP,GAAG/V,CAAC,CwBjHQ,EAAE,GFz4CrB,EAA0B,YAAW;UE04C/B,AFz4CAsgL,EtB0/CL7rK,CAAC,GAAGuB,CwBjHQ,CxBiHN,AsB1/CL,CAAa4uF,EtB0/CL5kG,CwBjHQ,AxBiHP,OsB1/CI4kG,CAAW+7E,QAAxB,EAAkC,OAAlC,CAAA;KADF,CAAA,EE24CI,ExBkHJ;QwBhHI,AxBkHL,AsB3/CK50E,CtB2/CJ,GwBlHQ9gG,AFz4CR,CEy4CS,AFz4CA49K,EtB2/CH,AsB3/CN,CEy4CY0P,CFz4CC,EtB2/CF1iL,CwBlHK,CxBkHH,CwBlHK,ExBkHFC,EAAE,CsB3/ClB,CtB2/CqB,CsB3/CI,YAAW;UE04C9ByiL,AxBmHN,AsB5/CM/W,IEy4CI,GAAGv2K,CAAC,GFz4CZ,CAAgB25F,UAAAA,CAAW+7E,QAA3B,EAAqC,OAArC,CAAA;KADF,CAAA,IE24CMjwL,MAAM,CAACqU,IAAI,CAACmzL,YAAY,CAAC;GFp5C1B,KEq5CD,CFz4CC,CtB4/CL,GsB5/CStzF,CtB4/CJ/uF,EAAE,GAAGZ,IsB5/CD2vF,GtB4/CQ,EAAG,OsB5/CWi8E,eAA1B,EAA2C;ME04C9C,EFz4CEP,ItB6/CHtgL,CAAC,GAAG,AsB7/CL,CAAa6oL,EAAb,EAAiB,MtB6/CD,CsB7/ChB,CAAA;IE04CA,CAAC,MAAM,CxBoHNvoL,CAAC,EsB7/CSu6K,CtB6/CN,CAAC,WsB7/CN,GAA2Bt7H,MAAAA,CAAO9zB,OAAP,CAAe,UAAS38B,GAAT,EAAc;ME04CtD,GFz4CGqzC,GtB6/CJ1tB,CAAC,CsB7/CA,CAASo2K,CtB6/CN,WAAW,GsB7/Cd,GAA2BjmF,UAAAA,CAAWk8E,OAAX,CAAmBjkJ,QAAnB,CAAA,CAA3B;ME04CA,IxBqHF,CwBrHO,AxBqHN,EsB9/CQ/tC,EEy4CEf,CAAC,AFz4CV,CtB8/CK,EwBrHQ,CAAC,EAAEA,CAAC,KAAKmpM,KAAK,CAACX,UAAU,CAACzoM,MAAM,EAAEC,CAAC,EAAE,EAAE;KF34C3B,EAGxB62G,CEy4CCwyF,IxBsHH92L,CwBtHQ,AxBsHP,CwBtHQwtL,ExBsHLhvL,CsB//CF8lG,CAAWi2E,CEy4CC,CAACqc,AxBsHP,CAAC1wL,IwBtHW,AxBsHP,CwBtHQ+vL,AxBsHN1gL,EAAG,CAAC,EsBlgDO,CAA3B,IE44CgC,CAAC9nB,CAAC,CAAC,EAAEmqM,YAAY,CAAC;QAC9C,IxBsHHl4L,CAAC,CwBtHQiL,CAAC,AFx4CA4vK,CtB8/CN9kK,EwBtHSyiL,AxBsHP,GAAGl4L,CAAC,CwBtHQ,CAACq4L,IFx4CpB,CAAA,CAAA,KEw4C+B,CAACT,YAAY,EAAEhB,KAAK,EAAEF,IAAI,EAAEC,KAAK,EAAEE,IAAI,EAAEC,KAAK,CAAC;QAE1E,IAAInsL,AxBqHPwJ,CwBrHQ,AxBqHP,GAAGwB,EwBrHS,AxBqHP,GAAG3V,CAAC,CwBrHQ,EAAE;UACf,AxBsHN,GsB9/CSojE,IEw4CI,IFx4Cf,CEw4CoB,EFx4CEnkB,MAAAA,CAAO9zB,OAAP,CAAe,UAAS38B,GAAT,EAAc;QEy4C7C,AxBuHL,AsB//CKm5L,CtB+/CJ,EsB//CIA,CAAIprB,GtB+/CF,IsB//CF,CAAA,CAAA,CAAcitB,eAAd,IAAiCllF,UAAAA,CAAWkmF,UAAX,CAAA,CAArC,EAA8D;QE04C1D,ExBuHJ,EwBvHQ7/K,CAAC,GAAGstL,IAAI,EAAE,GFz4CGtQ,GAAAA,CAAIprB,OAAJ,CAAA,CAAnB,EAAkC,IAAlC,CAAA;UE04CI07B,IAAI,GAAGttL,CAAC;UACRva,AxBuHN,CsB//CO5B,GtB+/CFgnB,AsB//CL,EEw4CY,AxBuHL,CwBvHM/Q,ExBuHHkQ,EwBvHO,CAACijL,IxBuHD,EAAG,MwBvHU,CAAC;GF74CX,EAMnBtzF,GEw4CG,IxBwHH5kG,CAAC,EsBhgDD4kG,CtBggDI,AsBhgDOlhC,QANQ,CAAtB,EtBsgDkB;MwBvHd,MxBwHDpjE,CAAC,GAAG,WAAW;AsB9/CpB,IEu4CI,CAAC,CAAC,GFv4CGyqL,GtB+/CJt2K,CAAC,GAAG,CAAC,QsB//CV,CAA0BwzK,GAA1B,EAA+BrjF,UAA/B,EAA2C;MAEnC6xD,ItB+/CJ,AsB//CIA,CtB+/CH,EsB//CUwxB,GAAAA,CtB+/CJ,AsB//CQprB,OAAJ,CAAA,CAAb;IEw4CE,EFp4CImuB,GEo4CC,GxByHJv2K,CwBzHQokL,AxByHP,EwBzHS,CxByHN/5L,EwBzHS,AFp4CVksL,CEo4CW,CxByHN,CwBzHQ6N,AxByHPryL,AsB7/CSiwJ,EEo4CA,ExByHL,AsB7/CKA,CtB6/CH3gJ,AsB7/CQ0vK,EEo4CAgT,AxByHL,CAAC,IwBzHS,CAAChC,WAAW,AFp4CtB,CEo4CuB1oM,AFp4CEmQ,MEo4CI,CFp4C7B,CEo4C+B46L,AFp4CEj0F,EEo4CA,EAAE,EAAE,IFp4CJA,CAAW71G,MAA5C,CAArB;MEq4CI,AFl4CAi8L,MtB2/CDhrL,CAAC,GAAGgW,EAAE,AsB3/CLg1K,GtB2/CQv2K,CAAC,CsB3/CQ,CAAC,CAAtB,EAAyB;MEm4CrBwiL,EFj4CEhM,GEi4CG,CAAC6C,AxByHPxtL,CAAC,GAAG2V,CwBzHQ,CAACuiL,AxByHP,GAAG/jL,AsB1/CNw2K,CtB0/CO,CwBzHQ,CAACuL,AFj4CA//B,IAAAA,CAAKgvB,MEi4CM,CAACoT,EAAE,CAAC,EAAET,UAAU,CAAC,eFj4C5B,CAA4CpN,YAA5C,CAApB;MEm4CE,EF/3CEC,EtBw/CJ,CwBzHO,IAAI6N,EAAE,GAAG,CAAC,AF/3Cb7N,EE+3Ce6N,EAAE,CF/3CCtsM,IE+3CI0qM,KAAK,AF/3C/B,CE+3CgCV,CF/3CC,UE+3CU,CAAC1oM,MAAM,EAAEgrM,EAAE,EAAE,EAAE;QACtD,AxB0HL,csBz/CmB,CAAA,CAAhB;QEg4CE1B,AxB2HL,GsB1/CQ3R,CtB0/CJ,CwB3HM,AxB2HLniL,CwB3HMwqL,ExB2HH,CAAE9tL,CAAC,CwB3HK,CAACk3L,AxB2HJ52L,CAAC,EAAEmU,CAAC,CwB3HK,CAAC+hL,AxB2HJ9vL,KAAM,CAAC,KwB3HQ,CAACoyL,EAAE,CAAC,EAAET,MF/3CrC,CAA4CrN,GE+3CG,CAAC,QF/3ChD,CAAA,GACEC,aADF;QEg4CEmN,AxB4HL,OAAO,GwB5HQ,CAAC9xL,AxB4HL,CAAC,CAAC,GwB5HQ,CAAC+xL,UAAU,EAAEC,KAAK,CAAC;MxB8HzC,EwB5HM,IAAI,CAACA,KAAK,AF73CA1zF,CE63CCorF,SF73CDprF,CE63CW,AF73CApzD,CE63CC,CAAC,EAAE,IF73C7B,CAAA,GAAqCozD,UAArC;QAGI6xD,EE23CE6hC,EF33CF7hC,CAAKpgB,EE23CE,CAACpyI,CF33CR,IAAawyJ,IE23CI,AF33CJA,CE23CK,AF33CApgB,CE23CC,GF33CN,CAAUizC,UAA3B,EAAuC;MtBw/CzC,IwB5HQ,AF33CE4B,ME23CIrW,GF33CJqW,CE23CQ,EF33CIz0B,CE23CD+hC,GF33CC/hC,CAAKpgB,CE23CD,CAACsiD,EF33CL,CAAUrP,QE23CM,CAACgP,CF33CnC,IE23CwC,EAAEpB,KAAK,EAAEF,IAAI,EAAEC,KAAK,EAAEE,IAAI,EAAEC,KAAK,CAAC;UAEtE,AF13CAvR,IE03CIhR,EF13CJgR,EE03CQ,CF13CRA,IE03Ca,CF13CbA,CAAJ,GE03CsB,EAAE;MxB4H5B,IAAIpkL,AsBp/CIypL,CtBo/CH,CwB3HK,ExB2HFpsL,IAAI,CwB3HK,AxB2HJ0H,AsBp/CL0kL,CAAUjD,GtBo/CD,AsBp/CCA,CEy3CI,AxB2HH,AsBp/CGpC,CtBo/CDnwK,GAAG,EsBp/ChB,CtBo/CmBF,AsBp/CvB,EAA2B,CtBo/CD,KAAOE,GAAG,GAAGF,GAAG,CAAE,GAC/C,CAAEH,GAAG,GAAGI,GAAG,KAAOJ,GAAG,GAAGI,GAAG,CAAE,GAC7B,CAAEH,GAAG,GAAGF,GAAG,KAAOE,GAAG,GAAGF,GAAG,CAAG,CAAC,CAAC,CAAC;UwB5H1B,OFz3CO81K,SAAAA,CAAUjD,GAAAA,CAAIpC,MAAd,CAAT;MtBu/CN,CsBx/CI,GE43CI,AxB4HH/mL,GsBt/CM,CE03CC+1K,AxB4HH,CAAC/zK,EsBt/CKoqL,CE03CC,AxB4HH,CAAEzpL,CAAE,CwB5HE82L,AxB4HD,GAAG,CwB5HE,CF13CRrN,CE03CU,AF13CArG,EtBs/CC,EAAGpjL,CAAC,GAAG,CAAC,kBsBt/CnB,CAAJ,EAA4C;YE23C7C82L,IAAI,CFz3CCrN,EEy3CErW,IAAI,GFz3CNqW,CAAUrG,2BAAV,CAAT;MtBs/CN,CsBx/CW,KE43CDn0L,CFz3CC,KEy3CK,CAACqU,IAAI,CAACuzL,KAAK,CAAC;MxB6H5B,IwB5HQ;QACF;MACF,AxB4HJ,IAAI,AsBl/CIzS,CtBk/CH7lL,CAAC,GAAG,CAAE0V,AsBl/CHmwK,CAAOmF,EtBk/CD,GAAGx1K,GAAG,IAAK/T,AsBl/CjB,CtBk/CkB,AsBl/ClB,IAAwBokL,MAAAA,CAAOmF,YAAP,CAAA,CAAqBpmF,UAAAA,CAAWpzD,QAAhC,CAAA,KAA8ChlD,SAA1E,EAAqF;IEu3CvF,ExB4HF,IAAI,CAAC8T,CAAC,AsBj/CMnY,GtBi/CH,CAAEktB,CsBj/CCltB,EtBi/CE,CsBj/CM09L,EtBi/CHpwK,GAAG,CsBj/CAowK,CAAOmF,EtBi/CFvpL,CAAC,SsBj/CN,CAAA,CAAqBmjG,UAAAA,CAAWpzD,QAAhC,CAAd;IEu3CJ2lJ,ExB2HF,EwB3HM,CAACjI,CxB2HH,CAACz6K,CAAC,CwB3HK,CAACuiL,CxB2HH,CAAE1hL,EwB3HK,CxB2HF,AsB/+CGmlK,CEo3CC0d,ExB2HD/iL,GAAG,CwB3HI,CAAC,ExB2HA3T,CAAC,CsB/+CpB,GAA0BtZ,KAA1B;IEs3CJ,ExB0HF,EwB1HMgwM,ExB0HF,CAACzjL,CAAC,EwB1HM,CAACrO,AxB0HJvH,GwB1HO,CAACpO,AxB0HJ,AsB/+CIgzE,CtB++CH38D,IAAI,CwB1HK,AxB0HH,CwB1HI,AxB0HFoO,CsB/+ChB,CAAoBhtB,CEq3CC,AxB0HF,GwB1HK,AxB0HFotB,CsB/+CtB,CEq3C0B,AFr3C1B,CtB++CyB,GAAGI,GAAG,GAAG,CAAC,IAAK,CAAE,CAAC;MwBzH7CjlB,AxB2HJ,MwB3HU,CAAC0V,AxB2HJ,IAAI,EwB3HM,CAAC1V,MAAM,CAAC;IACvB,AxB4HH;EAAC,EwB1HE,OAAO,IAAI;EACb,ExByHAzI,GAAA;AsB7+CF,EEq3CE,ExBwHAE,KAAA,AsB7+CO8c,EtB++CR,EsB/+CD,CAAagjL,GAAb,EAAkBl5L,CtB++CjB2Q,IAAKsF,CAAC,AsB/+CP,EtB++CU,AsB/+CgBwsC,QAA1B,EAAoCurB,MAApC,EAA4C;AEs3C5C,MxB2HE,AsBh/CIhuE,ItBg/CA,CAACiR,CAAC,AsBh/CFjR,CAAOyiD,EtBg/CF1yC,IAAI,CAACY,CsBh/CV,CAAA,CtBg/Ca,CAAE,GsBh/CMlT,CtBg/CF,CAACwT,CAAC,EAAEgF,CAAC,CAAChF,CAAE,CAAC,AsBh/ChC,EAAoC;AEs3CtC,MxB2HE,IAAI,AsBh/CI,CtBg/CHM,CAAC,EsBh/CMxU,CtBg/CHgT,IAAI,AsBh/CL,CtBg/CMY,AsBh/CN,GtBg/CS,CAAE,IAAI,CAACY,CAAC,AsBh/CjB,EtBg/CmB0E,CAAC,AsBh/CCjW,CtBg/CAuR,CAAE,CAAC,GsBh/CxB,GAAA,qBAAA,GAAiDkxC,QAAjD,GAAA,GAAA,CAAN;AEs3CJ,MxB2HE,IAAI,CAAC/8B,CAAC,GAAG3V,IAAI,CAACY,GAAG,CAAE,IAAI,CAAC+U,CAAC,EAAEzP,CAAC,CAACyP,CAAE,CAAC;MAChC,AsB/+CImwF,ItB++CA,CAAClwF,CAAC,GAAG5V,CsB/+CL8lG,GtB++CS,AsB/+CTA,CtB++CUllG,GAAG,CAAE,AsB/+CfklG,CAAJ,GtB++CuB,CAAClwF,CAAC,EAAE1P,CAAC,CAAC0P,CAAE,CAAC;EwBzHhCikL,IxB2HA,AsB/+CI57H,MAAAA,CEo3CO47H,AxB2HJ,AsB/+CI1qL,CEo3CCwM,GxB2HD,CwB3HK,AFp3ChB,EEo3CkBy8K,AFp3CA,KEo3CK,EAAEF,IAAI,EAAEC,KAAK,EAAEE,IAAI,EAAEC,KAAK,EAAE;IACjD,AxB4HH,MwB5HSoB,KAAK,EFp3CE,CEo3CC,GFp3CG3X,CEo3CC,cFp3CL,CAAoB9xL,MAApB,EAA4ByiD,QAA5B,CAAb;EtBg/CF,CsBj/CA,CEs3CEwkJ,KFp3CK,WEo3CW,CAAC52K,OAAO,CAACo5K,KAAK,EAAE/9K,IAAI,EAAEu8K,IAAI,EAAEC,KAAK,EAAE8B,OAAO,CAAC;IAC3D/C,AxB0HF/tM,GAAA,CsB9+CQkjM,WAAAA,CEo3CU,CAAC/rK,CFp3CG,CAACrwB,KEo3CG,CAACmoM,AFp3CL,EAAS1lJ,GEo3CC,EAAE/2B,GFp3CZ,CEo3CgB,AFp3ChB,CAAmBrL,CEo3CD+nL,IAAI,CFp3CtB,CEo3CwBC,AFp3CEr6H,KEo3CG,CFp3CHA,CEo3CKi8H,AFp3CE7N,OEo3CK,CAAC,GFp3CvC,CAApB;IEq3CA,AxByHFhjM,KAAA,CwBzHQ8wM,CxB2HT,GwB3Ha,GAAGF,AFp3CAzV,GtB++ChB3jL,IwB3HuB,AxB2HlBqF,CwB3HmB,AxB2HlB,CwB3HmB,CAAC,AxB2HjB,OsB/+COs+K,CAAkBj0F,KAAlB,CAAwB44F,GAAxB,EAA6BkD,WAA7B,CAAb;IEq3CA,ExB4HF,IwB5HQ+N,AxB4HJ,CAACl5L,CAAC,EwB5HM,CxB4HHlB,EwB5HMi6L,ExB4HF,CAACp5L,GAAG,CwB5HK,AxB4HH,CwB5HI,CAAC,CAAC,CxB4HF,CAACK,CAAC,EAAEgF,CAAC,CAAChF,CAAE,CAAC;IwB3H9B,ExB4HF,AsB/+CI+8D,IEm3CIo8H,AxB4HJ,CAAC74L,CAAC,AsB/+CFy8D,CAAOquH,CEm3CC,CxB4HHtsL,EwB5HMk6L,ExB4HF,AsB/+CT,CtB++CUr5L,GAAG,CwB5HK,AxB4HH,CwB5HI,CAAC,CAAC,CxB4HF,CAACW,CAAC,CsB/+CIk6K,CtB++CFx1K,CAAC,CAAC1E,CAAE,CAAC,KsB/+ChC,EAAyC;IEo3CvC,ExB4HF,IwB5HQ84L,AxB4HJ,CAAC3kL,AsB/+CI22K,CtB++CH,EwB5HM,CxB4HHtsL,EwB5HMk6L,AFn3Cb,EtB++CW,CAACr5L,AsB/+CIo9D,GtB++CD,CwB5HK,AxB4HH,CwB5HI,CAAC,AFn3CNA,CEm3CO,AFn3CAquH,CtB++CF,CAAC32K,CAAC,EAAEzP,CAAC,AsB/+CV,CtB++CWyP,AsB/+CG+zK,CtB++CD,CAAC,EsB/+C9B;IEq3CA,ExB2HF,EwB3HMyQ,ExB2HF,CAACvkL,CwB3HK,AxB2HJ,GwB3HO0kL,AxB2HJt6L,IwB3HQ,AxB2HJ,CAACa,GwB3HOw5L,AxB2HJ,CAAE,GwB3HM,CxB2HF,CAACzkL,CwB3HIwkL,AxB2HH,EAAEl0L,CAAC,CwB3HI,AxB2HH0P,CAAE,CwB3HG,AxB2HF;MwB1H5B,AxB4HJ,OwB5HW,AxB4HJ,IAAI,CwB5HK,CAAC,AFn3CAuzK,CEm3CC,EFn3ClB,EAAsBrjF,UAAtB,CAAA;IEo3CE,AxB6HH,EsB/+CK07E,QAAJ,CAAa17E,UAAAA,CAAWoK,UAAxB,EAAoC,GAApC,CAAA;EtB++CA,IsB7+CM3gH,IAAAA,GAAOmf,QAAAA,CAASktK,aAAT,CAAuB,MAAvB,CAAb;IEk3CE,AxB2HFzyL,EsB5+CIq4L,CtB4+CJ,GwB3HQphL,EAAE,EFj3CV,CEi3Ca+5L,AFj3CA5qM,IEi3CI,AFj3CjB,EAAmB,CEi3CC+qM,IAAI,UFj3CxB,CAAA;IEk3CE,AxB0HFjxM,GsB3+CKi2L,EtB2+CL,CwB1HQh/K,CxB4HT,CwB5HW,GAAG+5L,CFj3Cb,GEi3CiB,AFj3CAv0F,CtB6+ClBnlG,EwB5HqBy5L,IAAI,AxB4HlBx5L,GAAG,AsB7+CQklG,CAAWpzD,CtB6+CjB7xC,GAAG,EAAG,EsB7+CjB;IEk3CE,ExB6HF,AsB7+CMyqE,IEg3CEzzD,KAAK,AFh3CPyzD,GEg3CUlrE,AFh3CEsO,EEg3CA,GAAGpO,EAAE,CFh3CLoO,CAASktK,CEg3CDx7K,EAAE,GAAGE,EAAE,KFh3Cf,CAAuB,KAAvB,CAAlB;IEi3CE,OAAOuX,CFh3CCmnK,IEg3CI,OFh3Cd,CAAsBzvL,IAAtB,CAAA;EEi3CA,IxB6HA,IAAI,CAAC2R,CAAC,AsB7+CI89K,GtB6+CDh/K,IAAI,CAACa,GAAG,AsB7+CjB,CtB6+CmBD,AsB7+CGklG,GtB6+CA,CAAC5kG,CAAC,EAAElB,GsB7+CJ8lG,CtB6+CQ,AsB7+CGoK,CtB6+CFtvG,GAAG,CAAEC,GAAG,CAACK,CAAC,AsB7+CzC,CAAA,CtB6+C2C,IAAI,CAACA,CAAE,CAAE,CAAC;EwB5HrD,IxB6HA,AsB5+CM6oL,EAAAA,EtB4+CF,CAACvoL,AsB5+CMinL,CtB4+CL,GAAGzoL,EsB5+CEyoL,CAAOU,CtB4+CL,CAACtoL,CsB5+CH,EtB4+CM,AsB5+CMyqE,CtB4+CJ1qE,GAAG,CAACY,CAAC,EAAExB,CsB5+Cf,EAAuBi+D,CtB4+CJ,CAACr9D,GAAG,CAAEC,AsB5+CFo9D,CAAOquH,EtB4+CF,CAAC9qL,CAAC,EAAE,AsB5+ChC,CAAX,GtB4+C+C,CAACA,CAAE,CAAE,CAAC;AwB5HvD,MxB6HE,AsB3+CIggL,ItB2+CA,CAAC7rK,CAAC,EsB3+CN,CtB2+CS3V,AsB3+CI+pL,EAAb,EtB2+Ca,AsB3+CIzD,CtB2+CHzlL,EsB3+CGylL,CtB2+CA,AsB3+CI8C,CtB2+CFxoL,GAAG,CAAC+U,CAAC,EAAE3V,IAAI,CAACY,GAAG,CAAEC,GAAG,AsB3+CvC,CtB2+CwC8U,AsB3+CxC,CtB2+CyC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;AwB5HvD,MxB6HE,AsB3+CImwF,ItB2+CA,CAAClwF,CAAC,GAAG5V,CsB3+CL8lG,GtB2+CS,CAACjlG,GAAG,CAAED,GAAG,CAACgV,AsB3+CGmsK,CtB2+CF,EAAE/hL,IAAI,CAACY,GAAG,CAAEC,GAAG,AsB3+CvC,CtB2+CwC+U,CAAC,AsB3+CE,EtB2+CA,IAAI,CAACA,CAAE,CAAE,CAAC;MAErD,EsB5+CM4rK,KtB4+CC,GsB5+CL,CtB4+CS,AsB5+CIuI,EAAb,EAAiB,OAAjB,CAAA;EEg3CFoM,CFj3CA,CtB++CD,KsB7+CQ,cE+2CcA,CAACC,IAAI,EAAExkM,MAAM,EAAE;ExB8HpC,EwB7HE,IF/2CI4vL,QAAJ,CAAauI,EAAb,EAAA,OAAA,CAAwBjkF,UAAAA,CAAWmtD,QAAX,CAAA,CAAxB,CAAA,CAAA;IEg3CA,AxB4HF9pK,GAAA;IwB3HE,AxB2HFE,KAAA,CwB3HQkxM,CxB6HT,MwB7HgB,GAAG,AxB6HnBtzL,AsB3+CmBkiL,GAAlB,CE82CsB4F,CF92CChF,EAAvB,CE82C0B,CAAC,AF92CAjkF,CE82CC,ExB6HhB5+F,MAAM,CsB3+ClB,CtB2+CoBC,AsB3+CpB,MtB2+C0B,EAAG;IwB5H3B,ExB8HF,AsB3+CIs/K,IE62CI+T,AxB8HJ,CAACt5L,CAAC,GAAGlB,EwB9HM,ExB8HF,AsB3+Cb,CE62CkB,AxB8HJa,AsB3+CIpS,GtB2+CD,CwB9HKsgM,AxB8HH7nL,AsB3+CnB,CAAuB4+F,GE62CG,CAAC,CAAC,AxB8HH,EAAE9lG,GsB3+C3B,CtB2+C+B,AsB3+C/B,CtB2+CgCY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACjG,CAAE,CAAE,CAAC;IwB7HrD,ExB8HF,EwB9HM,CAACu5L,AF52CA30F,CtB0+CH,CAACtkG,CAAC,GAAGxB,IAAI,AsB1+Cb,CtB0+Cca,GAAG,CAAEqG,CwB9HI,CAACszL,IxB8HC,EAAEx6L,CwB9HI,EAAEu6L,CxB8HF,CAAC35L,GAAG,CAAEuG,CwB9HG,CAAC,IxB8HE,EAAE,IAAI,CAAC3F,CAAE,CAAE,CAAC;IwB7HrD,ExB8HF,IwB9HQN,AxB8HJ,CwB9HK,AxB8HJyU,CAAC,EwB9HM4kL,CxB8HHv6L,IAAI,CAACa,CwB9HK,CAACK,CAAC,AxB8HJ,CAAEgG,EwB9HKszL,IxB8HC,EAAEx6L,CwB9HI,CAACkB,CAAC,CxB8HF,CAACN,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACwO,CAAE,CAAE,CAAC;AsBx+CzD,IE22CI,ExB8HF,GsBz+CO0xK,CE22CC7lL,AxB8HJ,CwB9HK,AxB8HJoU,CAAC,EwB9HM2kL,CxB8HHv6L,IAAI,CAACa,CwB9HK,CAACW,CAAC,AxB8HJ,CAAE0F,EwB9HKszL,EF32C1B,CAA6BrR,CtBy+CF,EAAEnpL,AsBz+C7B,CE22CiC,CAACwB,AF32CArY,CE22CC,CxB8HF,CAACyX,AsBz+ClC,EAAuC,CtBy+CF,CAAEuG,MAAM,EAAE,IAAI,CAACyO,CAAE,CAAE,CAAC;IwB7HrD,ExB+HF,GsBz+COlH,CE02CCiH,CAAC,ExB+HF,CwB/HK4kL,GxB+HD,AsBz+CJ7rL,CAASimD,GE02CG,CAACh/C,CAAC,GAAG6kL,AF12CjB,CAAkB7b,IAAlB,EE02CwB,CAAChpK,AF12CA,CE02CC,EF12C1B,GAA+BxsB,GAAtC;IE22CEyI,AxBgIH,MwBhIS,CAACsP,CAAC,GAAG,GAAG,GAAG,IAAI,GAAGk1L,IAAI,IAAI,CAAC,GAAG50L,CAAC,GAAG,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGmU,CAAC,GAAG,CAAC,GAAGA,CAAC,CAAC;AFx2ClE,EtBw+CE,EwB/HE/jB,KFz2CK26L,CEy2CC,CAAC/qL,CAAC,GAAG,GAAG,GAAG,GFz2CrB,CEy2CyB,AFz2CA2nL,GEy2CGiN,AFz2C5B,EAA8B7mM,EEy2CE,EFz2ChC,EEy2CoC,AFz2CAi9L,CEy2CC,GAAGtrL,CAAC,GAAG,CAAC,EFz2C7C,CEy2CgDA,CAAC,AFz2CA,GEy2CG,CAAC,GAAGyU,CAAC,GAAG,CAAC,GAAGA,CAAC,CAAC;IAC9D/jB,AxB8HFzI,EsBv+CMk2L,CtBu+CN,EsBv+CMA,CEy2CE,CAAC1pK,CAAC,AFz2CEjH,GEy2CC,GAAG,EFz2CJA,CEy2CO,AFz2CEktK,IEy2CE,GAAGwa,IAAI,EFz2ClB,CAAuB,CEy2CD,CAAC,GAAG50L,CAAC,EFz2C3B,CEy2C8B,AFz2C1C,CEy2C2C,GAAGA,CAAC,GAAG,CAAC,GAAGN,CAAC,GAAG,CAAC,GAAGA,CAAC,CAAC;EAChE,ExB6HA7X,EsBt+CIi2L,GtBs+CJ,EAED,IsBx+CC,GAAgB/vL,EtBw+CjB6X,EsBx+CC,UtBw+CYxG,GAAG,EAAEC,GAAG,EAAG;EwB9HvB,IxBgIA,AsBz+CIxX,ItBy+CE2F,CsBz+CN,GAAYO,EtBy+CA,EsBz+CZ,CtBy+Ce,IAAI,CAACP,MAAM,CAAC,CAAC;AwB/H9B,MxBiIE,AsB1+CIg8L,OtB0+CG,IAAI,CAACnkL,GsB1+CZ,CAAoBm4K,QtB0+CI,CAAEhwL,EsB1+C1B,CAAgCqwL,GtB0+CA,AsB1+ChC,CAAA,GtB0+CoC,CAAE,CAAC,CAAC14K,cAAc,CAAE3G,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE7R,MAAO,CAAE,CAAE,CAAC;AwBhIpG,IxBkIC,EsB3+CKw9L,WAAJ,EAAiB;EtB2+CjB,MsB1+CMxB,eAAJ,CAAoBxL,aAApB,GAAoC2J,GAAAA,CAAI6B,eAAJ,CAAoBh8L,MAApB,GAA6B,CAAjE;EE22CF0rM,ExB+HAvxM,GAAA,iBwB/HsBuxM,CAACC,MAAM,EAAE;IAC7B,AxB8HFtxM,KAAA,CwB9HQ+iB,CAAC,AxBgIV,GwBhIa,IAAI,CAAC8vH,CxBgIlB55H,IwBhIuB,CAACq4L,CxBgIxB,EAAQ,GwBhIsB,CAAC;AFx2ChC,IEy2CI,ExBiIF,GsB1+COlO,CEy2CC1rL,AxBiIJ,CwBjIK,AxBiIJG,CAAC,EwBjIM,CxBiIHlB,GwBjIO,CAACm3L,AxBiIJ,CAAC70L,IsB1+ChB,CtB0+CqB,AsB1+CI6mL,CtB0+CF,EsB1+CvB,EEy2C8B,AxBiIH,AsB1+CGuD,CEy2CCiO,AxBiIHz5L,CAAE,CAAC,IwBjIM,AFz2CrC,CEy2CsC,CFz2CC;IE02CnC,ExBiIF,IwBjIQgF,AxBiIJ,AsB1+CIm9B,CEy2CC,AxBiIJ7hC,CAAC,EwBjIM,CxBiIHxB,AsB1+CT,CAAc2uG,EEy2CE,CAACp9D,AxBiIJ,CAACjvC,GsB1+Cd,EtB0+CmB,CAAE,AsB1+CG6mL,CEy2CC,CAAC/8K,CAAC,AFz2CH+8K,CEy2CI,AxBiIH,AsB1+CGhC,CEy2CC,AxBiIH3lL,CwBjII,AxBiIF,CwBjIG,AxBiIF,YsB1+CL,GAAsB,OAAtB,GAAgC,MAAxD;IE02CE,ExBiIF,IwBjIQoC,AxBiIJ,CwBjIK,AxBiIJ+R,CAAC,EwBjIM,CAAC5U,AxBiIJf,CwBjIK,CAACuH,ExBiIF,CwBjIK,AxBiIJjF,CwBjIK4D,CAAC,CAAC,ExBiIF,CAAE,IAAI,CAACyP,CAAE,CAAC;AsBx+C/B,IEw2CI,ExBiIF,GsBz+COg3K,CtBy+CH,CwBjIK/oL,AxBiIJgS,CwBjIK,AxBiIJ,GAAG5V,IAAI,CAACsC,AsBz+ChB,CAAqB6mL,GAArB,CtBy+CqB,CAAE,AsBz+CG,ItBy+CC,CAACvzK,CAAE,CAAC;EwBhI7B,IxBkIA,AsB1+CMg3K,GAAAA,GAAMzD,CtB0+CL,EsB1+CKA,CAAIgB,CtB0+CL,SsB1+CC,GAAiBz7K,QAAAA,CAASktK,aAAT,CAAuB,IAAvB,CAA7B;EEy2CA,ExBmID,EsB1+CK4F,QAAJ,CAAa2H,GAAAA,CAAIj5E,UAAjB,EAA6B,UAA7B,CAAA;AEw2CF,ExBkIE,IsBx+CIq2E,IAAJ,CAAS6B,YAAT,CAAsBwE,GAAtB,EAA2BzD,GAAAA,CAAI5C,IAAJ,CAASsG,UAApC,CAAA;AEu2CF,IxBiIE1jM,EsBt+CIq4L,CtBs+CJ,OsBt+CA,CAAaoL,GAAb,EAAkB,UAAlB,CAAA;AEs2CF,IxBgIEvjM,EsBp+CMyjM,GtBo+CN,EAED,AsBt+COA,GAAQp+K,MtBs+CftL,EsBt+CesL,CAASktK,EtBs+CxB,EAAO,SsBt+CQ,CAAuB,MAAvB,CAAd;AEq2CF,MxBmIE,EsBv+CM0D,EtBu+CF,CAACp+K,CAAC,GAAGlB,EsBv+CT,EtBu+Ca,CAACoD,AsBv+CI,ItBu+CA,CAAE,GsBv+CpB,CtBu+CwB,CAAClC,CAAE,CAAC;AwBlI9B,MxBmIE,AsBv+CIsgL,ItBu+CA,CAAChgL,CAAC,EsBv+CN,CtBu+CSxB,AsBv+CI8sL,ItBu+CA,CAAC1pL,AsBv+Cd,EAAoB,EtBu+CF,CAAE,IAAI,CAAC5B,CAAE,CAAC,IsBv+C5B,CAAA;MtBw+CA,AsBr+CM22K,ItBq+CF,CAACxiK,CAAC,AsBr+CAwiK,GtBq+CGn4K,AsBr+CM0O,ItBq+CF,CAACtL,GsBr+CCsL,CtBq+CG,AsBr+CMktK,CtBq+CJ,IAAI,CAACjmK,CAAE,CAAC,KsBr+Cb,CAAuB,MAAvB,CAAf;EEo2CAojL,IxBkIA,GsBr+COzZ,CtBq+CH,CAAC1pK,CAAC,GAAG5V,GsBr+CT,CtBq+Ca,CAACoD,CwBlIK21L,AFn2CA,CEm2CCR,ExBkIF,CAAE,EsBr+CpB,EtBq+CwB,CAAC3iL,CAAE,CAAC,MwBlIQ,EAAEsiL,IAAI,EAAEC,KAAK,EAAEU,YAAY,EAAEL,OAAO,EAAEC,OAAO,EAAElsM,MAAM,EAAE;IACzF,ExBmIF,AsBt+CIi1L,IEm2CIoZ,GxBmID,CsBt+CP,CAAaziB,EtBs+CF,IsBt+CX,EEm2CqB,AFn2CA,GEm2CG,IAAI4W,CFn2C5B,CAAA,EEm2CgC,CAAC,CAAC;IAChC,AxBoIH,EsBv+CKvN,IEm2CIqZ,IFn2CR,CEm2Ca,AFn2CA1iB,GEm2CG,GFn2ChB,CEm2CoB4W,CFn2CC,GEm2CG,CAAC,CAAC,CFn2C1B,CAAA;EtBu+CA,EwBnIE,EFl2CIhC,IEk2CE+N,GFl2CF/N,GAAUr+K,IEk2CE,GAAG,CFl2CLA,CAASktK,EEk2CAmT,IAAI,CAAC,CAAC,KFl2Cf,CAAuB,MAAvB,CAAhB;IEm2CE,AxBkIF5lM,GAAA,GwBlIQ4xM,AFl2CAzb,SAAR,GAAoB,KAApB,CEk2C0B,GAAG,IAAIyP,IAAI,CAAC,CAAC;IACrC,AxBiIF1lM,EsBn+CIm4L,GtBm+CJ,CwBjIQwZ,CxBmIT,GsBr+CC,CAAajO,KtBq+Cd3nL,EsBr+CC,EEk2CsB,AFl2CA,EtBq+CvB,CwBnI0B,CxBmIlB,GwBnIsB2pL,CFl2C7B,CAAA,EEk2CiC,CAAC,CAAC;IACjC,ExBoIF,AsBt+CIvN,IEk2CIyZ,AxBoIJ,CAAC/5L,CAAC,EsBt+CN,CtBs+CSlB,AsBt+CI+sL,EEk2CE,ExBoIF,CwBpIK,AxBoIJ3nL,EsBt+Cd,EEk2CsB2pL,AFl2CA,CtBs+CH,CAAE,EwBpIK,CAAC,CAAC,AxBoIH,CAAC7tL,CAAE,CAAC,AsBt+C7B,CAAA;IEm2CE,ExBoIF,AsBr+CM8rL,IEi2CEkO,AxBoIJ,CAAC15L,CAAC,CsBr+CAwrL,EtBq+CGhtL,CsBr+CO0O,GtBq+CH,CAACtJ,IsBr+CEsJ,CtBq+CG,AsBr+CMktK,CEi2CD,AxBoIH,GwBpIM,CxBoIF,CAACp6K,CAAE,CwBpIGutL,AxBoIF,IwBpIM,CAAC,AFj2CpB,CEi2CqB,AFj2CE,MAAvB,CAAhB;IEk2CE,ExBoIF,IwBpIQoM,AxBoIJ,AsBr+CI7b,CtBq+CH3pK,CAAC,GAAG3V,IAAI,AsBr+Cb,CtBq+CcoF,EsBr+CM,CEi2CC,ExBoIF,CwBpIK,AxBoIH,IwBpIO2pL,AxBoIH,AsBr+CzB,CtBq+C0Bp5K,CAAE,CAAC,CwBpIG,CAAC,CAAC;IAChC,ExBoIF,AsBr+CI6rK,IEi2CIkY,AxBoIJ,CAAC9jL,CAAC,EsBr+CN,CEi2Ca,AxBoIJ5V,AsBr+CIgtL,GEi2CG,CxBoIH,CAAC5nL,EwBpIM,AFj2CpB,EAAsB,CtBq+CH,CAAE,IAAI,CAACwQ,CAAE,AsBr+C5B,CtBq+C6B,AsBr+C7B;IEk2CE,ExBqIF,AsBt+CI4rK,IEi2CI4Z,GxBqID,CsBt+CP,CAAapO,EtBs+CF,KwBrIS,AFj2CpB,EAAsB,CEi2CC,EAAE,KFj2CzB,CAAA;IEk2CE,AxBsIH,EsBt+COC,IEg2CEoO,EFh2CFpO,GAAS9D,CEg2CD,EFh2CCA,CEg2CE0P,AFh2CE7N,YEg2CU,GFh2Cd,GAAsBt8K,QAAAA,CAASktK,aAAT,CAAuB,QAAvB,CAArC;EtBs+CA,EwBrIE,EF/1CEuN,GAAAA,CE+1CImS,AF/1CA/jD,IAAJ,GE+1CW,CF/1CC4xC,EE+1CEiS,CF/1CFjS,CAAI5xC,IAAJ,CAASizC,KE+1CK,KF/1C9B,EAAqC;IEg2CnC,AxBoIFrhM,GAAA,CwBpIMoyM,GF/1CGziB,IAAP,CAAYqQ,GAAAA,CE+1CI,AF/1CA5xC,GE+1CG,CAAC,AF/1CR,CE+1CS,AF/1CAizC,UAArB,EAAiC,UAASnhM,KAAT,EAAgBF,GAAhB,EAAqB;IEg2CtD,AxBmIFE,IwBnIMowM,CxBmIN,EAED,CwBrIW,GAAG/mM,KxBqId2U,CwBrIoB,CAACmhH,AF/1CA2gE,GAAhB,EAAqBhgM,GAArB,CE+1CyB,CAAC,AxBqI/B,AsBp+C+BA,CE+1CC,CxBqIlB,CsBp+CiBA,KAAQggM,GAAAA,CAAIpC,MAAtC,CAAA;KADF,CtBu+CF,AsBv+CE,ItBu+CE,CAAC7lL,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAE,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAE,CAAC;GsBx+CpE,CEm2CE,ExBsIF,GwBtIO,AF/1CA,CtBq+CH,CAACM,CAAC,CwBtIKqvC,ExBsIA,EwBtII,ExBsIA,CwBtIG,AxBsIFrvC,CwBtIG,AxBsIF,EwBtIIqvC,CxBsID,CAAC,EwBtII,CxBsIC7wC,EwBtIE05L,ExBsIE,CAACt2L,EwBtIE,CAAC84H,CxBsIC,CAAE,GwBtIE,CAACltI,AxBsIC,CAACwS,CAAE,CAAC,GwBtIC,AxBsIExB,EwBtIA6wC,ExBsII,CAACvuC,CwBtID,EAAE,EAAE,AxBsIE,CAAE,IAAI,CAACd,CAAE,CAAC;MwBrIhEo5L,AxBsIJ,IAAI,CAACjlL,CAAC,GAAK,IwBtIM,AxBsIF,CwBtIG1P,AxBsIF0P,AsBr+CEwzK,CtBq+CD,EsBr+Cf,CE+1CoB,AxBsIF,CwBtIGuQ,AxBsIF,AsBr+CE3T,GtBq+CG/lL,EwBtIE,CAACm3L,CxBsIC,CAAC/zL,IAAI,CAAE,IwBtIG,AxBsIC,CwBtIAytC,AxBsICl7B,CAAE,CAAC,EwBtIA,CAAC,AxBsIE3V,CwBtID,GxBsIK,AsBr+ClD,CtBq+CmDsC,CsBr+CD,ItBq+CM,CAAE,AsBr+C1D,CAAA,GtBq+C8D,CAACqT,CAAE,CAAC;MwBrIhEwiL,AxBsIJ,IAAI,CwBtIK,AxBsIJviL,CwBtIKo5K,AxBsIJ,GAAK,EwBtII,CAAC4L,CxBsID,CAAChlL,CAAC,GAAG,CAAC,GAAK5V,GwBtIG,CxBsIC,CwBtIC46L,AxBsIAx3L,IAAI,CAAE,IAAI,CAACwS,CAAE,CAAC,CwBtID,CAAC,CxBsIG5V,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACsT,CAAE,CAAC;MwBrIhE,AxBuIJ,AsBr+CIq3F,IAAJ,CAASggF,CE81CC9gL,CAAC,AxBuIJ,GwBvIOyuL,CxBuIH,AsBr+CX,EAAiB,QAAjB,EE81C2B,AF91CA,CE81CCrzL,GAAG,CAACgxL,OF91CM,SE81CU,CAAC;IxByIlD,EwBvIK,GF/1CG,CE+1CCpsL,CAAC,EF/1CE5M,CE+1CCk6L,IAAI,AF/1CLl6L,EE+1CO,CF/1CC,CAAjB,EAAoBA,KAAAA,GAAQ4pL,GAAAA,CAAI6B,eAAJ,CAAoBh8L,MAAhD,EAAwDuQ,KAAAA,EAAxD,EAAiE;EtBs+CnE,MwBtIMk6L,EF/1CEzO,EE+1CE,GAAG7+K,CAAC,SF/1CV,CAAoB5M,KAApB,CAAA,CAA2B+/K,SAA3B,GAAuC6J,GAAAA,CAAI6B,eAAJ,CAAoBzrL,KAApB,CAAA,CAA2BlW,KAAlE;ItBq+CJF,GAAA,CwBrIMoyM,YAAY,GAAG1qJ,IAAI;IxBqIzBxnD,EwBpII,EF91CE09L,CtBk+CN,EAED,GsBp+CG,GAAa,GtBo+ChBz/K,CsBp+CgB,CAAKje,KtBo+CrB,AsBp+CG,EtBo+CM;GsBz+CR,CEo2CE,AFp2CF,EtB2+CA,IAAI,CAAC6X,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;IwBrIf,ExBsIF,AsBp+CI89K,EE81CEuc,ExBsIF,CAAC/5L,CAAC,GAAG,CAAE,CsBp+CX,CAAgByrL,EE81CE,AxBsIH,CAACzrL,CAAC,CwBtII,CAAC,AF91CtB,CAAA,CE81CwB;MACpB,AxBsIJ,AsBp+CIw9K,ItBo+CA,CAACrpK,CAAC,GAAG,CAAE,CsBp+CX,CAAgBm3K,EtBo+CD,CAACn3K,CAAC,CsBp+CjB,CAAA;IE+1CE,CAAC,CAAC,AxBsIJ,AsBp+CIqpK,ItBo+CA,CAACppK,CAAC,GAAG,CAAE,CsBp+CX,CAAgBuiK,EtBo+CD,CAACviK,CAAC,EsBp+CjB,CAAA;MtBs+CA,AsBr+CIopK,OtBq+CG,IAAI,AsBr+CX,CAAgB+N,OAAhB,CAAA;IEg2CE,AxBuIH,EsBt+CK/N,IE+1CIwc,KAAK,EF/1Cb,CE+1CgB9B,AF/1CA1M,KE+1CK,CAAC9wD,CF/1CtB,CAAA,GE+1C2B,CAACq/D,YAAY,CAAC;ExBuIzC,EwBtIEC,EF91CExV,GE81CG,CAACyV,cAAc,GAAG,CF91CzB,CE81C2B,CF91CC;IEg2C1B,AxBoIFtyM,GAAA,CsBn+CQujM,CE+1CD,IAAIz9L,CAAC,CF/1CJy9L,EE+1CO,CAAC,AF/1CEh+K,EE+1CAzf,CAAC,GAAGyqM,EF/1CJhrL,CAASw+K,EE+1CA,CAAChxD,KAAK,CAACltI,KF/1ChB,CE+1CsB,AF/1CE,EE+1CAC,CAAC,EAAE,EAAE,WF/1C7B,CAAhB;ItBm+CF5F,EwBnII,EF/1CI8jM,CtBk+CR,EwBnIS,AxBqIV,IwBrIczmK,CAAC,GAAG,CAAC,AxBqInBnf,EwBrIqBmf,CAAC,CxBqIjBxgB,CAAC,CwBrImBwzL,CxBqIhB,CsBp+CAvM,GE+1CqB,AF/1CEz+K,CE+1CDwtH,KAAK,CAACjtI,CAAC,AF/1CNyf,CE+1CO,AF/1CEw+K,CE+1CDl+L,MAAM,EAAE03B,CAAC,EAAE,EAAE,AF/1CrB,CAAwB,kBAAxB,CAA7B;MtBs+CF,EwBtIM,AF/1CE0mK,KEg2CF,AxBqIC,IAAI,CAAClsL,CAAC,AsBr+CLksL,GtBq+CQlnL,AsBr+CMwI,CtBq+CL,CAACxN,CAAC,GAAG,EsBr+CAwN,CAASw+K,CtBq+CL,CAAC1rL,CAAC,GAAG0E,CAAC,CAAC1E,CAAC,GAAG,EsBr+Cf,CAAwB,CtBq+CL,CAACmU,CAAC,GAAGzP,CAAC,CAACyP,CAAC,GAAG,IAAI,CAACC,AsBr+CnC,CtBq+CoC,AsBr+CxD,GtBq+C2D1P,CAAC,CAAC0P,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C,EEi2CIuiL,KAAK,CAACnJ,KAAK,CAAC8L,UAAU,EAAEA,UAAU,CAAC;ExBqIvC,IwBpII5C,AF51CAjrF,IE41CI,AF51CR,CE41CSkjF,AF51CArD,IE41CI,CAACgO,AF51Cd,EAAgB,OAAhB,CE41CwB,CF51CC,CE41CCA,UAAU,CAAC,AF51CD;ItBg+CpC3xM,EwBnII4xM,CxBmIJ,iBwBnIsB,CAAC90L,EF51CEq5K,EE41CE,CAAC,IAAI,CAAC6X,CF51C/B,GAAmCpiL,IAAAA,CAAKE,EE41CE,CAACsmL,MF51CR,CAAepS,GAAAA,CAAIJ,CE41CC,CAAC,CAAC,UF51CP,CAAA,CAAf,EAAoCr7L,SAApC,EAA+C,CAA/C,CAAnC;ItB+9CFrE,EwBlII8uM,GxBkIJ,EwBlIS,AxBoIV,CwBpIWnJ,KAAK,CAAC+L,AF51CAzN,EtBg+CjBnoL,EsBh+CG,CAAA,CAAA,MtBg+CH,EAAY,IwBpIuB,EAAE41L,kBAAkB,CAAC;MACnD7C,AxBqIJ,IwBrIQ,CAAC/H,ExBqIF,EwBrIM,CAAC4K,CxBqIH,CAACl0L,SsBj+Ca2uC,GtBi+CD,CAAE,CsBj+CxB,CAAA,CE41C8B,AF51C9B,CtBi+C4B,CwBrIIulJ,AxBqIH/rM,MAAM,CAAC,CAAC,IAAI,CAAE,CAAC,IwBrIM,CAAC;IxBuItD,EwBtIK8rM,UAAU,CAACtzL,KAAK,CAACuzL,IF51CI9N,MAAvB,CAAA,CAAA,ME41CqC,EAAE+N,cAAc,CAAC;ExBsIxD,CsBt+CA,CAAA,EEi2CIA,cAAc,CAAC1zL,MAAM,CAAC0zL,cAAc,CAAC;IxBqIzC7xM,EwBpII8xM,AF31CAhuF,CtB+9CJ,GsB/9CA,CAASkrE,EE21CE,CAAClyK,GF31CZ,CE21CgB,CAACvC,AF31CA,CE21CC,CAAC,KF31CnB,EAA0B,YAAW;ItB+9CrCra,EwBnII8uM,EF31CE5K,CtB89CN,EwBnIS,AxBqIV,CwBrIWyB,AF31CR,CAAA,CAAA,GE21Ca,CAACiM,ExBqIjB1yL,KwBrIwB,EAAE0yL,GxBqIfjsM,IwBrIsB,CAAC,CxBqIjB,EAAG;GsBj+CnB,CAAA,EE61CIkpM,AxBsIJ,IwBtIQ,CAAC/H,ExBsIF,EwBtIM,CAAC8K,CxBsIH,CAAC91L,KwBtIS,EAAE81L,ExBsIF,CAAC,CAAC,CAACt0L,EwBtIM,CAAC,WxBsIO,CAAE3X,MAAO,CAAC;IAEjD,EwBvIK,AF11CAi+G,IAAJ,CAAS8/E,CE01CC4O,MF11CV,EAAkB,CE01CC,GAAGH,GF11CtB,EE01C2B,AF11CA,CE01CCC,WF11CU,GE01CI,CAACxsM,CAAC,CAAC;ExBuI7C,IwBtIIisM,EF11CIxQ,UAAAA,GAAa8C,CE01CD,CAACvnL,IAAI,AF11CJunL,CE01CK,AF11CE,IE01CE,CAAC2J,WAAW,CAACwE,SAAS,AF11C/B,CE01CgC,AF11CnD,CE01CoD;IxBsItDxyM,EwBrII,CxBqIJ,CsB/9CMuhM,IE01CIkR,MF11CR,EAAgB,IE01CI,GAAG,IAAI,CAAClB,sBAAsB,CAACiB,SAAS,CAAC;IxBqI/DtyM,EwBpII8xM,GxBoIJ,CsB99CQ1N,CtBg+CT,KsBh+CK,CAAW/C,EE01CE,CAACzkL,AxBsInBxE,IwBtIuB,CAACy5L,AxBsIlBh1L,CAAC,CsBh+CF,CtBg+CIsC,AsBh+CJ,KtBg+CS,EAAG,MwBtIuB,CAAC;MACpC2vL,AxBuIJ,IAAI,CwBvIK,AxBuIJj3L,CwBvIK8tL,AxBuIJ,IAAI,CwBvIK,AxBuIH9oL,CwBvIIi1L,AxBuIH,CAACj6L,CAAC,GAAG,IAAI,CAACA,CAAC,EwBvIK,EAAEi6L,AxBuIF3yL,KAAK,QwBvIU,CAAC;GF91C7C,CAAA,EE+1CI,AxBuIJ,IAAI,CAAChH,CwBvIKq6L,AxBuIJ,IAAI,CAAE31L,CAAC,CAAC1E,CAAC,CwBvII,ExBuID,CwBvIIo6L,GxBuIA,CAACp6L,CAAC,IAAKgH,GwBvIK,ExBuIA,CwBvIG2yL,aAAa,CAAC5zL,GAAG,CAAC2wL,IAAI,CAAC,CAAC,CAAC;MxBwI9D,AsBh+CIjrF,ItBg+CA,AsBh+CJ,CtBg+CKt3F,AsBh+CIq3K,CtBg+CH,IAAI,CAAE9mL,CAAC,AsBh+Cb,CtBg+CcyP,CAAC,AsBh+CG,GtBg+CA,IAAI,AsBh+CtB,CtBg+CuBA,CAAC,AsBh+CG,ItBg+CEnN,KAAK,GsBh+CI;ME01ClC,AxBuIJ,EsBh+CMi/K,EEy1CE,AxBuIJ,CwBvIKqU,AxBuIJlmL,CAAC,EsBh+CJ,CAAA,CtBg+CQ,AsBh+CR,CtBg+CU1P,CAAC,CAAC0P,CAAC,GAAG,IAAI,CAACA,CAAC,EwBvIK,CAACylL,CxBuID7yL,KwBvIO,AxBuIF,EwBvII8yL,OAAO,EAAEH,aAAa,EAAEU,SAAS,CAAC,CAAC,CAAC;GF11C1E,CAAA,EtBm+CA,OAAO,IAAI;IAEZ,EwBzIK,OAAOR,MAAM,CAACrsM,MAAM,EAAE;AFr1C5B,EtB89CE,MwBxIMqsM,CFt1CC3N,KEs1CK,CAACn7E,KAAK,CAAC,CAAC,EFt1CtB,CAAyB42E,GAAzB,EAA8B;ItB89C5BhgM,EwBvII,AFt1CAwkM,CtB69CJ,MsB79CIA,GAAAA,KAAAA,CAAJ;ItB69CAtkM,EwBrII,AFt1CA+gM,GtB29CJ,EAED,EwBvIYkR,OAAO,AxBuInB7yL,CwBvIoBzZ,AFt1CnB,GAAsB0f,GEs1CG,EAAE,GxBuIfhG,AsB79CUgG,CAASktK,CtB69CjB,EAAEjzK,EAAE,EAAEH,KAAK,CsB79CH,CtB69CM,AsB79CiB,KAAvB,CAAtB;MtB+9CA,EwBxIM6yL,CFr1CChgB,CtB69CH,CAACn6K,CAAC,EwBxIM,CAACzS,AxBwIJia,AsB79CT,CAAcygL,CtB69CH,CAACjoL,CwBxIK,AxBwIJ,AsB79CCioL,CEq1CImS,AFr1CAlR,EtB69CF,CAAEzhL,EAAE,CAACzH,CwBxII,AxBwIH,CwBxIIqxG,ExBwID7pG,EAAE,CwBxII,AxBwIHxH,CwBxII,AxBwIH,CwBxII,AFr1CnB,CEq1CoB,AFr1CAmiC,EtB69CA76B,GsB79ClC,EtB69CuC,AsB79CE;MEs1CrC,AxBwIJ,IAAI,CAAChH,AsB59CI,CtB49CH,GAAGkH,CsB99CgC,CtB89C9B,CAAClH,CAAC,GAAG,CAAEmH,EAAE,CAACnH,CAAC,GAAGkH,EAAE,CAAClH,CAAC,IAAKgH,KAAK;IwBvIrC,CAAC,CAAC,AxBwIJ,IAAI,CAACmN,CAAC,GAAGjN,CsB59CK,CtB49CH,CAACiN,CAAC,GAAG,AsB/9CyB,CtB+9CvBhN,EAAE,CAACgN,CAAC,GAAGjN,EAAE,CAACiN,CAAC,IAAKnN,KAAK;MACvC,IAAI,CAACoN,CAAC,AsB59CI,GtB49CDlN,EAAE,CAACkN,CAAC,AsBh+C4B,GtBg+CzB,CAAEjN,EAAE,CAACiN,CAAC,GAAGlN,EAAE,CAACkN,CAAC,IAAKpN,KAAK;IwBtIrC0yL,ExBwIF,MsB79CU,CtB69CH,IAAI,GwBxIO,CAACj1L,EF11CsB,EE01ClB,CAAC,IAAI,CAACkxL,WAAW,CAACoE,YAAY,CAAC,CAAC;IACrD,AxByIH,MwBzISK,IFr1CI,QEq1CQ,GAAG,IAAI,CAAClB,sBAAsB,CAACa,YAAY,CAAC;ExByIhE,CsBp+CA,CE41CEJ,AF51CF,aE41Ce,CAACl1L,IAAI,CAACi1L,gBAAgB,CAAC;IACpC/C,AxBuIFhvM,GAAA,EwBvIO,CAAC6lM,CFl1CCpB,IEk1CI,AFl1Cb,CEk1CcuN,AFl1CAp0L,CAAd,EAAiB,UEk1CU,EAAEo0L,aAAa,CAAC;IACzC,AxBsIF9xM,EsBx9CIqrH,GtBw9CJ,CwBtIQmnF,CxBwIT,QwBxIkB,CxBwIlBjzL,AsB19CG,CAAA,CEk1CkBgzL,AFl1ClB,KtB09CK11L,CAAC,EAAG,IwBxIqB,GAAGi1L,aAAa,CAAC5zL,GAAG,CAAC2wL,IAAI,CAAC;IAExD,ExBwIF,EsB19CMjnL,CEk1CC,IAAIhiB,AxBwIAiX,AsB19CT,CEk1CU,AxBwIA,CAAChF,CAAC,CwBxIC,AFl1CAysL,CEk1CC,EAAE1+L,CAAC,AxBwIA,GwBxIGosM,AFl1CP1N,CtB09CQ,CAACzsL,CAAC,AsB19CA6F,CAAAA,CAAE8uK,CEk1CC,CAAC7mL,AxBwIIkX,CAAC,CAAC1E,CAAC,EsB19ClC,CEk1CiC,EAAEvS,AxBwII,CwBxIH,EAAE,CxBwIK,CwBxIH,AxBwIIuS,CAAG,IAAM0E,CAAC,CAACyP,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMzP,CAAC,CAAC0P,CAAC,KAAK,IAAI,CAACA,CAAG;IAE9F,EwBzIK,EFl1CE+xK,EEk1CE9vK,KAAK,CFl1CX,CAAA,CEk1CcsjL,AFl1Cd,aEk1C2B,CAAC5zL,GAAG,CAAC8zL,MAAM,CAACpsM,CAAC,CAAC,CAAC,GAAG4sM,SAAS,CAAC,CAAC;ExByI1D,YsB19CY90L,CAAAA,CAAE8uK,OAAZ;ItB09CF1sL,EwBvII,CxBuIJ,GwBvIQ0uB,CFj1CC,IEi1CI,CFj1CX,GEi1Ce2gL,OAAO,EAAE;IxBuI1BnvM,IwBtIMob,CxBsIN,EAED,IwBxIc,CAACpB,GAAG,CAAE,AxBwIpBwF,UAAWlJ,KAAK,EAAEmJ,CwBxImB+O,KAAM,AxBwInB,GAAG,CAAC,EAAG,SwBxI0B2gL,OAAQ,EAAC,CAAC;MxB0IlE,EwBzIM3gL,ExByIF,CAAC3W,AsBz9CI2sL,CtBy9CH,CwBzIK,ExByIFluL,CwBzIK64L,GFh1Cd,CtBy9Cc,AsBz9Cd,CtBy9CgB1vL,CsBz9CI,CEg1CC,IxByIC,CAAE;MwBxIpB,AxByIJ,EsBz9CM45K,EtBy9CF,CAAClhL,CAAC,GAAG7B,IsBz9CP,CtBy9CY,AsBz9CIwpL,CtBy9CFrgL,EsBz9CEqgL,CAAIvB,GtBy9CA,GAAG,CAAC,CAAE,KsBz9C1B,EAAmCtB,GAAAA,CAAIgD,UAAvC,CAAA;MEk1CE,AxBwIJ,EsBz9CM10B,EEi1CE/8I,AxBwIJ,CAAClC,CAAC,EsBz9CJ,CEi1CW,AxBwIJhW,AsBz9CIynJ,IEi1CIqxC,CxBwIH,CAAE3vL,AsBz9Cd,EAAmB,GEi1CG,CxBwIF,CwBxII,ExBwID,CAAC,CAAE,EsBz9C1B,EAAgC8kL,IAAhC,CAAA;MtB09CF,EwBxIM,AFj1CAh5B,EtBy9CF,CAACh/I,CAAC,EwBxIMmO,AFj1CV,CtBy9COpkB,AsBz9CIynJ,IEi1CI,CxBwIH,CAAEt+I,AsBz9Cd,CEi1CkBuyL,CFj1CC,ItBy9CC,CwBxII,CAACpsM,CAAC,AxBwIH,CwBxII,AxBwIH,CAAE,AsBz9C1B,EAA8B4+L,QAA9B,CAAA;MtB29CF,EwBxIM,IAAIh2K,CxBwIH,IwBxIQ,AxBwIJ,IwBxIQ,IAAI,EAAE;IxB0I1B,MwBzIS,CFj1CCi2K,KEi1CK/9J,CAAC,GAAG,AFj1ClB,CAAmBhpB,CAAnB,EAAsB;EtB09CtB,IsBz9CI2tG,MEi1CM3wF,KAAK,GFj1Cb,CAAA,CAAA;ItBy9CF56B,GAAA,KwBvIUu4B,EFh1CE3a,CAAAA,CAAE8uK,EEg1CE,EAAEslB,GFh1ChB,UEg1C6B;IxBuI/B9xM,IsBr9CMm4L,CtBq9CN,EAED,CwBxIW3pK,IF/0CR,CAAasxK,GtBu9ChBpgL,AsBv9CgBogL,CAAIvB,OtBu9CXjoL,KAAK,CsBv9CX,EtBu9Cc,AsBv9CkB2mL,EtBu9ChB,CsBv9CgBA,CtBu9Cdx9K,AsBv9CkBwgL,MtBu9CZ,GAAG,CAAC,AsBv9C5B,CAAA,CtBu9C+B;MAEjC3pL,EsBx9CMstG,EE+0CE,CAAC,AxByIJ,CAAEnkG,AsBx9CL,CAASs+I,KtBw9CE,CAAE,AsBx9Cb,EAAiB,CtBw9CD,IAAI,CAAClmJ,CAAC,IsBx9CtB,EAA8B0sL,IAA9B,CAAA;MtBy9CFjuL,EsBx9CMstG,EE+0CE1gH,CxByIH,CAAEuc,AsBx9CL,CAASs+I,GE+0CG,CAAC34J,CxByIF,CsBx9CX,EE+0CiB,AxByIH,AsBx9CG,CE+0CCshC,AxByIH,CwBzII,AxByIF,CwBzIG,ExByIA,IAAI,AsBx9CxB,CtBw9CyBvuB,CAAC,AsBx9CEqsL,QAA5B,CAAA;MtBy9CFluL,EwBzIM,GxByID,AsBv9CI,CtBu9CFmJ,IsBv9CL,EtBu9CW,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC6M,CAAC;MwBxIxB,AxByIJhW,KAAK,CAAEmJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC8M,CAAC;IwBxI1B,ExB0IF,AsBv9CIq3F,IAAJ,CAASk8E,EtBu9CFxpL,CsBv9CEwpL,CAAIiB,GtBu9CD,YsBv9CZ,EAA8B,WAA9B,EAA2C0D,SAA3C,CAAA;EE80CA,ExB2ID,EsBx9CK7gF,IAAJ,CAASk8E,GAAAA,CAAIvB,aAAb,EAA4B,WAA5B,EAAyCkG,SAAzC,CAAA;EE80CA,AxB0IA,IsBt9CI59E,UAAJ,CAAek4E,YAAf,CAA4Be,GAAAA,CAAIiB,eAAhC,EAAiDjB,GAAAA,CAAIj5E,UAAJ,CAAem7E,iBAAhE,CAAA;AE60CF,IxByIEliM,GAAA;AwBxIF,AF30CA,ItBm9CEE,KAAA,AsBn9CO0kM,EtBq9CR,MsBr9CD,CAAkB5E,EtBq9CjBngL,CsBr9CD,EAAuB4M,CAAvB,EAA0B,ctBq9CJ3M,SAAS,EAAE1J,KAAK,EAAG;AwBzIzC,MxB2IE,AsBt9CI2wG,ItBs9CA,CAAChvG,CAAC,GAAG+H,CsBt9CT,CAAeo6B,KAAf,CAAqBpyB,CtBs9CH,CAAC/H,GsBt9CnB,CtBs9CuB,CAAE3J,CsBt9CIqW,CAAAA,GtBs9CE,AsBt9CE,CtBs9CD,GsBt9ChC;MtBu9CA,AsBp9CIuzK,GAAAA,CtBo9CA,AsBp9CIgB,CtBo9CH3oL,CAAC,GAAGyH,KsBp9CL,ItBo9Cc,AsBp9CIkgL,CtBo9CHhgL,EsBp9CGggL,CAAIrC,CtBo9CH,CAAEvnL,KAAM,CAAC,CsBp9ChC,EAAqC;EE20CrCu8L,IxB0IA,EsBp9CM3R,EtBo9CF,CAACx0K,CAAC,GAAG1M,GsBp9CP,CAAeo6B,GE00CGy4J,CAACC,CxB0IH,AsBp9ChB,CtBo9CiB3kL,AsBp9CInG,ItBo9CA,CAAE1R,AsBp9CvB,GE00C6B,AF10CAqW,CAAAA,CE00CEomL,AxB0IF,CAAC,CsBp9CG,IAAjC,KE00C0C,EAAEz6K,WAAW,EAAE06K,aAAa,EAAE;IACxE,ExB0IF,EwB1IMC,ExB0IF,CAACtmL,CAAC,GAAG3M,IwB1IQ,KxB0IC,CAACoO,IAAI,CAAE9X,KAAM,CAAC;IwBzI9B,ExB2IF,AsBr9CI4pL,EE00CEgT,CF10CFhT,CAAIvB,GtBq9CD,IAAI,CwB3IK,KF10ChB,EAAuB;IE20CrB,AxB4IH,IsBt9COA,EE00CEwU,QAAQ,GAAGL,AF10CjB,CAAkB14J,KAAlB,CAAwBpyB,GE00CG,CAACjiB,CF10C5B,GAAgC4mB,CAAAA,CE00CE,EF10CE,IAApC;EtBs9CF,EwB1IE,IAAIwmL,QAAQ,GAAG,CAAC,EAAE;IxB0IpBjzM,EwBzII,CxByIJ,MwBzIW6yM,WAAW;AFz0CxB,IE00CI,AxBwIF3yM,KAAA,AsBl9COohM,EtBo9CR,SAAApqL,KsBp9CD,CAA0B8oL,CtBo9CzB,EAAS,AsBp9CV,EAA+B6E,gBAA/B,EAAiD;IE40C7C,ExB0IF,AsBr9CMhU,EE20CAqiB,ExB0IF,CAACn7L,CAAC,EsBr9CA84K,CtBq9CGh6K,EsBr9CQ,CAAA,CE20CA,AxB0IJ,AsBr9Cb,CtBq9CcK,EwB1IM07L,IxB0IA,CAAC,CAAC,IwB1IQ,CAACA,UAAU,CAAC/sM,MAAM,GAAG,CAAC,CAAC;IACnD,ExB0IF,EwB1IMstM,CFz0CCxjB,CtBm9CH,CAACt3K,CAAC,CsBn9CN,CAAY2nL,CtBm9CHnpL,EsBn9CGmpL,CEy0CI,AFz0CAzC,CtBm9CH,CAACrmL,CwB1IK07L,KxB0IC,CAAC,CAAC,GwB1IO,CAAC,CAAC,CAAC,GFz0ChC,EAAqC,UAAS/rM,GAAT,EAAcuP,KAAd,EAAqB;IE00CxD28L,ExB0IF,EsBn9CQjO,EtBm9CJ,CAACt4K,CAAC,GwB1IO,AxB0IJ3V,GwB1IOuhB,CxB0IH,AsBn9CL0sK,CtBm9CM5tL,EsBn9CQ,CAAA,CAApB,EtBm9CkB,CAAC,CAAC,CwB1IK,CAACkH,GAAG,CAAC80L,WAAW,CAAC,GAAGJ,aAAa;IAE1D,ExByIF,EsBj9CQ9P,CEw0CD,CxByIH,CAACv2K,CAAC,CwBzIK2mL,EAAE,AxByIJv8L,GwBzIO,CAAC,AxByIJ,CAACK,CwBzIKk8L,AFx0CXpQ,EEw0Ca,CFv0CjBhD,EEu0CoBiT,AxByIJ,CAAC,AsBh9CjBjT,CtBg9CkB,AsBh9CdxC,MEu0CwB,EAAE4V,EAAE,EAAE,EAAE,wBFv0CpC,CAA2Ch9L,KAA3C,CADF;MEy0CE+8L,AxB0IJ,KsB/8CSxjB,EtB+8CF,EsB/8CL,CEq0CY,AFr0CAqT,CtB+8CH,EwB1IM4P,UAAU,AFr0CzB,CEq0C0BQ,CFr0CC,CEq0CC,CAAC,QFr0COz2F,UAAT,EAAqBpzD,QAArB,EAA+B;ItBi9C7D,EwB3IKypJ,UAAU,EFr0CEzpJ,CEq0CCnxB,OFr0Cb,CAAA,GEq0CwB,AFr0CAy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HSumL,KxBwHT,CuB9xFmB,KCsqFC;AxBwHpB,EwBvHA,AxBgHEzyM,MAAM,CAACE,IuBpxFEwwL,IvBoxFM;AAWnB,CuBlyFO,CCwqFL;AACF,AxB0HA,AuBnyFO,OAAA,CAAA,KAAA,GAAA,KAAA;AC0qFP,AxB0HA,AuB9xFA,IAAa70E,WAAAA,GAAc;AvB+xF3B,cuB9xFcs2E,UADa;AvBgyF3B,EwBzHE+gB,mBDrqFmB7d,CCqqFC6d,CAAC/3K,QAAQ,EAAE0tJ,IAAI,CDvqFV,CCuqFY;AxBqHvCzpL,IwBpHI,GxBoHJ,CAAA8sB,GwBpHW,IAAI,AxBoHf,CwBpHgB4hL,ExBoHhB5hL,EuBzxFoBypK,KvByxFpB,IwBpH6B,CAAClwL,MAAM,ADxqFT,GCwqFY,IAAI,CAACuiD,QAAQ,CAACviD,MAAM,EAAE;AxBoH7D,IAKMuoB,EwBxHA,IAAI,CAAC8/K,KxBwHO,IuB7xFE3X,ICqqFI,CAACjxL,IAAI,CAAC,IAAIsgM,EDzqFP,ECyqFW,CAAC,CAAC,CAAC,CxBwHvBv3K,iBAAA;EAAAxE,EwBvHd,OxBuHc,CAAAuE,QuB5xFEwoK,IvB4xFF,EAAAvoK,UuBjyFS,OvBiyFT;EAAA,EwBrHd,ExBqHcC,IwBrHRilL,GxBqHQ,EwBrHH,CxBqHGxpL,EwBrHA,IAAI,CAACq+B,ADtqFAuvI,KvB2xFL,CAAAvpK,EwBrHa,UxBqHb,CuBjyFS;EvBmyF1B,EwBtHG,MAAMolL,CxBsHTplL,SwBtHmB,GAAG,CxBsHTtG,EuB5xFYowK,CCsqFC,CAACgW,CxBsHT,GAAG,CAAC,EAAEnmL,MwBtHgB,AxBsHV,GAAG,CAAC,EAAEwG,CuBnyFV,MvBmyFiB,GAAG,CAAC,CAAC,EAAG;IwBpHhD,AxBoHgD,IAAAC,CwBpH3C,IAAI1oB,CAAC,AxBoHsC,GwBpHnC,CAAC,EAAEA,CAAC,CDvqFC2yL,ICuqFI,IAAI,CAACrwI,QAAQ,CAACviD,AD/qFb,MC+qFmB,EAAEC,CAAC,EAAE,EAAE;IxBoHDuC,EwBnH9C4gL,IAAI,CAAC4c,KAAK,CAAC0N,ExBmHmC,AuB1xFjC3a,GCuqFG,CAAC9yL,CAAC,CAAC,CxBmH2BsoB,CwBnHzBolL,UAAU,CAAC1tM,AxBmHc,CwBnHb,CAAC,CAAC;CDhrFlC,GvBqyFL0oB,EwBpHI+M,IxBoHJ,GAAAjN,CwBpHY,CAAC04K,IAAI,CAACwM,AxBoHlB,CAAAxxM,IAAA,KwBpH4B,CAAC8D,CAAC,CAAC,EAAE0tM,UAAU,CAAC1tM,CAAC,CAAC,CAAC;ADjrF1C,ICkrFH,AxBqHF0oB,GuBvyFK,CAAA,EvBuyFL,CAAKC,QuBvyFA,GAAA,GvBuyFc,GAAG,IAAI,CuBvyFrB;AAYP,ICwqFI,AxBqHFD,AuB7xFW0kK,ICwqFL,CAACib,ADxqFIjb,CvB6xFX,CAAKprK,CuB7xFY,IvB6xFP,GAAGA,KAAK,SwBrHa,GAAG,KAAK;EACvC,ADzqFmBorK,EvB8xFnB1kK,CuB9xFmB0kK,EAAKgS,GvB8xFxB,CAAKn9K,MAAM,GAAGA,MAAM;AuB9xFH,CAAZ,CC2qFLupL,ExBoHA9iL,MAAA,CAAKE,KAAK,EwBpHM4iL,CAACD,AxBoHJ,CAAC,MwBpHU,EAAED,OAAO,EAAE;AD3qF9B,IC4qFH,AxBqHF5iL,GuBjyFK,CAAA,EC4qFG45B,AxBqHR,CAAKz5B,AuBjyFA,GAAA,IC4qFW,AxBqHJ,CuBjyFP,EC4qFc,AxBqHJ,IwBrHQ,AxBqHJrC,CwBrHK87B,MxBqHE,CAAE,CwBrHI,AxBqHH,EAAE,CAAC,EAAEtgC,KAAK,EAAEC,MAAO,CAAC;AuB/xFnD,IC2qFIspL,AxBqHF7iL,AuBhyFWwxK,GAAAA,GvBgyFX,AuBhyFiB,CC2qFR,AxBqHJpxK,CwBrHKvT,GAAG,CAAC9R,MAAM,AxBqHJ,CwBrHK81H,ExBqHF,KAAK,EwBrHM,EAAE91H,MAAM,CAAC81H,SAAS,EAAE91H,MAAM,CAAC81H,SAAS,CAAC;ED3qFhD89D,EC4qFjBiU,AxBsHF5iL,CuBlyFmB2uK,EAAKgI,GvBkyFxB,CwBtHS,AxBsHJt2K,CwBtHKxT,GAAG,CAAC,CAAC9R,ExBsHF,GAAG,CwBtHK,CAAC81H,ExBsHF/yG,OwBtHW,AxBsHJ,CAAE,CwBtHI,AxBsHH,CwBtHI/iB,CxBsHF,CAAC,EAAEue,EwBtHK,CAACu3G,ExBsHD,EAAEt3G,KwBtHQ,CxBsHD,CwBtHG,AxBsHF,CwBtHGxe,MAAM,CAAC81H,SAAS,CAAC;AD5qFrD,CAAZ,GC8qFH,AxBsHF,IAAM53G,CwBtHC,IAAI3hB,AxBsHA,CwBtHC,ExBsHE,CwBtHC,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACsiD,QAAQ,CAACviD,MAAM,EAAEC,CAAC,EAAE,EAAE;AD9qF5C,MC+qFD,AxBqHYgiB,CuBpyFX,CAAA,GvBoyFgB,AuBpyFhB,CC+qFK/K,CAAC,AxBqHY+K,CuBpyFlB,EC+qFSsgC,CD/qFT,CvBoyFuB,MwBrHN,CAACtiD,CAAC,CAAC;AD7qF3B,IAAaq3L,EC+qFP,AxBmH0Bp1K,GuBlyFnBo1K,CC+qFHpgL,CAAC,CAAChF,AxBmH0B,AuBlyFnBotL,CC+qFN,CxBmH2Bp9K,CuBlyFjC,CC+qFSspL,IxBmH8B,GwBnHvB,CAACt5L,CAAC,EAAE;AD/qFpB,MvBkyFyC2W,CuBlyFzC,CCgrFC2iL,ADhrFD,GvBkyF8C,AuBlyF9C,EvBkyFgD,CuBlyFhD,CCgrFQ,CAACt5L,CAAC,EDhrFV,CCgrFagF,CAAC,CAAChF,CAAC;AD9qFvB,IvBgyFyD,AuBhyFzD,CvBgyF0D,CwBjHpD,CAAC,ED/qFP,GAAe,CC+qFF,IAAIgF,CAAC,CAAChF,CAAC,GAAGq5L,OAAO,CAACr5L,CAAC,EAAE;IxBmHhC,IwBlHMq5L,AxBkHD7iL,MuBlyFQ,CCgrFA,AxBkHD,CwBlHExW,AxBkHDsU,CwBlHE,GAAGtP,CAAC,CAAChF,CAAC,CxBkHA,KAAKxT,SAAS,EAAG;MwBjHlC,AxBmHH,oBuBpyFY;MCmrFT,AxBkHHkhB,IwBlHO1I,CAAC,CAAC1E,ADnrFG,CCmrFF,CxBkHF,CAAE,CwBlHGg5L,OAAO,CAACh5L,CAAC,EAAE,sExBkHqE,CAAC;MAC9FkW,EwBlHK8iL,EDprFO,GvBsyFL,CAACxqL,CwBlHI,CAACxO,CAAC,GAAG0E,CAAC,CAAC1E,CAAC,CxBkHF,GAAGkW,OAAO,CAAClC,QAAQ,KAAKzZ,YAAY,GAAGM,cAAc,GAAGD,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C,CAACysL,AxB2bJ,IwB3bQ,CAAC1sL,CAAC,EAAEgF,EAAE,CAAC;IACbqnB,CAAC,CAACqgK,AxB4bJ,IwB5bQ,AxB4bDtmK,CwB5bEpmB,CAAC,EAAEiF,AxB4bD,EwB5bG,CAAC,AxB4bDshB,KAAK,IAAQD,KAAK,GAAGD,IAAM,EAAG,OAAO,IAAI;IwB3brD,ExB6bF,IwB7bQ0Q,AxB6bHzQ,KwB7bQ,AxB6bH,GwB7bMxD,AxB6bHsD,EwB7bK,CAACviB,CxB6bF,EwB7bK,CAACif,CxB6bFz3B,CwB7bI,CAAC,GxB6bA,CAAE+6B,IAAK,CAAC,EAAGA,IAAI,GAAGE,KAAK;IwB5b/C,ExB8bF,IwB9bQ0Q,AxB8bHzQ,KwB9bQ,AxB8bH,GwB9bMzD,AxB8bHuD,EwB9bK,CAACxiB,CxB8bF,EwB9bK,CAACmB,CxB8bF3Z,CwB9bI,CAAC,GxB8bA,CAAEg7B,IAAK,CAAC,EAAGA,IAAI,GAAGE,KAAK;IwB7b/C,ExB+bF,IwB/bQ0Q,AxB+bHrQ,KwB/bQ,ExB+bD,CwB/bI9D,EAAE,CAACjf,AxB+bH,CAAC,EwB/bK,AxB+bF,CwB/bGoB,EAAE,CAAC;IACxB,IxBgcDuhB,EwBhcO0Q,GxBgcF,EwBhcO,CxBgcJ,CAAEjX,CwBhcKjb,EAAE,AxBgcJ,CwBhcKnB,AxBgcJ3G,GwBhcO,AxBgcJ,CwBhcK8H,AxBgcJiN,CAAC,CwBhcK,CAAC,CxBgcHsS,MAAM,CAACtS,CAAC,IAAK2U,OAAO;IwB/bzC,IxBgcDH,EwBhcO0Q,GxBgcF,EwBhcO,CxBgcJ,CAAElX,CwBhcKjb,EAAE,AxBgcJ,CwBhcKnB,AxBgcJ1G,GwBhcO,AxBgcJ,CwBhcK8H,AxBgcJgN,CAAC,CwBhcK,CAAC,CxBgcHsS,MAAM,CAACtS,CAAC,IAAK2U,OAAO;IwB/bzC,ExBicF,CAAC,CwBjcK7H,CAAC,IxBicA;IwBhcL,IAAIvc,AxBkcLgkB,CwBlcM,IxBkcD,GAAG,CAAEvG,GAAG,CAAC9iB,GAAG,CAAC8U,CAAC,GAAGsS,MAAM,CAACtS,CAAC,IAAK2U,OAAO;IwBjczC,IxBkcDH,GwBlcQ,CAAC1H,CAAC,AxBkcL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AAE,CAAC,CAAE,GAAGW,EAAE,GAAGmhB,EAAE,GAAG9f,CAAC;EwBvdtB8kM,MxBwdC9mM,EAAE,CAAE,CAAC,CAAE,GwBxdM8mM,AxBwdH,CwBxdG,AxBwdDttM,CAAC,CwBxdG,ExBwdAC,CAAC;IwBvdhB,IAAIstM,AxBydL/mM,EAAE,CAAE,CwBzdK,AxBydJ,CAAE,EwBzdK,CAAC,AxBydH8hB,EAAE,GAAGnhB,EAAE,GAAGqB,CAAC;IwBxdpB,IAAIglM,AxBydLhnM,EAAE,CAAE,CAAC,CwBzdK,AxBydH,GwBzdM,AxBydHY,CwBzdI,CxBydF,GAAGihB,EAAE,GAAG7f,CAAC;IwBxdpB,IAAIilM,AxBydLjnM,EAAE,CAAE,CwBzdK,CxBydH,CAAE,CwBzdI,CAAC,CxBydFzG,CAAC,GAAGE,CAAC;IwBxdf,ExB0dF,CAAC,CwB1dKytM,KAAK,AxB0dJ,GwB1dO,CAAC,AxB0dHl2L,KAAK,CAACtX,KAAK,KAAK,KAAK,EAAG;IwBzdlC,IAAIytM,AxB2dL,IwB3dS,AxB2dHplL,EAAE,CwB3dI,CAAC,CxB2dFtoB,CAAC,GAAGmD,CAAC;IwB1df,IAAIwqM,ExB0daplL,EAAE,CwB1dV,ExB0davoB,CwB1dV,AxB0dW,CwB1dV,ExB0dawI,CAAC;IwBzd3B,MAAMw7L,AxByduBx7K,EAAE,GAAGjgB,CwBzdtB,AxByduB,GwBzdpB,AxByduBpF,CAAC,GwBzdpB,CAAC8pM,QAAQ;IAC5B,MAAMvrE,AxBwdmCj5G,CwBxdlC,CxBwdoC,EwBxdjCu7K,CxBwdoCz7L,CAAC,GAAGC,CwBxdlC,AxBwdmC,CwBxdlCpd,MAAM;IACvB,IxBydDmb,EwBzdOmmL,AxBydL,CAAE,CAAC,CAAE,CwBzdI,ExBydDpkK,CwBzdI,CAAC,AxBydH,GwBzdMo5G,AxBydHj5G,CwBzdI,CxBydF,GAAG1oB,CAAC;IwBvdpB,IxBwdDwG,CwBxdM,CxBwdJ,CAAE,CAAC,CwBxdKlb,AxBwdH,CwBxdI,ExBwdDm9B,CwBxdI,CAAC,AxBwdH,EwBxdKn9B,CAAC,AxBwdH0U,CAAC,GAAGwoB,CwBxdIm5G,CAAC,AxBwdH,EwBxdKr2I,CAAC,EAAE,EAAE;MAC5B,ExBwdHkb,EAAE,CAAE,CwBxdKxG,AxBwdJ,CwBxdK,AxBwdH,GwBxdMikM,AxBwdHlkM,CAAC,GAAGyI,CAAC,CwBxdI,CAACld,CAAC,CAAC;MACnB,ExBydHkb,EAAE,CAAE,CwBzdKqnM,AxBydJ,CAAE,GAAG9tM,CAAC,EwBzdK,CxBydF0I,CAAC,CwBzdIzI,CAAC,CAAC+gB,QAAQ,CAACxjB,CAAC;MAC5BgwM,ExBydH/mM,EwBzdO,AxBydL,CAAE,CAAC,CAAE,CwBzdIqnM,ExBydD9tM,CAAC,GAAGqD,CwBzdI,AxBydH;MwBxdZoqM,ExBydHhnM,EAAE,CwBzdM,AxBydJ,CAAC,CAAE,EwBzdKqnM,CxBydF,CAAE7tM,CAAC,IwBzdM,GAAG6tM,OAAO;MAC1B,ExB0dHrnM,EAAE,CAAE,CwB1dKsnM,AxB0dJ,CAAE,GAAGtlL,EAAE,CwB1dI,ExB0dDxoB,CwB1dIA,AxB0dH,CwB1dI,CAAC+gB,CxB0dF0H,EAAE,KwB1dQ,CAAC5qB,CAAC;MAC5B4vM,ExB0dHjnM,EwB1dO,AxB0dL,CAAE,CAAC,CAAE,CwB1dIsnM,ExB0dDplL,EAAE,GwB1dM,AxB0dHH,EAAE,GAAGvoB,CAAC;MwBzdlB0tM,ExB0dHlnM,EAAE,CwB1dM,AxB0dJ,EAAE,CAAE,CwB1dIsnM,ExB0dD/tM,CAAC,GAAGE,CwB1dI,AxB0dH,GwB1dM6tM,OAAO;MAC1B,AxB2dJ,CAAC,KwB3dSC,CxB2dH,IAAKv2L,EwB3dK,GAAGxX,AxB2dH,CwB3dI,AxB2dHE,CwB3dI6gB,IxB2dC,IwB3dO,CAAC/O,AxB2dH,CwB3dI,IxB2dC,EAAG;MwB1dhC27L,ExB4dH,EwB5dO,ExB4dDplL,EwB5dKwlL,CxB4dH,GAAG9tM,CAAC,EwB5dM,CxB4dHmD,CAAC;MwB3dbwqM,IxB2deplL,CwB3dV,ExB2dY,EwB3dRulL,CxB2dW9tM,CAAC,GAAGwI,CAAC,CwB3dT,GAAGslM,OAAO;IAC5B,MxB0d6BtlL,GAAE,GAAGjgB,CAAC,GAAGpF,CAAC;IwBxdvC,MAAM4qM,AxBwdmC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CxB8cH,CAAE,CwB9cI,ExB8cDjyM,CAAC,CwB9cI,AxB8cHM,CwB9cI4xM,AxB8cH,SwB9cY,CAAC,CAAC;IAC3B,IxB8cDjpM,EwB9cOkpM,AxB8cL,CAAE,CwB9cK,CxB8cH,CAAE,CwB9cI,ExB8cDnyM,CAAC,CwB9cI,AxB8cHyU,CwB9cI29L,AxB8cH,SwB9cY,CAAC,CAAC;IAC3B,ExB+cF,CAAC,GwB/cOC,GxB+cD,CwB/cK,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;IAC/B,IxBgdDrpM,EAAE,CwBhdM,AxBgdJ,CwBhdKkpM,CxBgdH,CwBhdK,AxBgdH,GwBhdM3vM,AxBgdHxC,CwBhdI,AxBgdH,GwBhdMiyM,EAAE,GAAGxvM,CAAC,GAAG4vM,IAAI,GAAGjnM,CAAC;EACpC,MxBgdCnC,EAAE,CAAE,EAAE,CAAE,GAAG3I,CAAC;EwB/cb,MxBgdC2I,EAAE,CAAE,EAAE,CAAE,GAAGwL,CAAC;AwB/cf,MxBidE;AwBhdF,MxBkdE,OAAO,IAAI;IAEZ;EwBjdC29L,AxBidA,SwBjdSA,CAAA,EAAG;IACV,AxBgdFnqN,GAAA,GwBhdQsqN,EAAE,GAAG,IAAI,CAACb,gBAAgB;IAChC,AxB+cFvpN,KAAA,CwB/cQqqN,CxBidT,CwBjdW,GAAG,IAAI,CAACb,AxBidnBtmM,OAAA,EAAS,OwBjd0B;IAChC,ExBkdF,IwBldQiiL,EAAE,GAAG,IAAI,CAACA,EAAE;IAClB,ExBkdF,IwBldQn6D,AxBkdFlqH,EwBldI,AxBkdF,GwBldK,AxBkdF,IwBldM,AxBkdF,CwBldGkqH,AxBkdFrtH,EwBldI,MxBkdI;IwBjdtB,IxBmdDyC,EwBndOqgM,CxBmdJ,CwBndM,ExBmdH3/L,CwBndMqkL,CxBmdJ,CwBndM,AxBmdJ,CwBndK9pK,AxBmdJ,CAAE,OwBndU;IACtB,IxBkdc9a,EwBldR+pM,CxBkdW,CwBldT,ExBkdYxpM,CwBldTkqH,CxBkdW,CwBldT,AxBkdW,CwBldV3vG,AxBkdW,CAAE,OwBldL;IACtB,IxBid6B3a,GwBjdtB0pM,AxBidyB,EwBjdvB,CAACpB,AxBidyBloM,EAAE,CAAE,CAAC,CAAE,EwBjdzB,CAAC5C,GAAG,CAACuiM,EAAE,CAAC,GAAG4J,EAAE,CAACrB,OAAO,CAAC9qM,GAAG,CAACosM,EAAE,CAAC;EAChD,MxBgd8CzoL,GAAG,GAAG/gB,EAAE,CAAE,CAAC,CAAE;EwB/c3D,MxBgdCT,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;AwB/chB,QxB+ckBN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;AwB9c/B,QxB8ciCH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;QAAEghB,GAAG,GAAGhhB,EAAE,CAAE,CAAC,CAAE;EwB3c3DipM,MxB4cCzpM,GwB5cQypM,AxB4cL,CwB5cK,EAAG,AxB4cLjpM,EAAE,CAAE,CAAC,CAAE;IwB3cZ,IxB2ccL,EwB3cR2pM,CxB2cW,CwB3cT,ExB2cYtpM,CwB3cT,CxB2cW,CAAE,CAAC,CwB3cV,AxB2cY,CwB3cXyoM,gBAAgB;IAChC,IxB0c6B3oM,EwB1cvBypM,CxB0c0B,CwB1cxB,ExB0c2BvpM,CwB1cxB,CxB0c0B,CAAE,EwB1cxB,AxB0c0B,CwB1czB0oM,AxB0c2B,gBwB1cX;IAChC,IxByc6CznL,EwBzcvCojK,CxByc0C,CwBzcxC,ExByc2CrkL,CwBzcxC,CxByc0C,CAAE,EwBzcxC,AxByc0C,CwBzczCqkL,AxByc2C,EwBzczC;IAClB,IxBycDzjK,EwBzcOspG,CxBycJ,CwBzcM,ExBycHlqH,CwBzcM,CxBycJ,CAAE,EwBzcM,AxBycJ,CwBzcKkqH,AxBycH,EwBzcK;IAClB,IxBwcerpG,EwBxcTuxK,CxBwcY,CwBxcV,ExBwcapyL,CwBxcVqkL,CxBwcY,CwBxcV,AxBwcY,CwBxcX0R,CxBwca,CAAE,MwBxcP;IACtB,IxBuc+Bj1K,EwBvczB2oL,CxBuc4B,CwBvc1B,ExBuc6BzpM,CwBvc1BkqH,CxBuc4B,CwBvc1B,AxBuc4B,CwBvc3B6rE,CxBuc6B,CAAE,MwBvcvB;IACtB,IxBsc+C70K,EwBtczCwoL,CxBsc4C,CwBtc1C,ExBsc6C1pM,CwBtc1CqkL,CxBsc4C,CwBtc1C,AxBsc4C,CwBtc3C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B8gBD,EwB9gBM,EAAEC,KAAK,EAAE2M,QAAQ,EAAE;IAClC,AxB+gBH,IwB/gBOA,QAAQ,KAAK,KAAK,CAAC,EAAE;ExB+gB3B,IwB9gBIA,QAAQ,GAAG,GAAG;IAChB,AxB6gBFvpN,GAAA;IwB3gBE,AxB2gBFE,KwB3gBO,AxB2gBP,CwB3gBQy8M,CxB6gBT,IwB7gBc,EAAEC,GxB6gBhBp5K,EwB7gBqB,EAAE,CAAC,EAAE+lL,CxB6gBjBhuL,OwB7gByB,CAAC,AxB6gBlB,EAAEzJ,UAAU,EAAEtN,KAAK,EAAG;IwB5gBpC,ExB8gBF,EwB9gBM,CAACsnM,CxB8gBD9qM,EAAE,GAAG,IAAI,CwB9gBG,AxB8gBFnD,GwB9gBK,GAAG,ExB8gBA;IwB7gBtB,ExB+gBF,EwB/gBM,CAACspM,CxB+gBDpvM,CwB/gBG,AxB+gBF,GwB/gBK,AxB+gBF+Z,IwB/gBM8zK,IAAI,CAAC,CAAC,AxB+gBF,CAACn0K,EAAE;IwB9gBrB,IAAI,AxB8gBmBpZ,CwB9gBlB+uM,AxB8gBmB,EwB9gBjB,CxB8gBoBt1L,EwB9gBjB,IAAI8zK,IAAI,AxB8gBmB,CwB9gBlB,AxB8gBmBl0K,CwB9gBlB,CxB8gBoB;IwB7gBxC,IAAI,AxB6gBsClF,CwB7gBrCu/L,AxB6gBsC,EwB7gBpC,CxB6gBuCj6L,EwB7gBpC,IAAI8zK,IAAI,AxB6gBsC,CwB7gBrC,AxB6gBsCj0K,CwB7gBrC,CxB6gBuC;EwB5gB7D,MxB4gB+DlF,CAAC,GAAGqF,UAAU,CAACF,EAAE;EwB1gBhFm4L,IxB2gBA,IwB3gBQA,AxB2gBFvkL,CwB3gBGriB,CAAC,AxB2gBF,EwB3gBI,CxB2gBDpL,CAAC,GAAGA,CAAC;IwB1gBd,IxB0gBgB0tB,EwB1gBVlrB,AxB0gBY,CwB1gBX,ExB0gBclC,CwB1gBX,AxB0gBY,GAAGA,CwB1gBX,AxB0gBY,CwB1gBXkC,CAAC;IAChB,IxBygB4BmrB,EwBzgBtBlrB,AxBygBwB,CwBzgBvB,ExBygB0BgS,CwBzgBvB,AxBygBwB,GAAGA,CwBzgBvB,AxBygBwB,CwBzgBvBhS,CAAC;IAChB,ExBygBF,IwBzgBQ6qL,AxBygBF13K,EwBzgBI,AxBygBF,GwBzgBK,AxBygBF5V,CAAC,GwBzgBK,AxBygBFytB,CwBzgBG6/J,CxBygBD,CwBzgBG;IAClB,IxBwgBiBv3K,EwBxgBXo9G,AxBwgBa,EwBxgBX,CxBwgBcnzH,CAAC,CwBxgBZ,ExBwgBe0tB,EwBxgBX,AxBwgBa,CwBxgBZylG,EAAE;IAClB,IxBugB8Bn9G,EwBvgBxBo5L,AxBugB0B,EwBvgBxB,CxBugB2BpvM,CAAC,CwBvgBzB,ExBugB4B2tB,EwBvgBxB,AxBugB0B,CwBvgBzByhL,EAAE;IAClB,ExBugBF,IwBvgBQC,AxBugBFx5L,EwBvgBI,AxBugBF,GwBvgBK,AxBugBFvV,CAAC,GwBvgBK,AxBugBFotB,CwBvgBG2hL,CxBugBD,CwBvgBG;IAClB,IxBsgBiBp5L,EwBtgBXg+L,AxBsgBa,GAAG3zM,CwBtgBZ,AxBsgBa,GwBtgBV4zM,AxBsgBavmL,EAAE,4BwBtgBe;IAC3C,IxBqgB8B7X,EwBrgBxBq+L,AxBqgB0B,GAAG1/L,CwBrgBzB,AxBqgB0B,GwBrgBvB2/L,AxBqgB0BzmL,EAAE,4BwBrgBE;IAC3C,ExBqgBF,IwBrgBQ0tK,AxBqgBFztK,EwBrgBI,AxBqgBF,GwBrgBK0/J,AxBqgBF54K,CAAC,CwBrgBG,CAACsqL,CxBqgBDvxK,EAAE,KwBrgBO;IACtB,IxBogBiBI,EwBpgBX8kL,AxBogBa,EwBpgBX,CxBogBcj+L,CAAC,CwBpgBZ44K,EAAE,AxBogBa5/J,CwBpgBZkzE,CxBogBc,cwBpgBC;IAC7B0sF,EAAE,CAACt4J,CxBmgB2BlH,EAAE,EwBngBxB,CxBmgB2BpZ,CAAC,GAAGiZ,EAAE;IwBlgBzC2/J,EAAE,AxBogBJ,CwBpgBKoS,GxBogBCtzL,EAAE,CwBpgBG,ExBogBAK,KAAK,CAACzM,CAAC;IwBngBhB,IxBmgBkBqM,EwBngBZqmM,AxBmgBc,EwBngBZ,CxBmgBejmM,EwBngBZ0mH,EAAE,CAAC6rE,AxBmgBc,CAAC1+L,CAAC,MwBngBR;IACtB,IxBkgBgC8gB,EwBlgB1BwxL,AxBkgB4B,Ew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BF7xB,GAAA;IwBxiBEsqN,AxBwiBFpqN,EwBxiBI,CAACipN,ExBwiBL,EAED,MwB1iBgB,CAACrsM,ExB0iBjBzB,EwB1iBqB,CAACqyM,CxB0iBjB31M,CAAC,EAAEM,CwB1iBmB,AxB0iBlB,CwB1iBmB,CxB0iBjBmU,CAAC,EAAE9R,KAAK,GAAG,IAAI,CAACwX,MAAM,EAAG;IwBziBjCq4L,EAAE,AxB2iBJ,CwB3iBKpB,GxB2iBD,CAAC13L,EAAE,GAAG1Z,CwB3iBK,AxB2iBJ,CwB3iBK+E,IAAI,CAAC0wM,KAAK,CAAC;IACzB,ExB2iBF,IwB3iBQtqM,AxB2iBJ,CwB3iBK,AxB2iBJwO,EAAE,CwB3iBK7a,ExB2iBFwB,CAAC,CwB3iBK,CAACsC,GAAG,CAAC,IAAI,CAACkzM,QAAQ,CAAC,GAAG9B,EAAE,CAAC3tM,GAAG,CAACmvM,EAAE,CAAC;IAC9C,ExB2iBF,IwB3iBQvD,AxB2iBJ,CAACr4L,CwB3iBK,CxB2iBH,EwB3iBM,CxB2iBHnF,CAAC,EwB3iBM,CAACy9L,SAAS,CAAC,CAAC;IAC3B,ExB2iBF,IwB3iBQG,AxB2iBJ,CAACl4L,GwB3iBO,GAAG,AxB2iBJ,GAAGxX,CwB3iBK,CAAC2vM,GxB2iBD,QwB3iBY,CAAC,CAAC;IAC/B,ExB4iBF,IwB5iBQpuE,AxB4iBJ,CwB5iBK,AxB4iBJpqH,GwB5iBO,CAAC3O,CAAC,GAAG3I,CAAC,GAAGyvM,EAAE,GAAGxvM,AxB4iBJ,CwB5iBK,AxB4iBJ,CAAC,EwB5iBM2I,CAAC,GAAGinM,IAAI;IACpC,ExB6iBF,KwB7iBSnuE,CAAC,CxB6iBH,IAAI;EwB5iBX,ExB8iBD;AwB5iBD,ExB4iBE;AwB5iBDz8I,IxB4iBCQ,GwB5iBD,AxB4iBC,CwB5iBD4tN,kBAAA,GAAAA,kBAAA;AACD,IxB2iBE1tN,EwB3iBI4tN,GxB2iBJ,EAED,IwB7iBc,GAAG,ExB6iBjBjxM,EwB7iBqB+oL,IAAI,AxB6iBzB,CwB7iB0B,CAAC,AxB6iBnB;AwB5iBT,MAAMmoB,AxB8iBJ,OAAO,EwB9iBM,ExB8iBF,CwB9iBK,GxB8iBD,CwB9iBKn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C,OwBv2BS;IACxC,ExBu2BF,EwBv2BM,CAACC,CxBu2BH,CAACx8L,WAAW,CAAC3a,IAAI,CAAE+N,MAAM,CAAC4M,IwBv2BO,GAAG,CAAC,GxBu2BC,CAAC;IwBt2BzC,ExBw2BF,EwBx2BM,CAACy8L,CxBw2BH,CAAChpM,gBAAgB,GAAGL,KwBx2BS,CxBw2BH,CAACK,CwBx2BK,CAAC,cxBw2BU;IwBv2B7C,ExBw2BF,EwBx2BM,CAACipM,CxBw2BH,CAACtqL,awBx2BiB,GAAG,CAAC,KxBw2BC,GAAGhf,MAAM,CAACgf,sBAAsB;IwBv2BzD,ExBy2BF,EwBz2BM,CAACuqL,CxBy2BH,CAACtqL,MwBz2BU,GAAG,CAAC,WxBy2BO,GAAGjf,MAAM,CAACif,qBAAqB;IwBx2BvD,ExB02BF,EwB12BM,CAACuqL,CxB02BH,CAACpsL,MwB12BU,AxB02BJ,CAACN,EwB12BM,CAAC,CxB02BH,GAAG9c,MAAM,CAACod,MAAM,CAACN,IAAI;IwBz2BnC,ExB02BF,EwB12BM,CAAC2sL,CxB02BH,CAACtqL,OAAO,GAAGnf,IwB12BQ,ExB02BF,CwB12BK,AxB02BJmf,CwB12BK,MxB02BE;IwBz2B3B,ExB22BF,EwB32BM,CAAC6qL,CxB22BH,CAAC5qL,SwB32Ba,CxB22BH,EwB32BM,CAAC,AxB22BJpf,MAAM,CAACof,UAAU;IwB12BjC,ExB22BF,EwB32BM,CAAC6qL,CxB22BH,CAAC5qL,YwB32BgB,CxB22BH,EwB32BM,CAAC,AxB22BJrf,MAAM,CAACqf,aAAa;IwB12BvC,ExB42BF,EwB52BM,CAAC6qL,CxB42BH,CAAC5qL,WwB52Be,ExB42BF,CwB52BK,ExB42BFtf,EwB52BMo2L,IxB42BA,CAAC92K,QwB52BY,CAAC,CAAC,GxB42BD;IwB32BvC,ExB42BF,EwB52BM,CAAC6qL,CxB42BH,CAAC5qL,WAAW,CwB52BK,ExB42BFvf,CwB52BK,IAAIwiL,CxB42BH,CAACjjK,OwB52BW,CAAC,CAAC,ExB42BF;IwB32BnC,ExB62BF,EwB72BM,CAAC6qL,CxB62BH,CAAC5qL,SwB72Ba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g9BJ,CAAKxgJ,EwBh9BO,EAAE,IAAI,SxBg9BI,GAAG,GAAG;IAE5BmF,EwBj9BIwZ,KxBi9BJ,CAAK1e,KwBj9BU,AxBi9BL,EwBj9BO,CxBi9BJ,IAAI;IwBh9Bf,AxBi9BFkF,CwBj9BG,CAAC,KxBi9BJ,CAAKjF,cAAc,GAAG,GAAG;IwBh9BvB,AxBk9BFiF,KwBl9BO,CAAC,CxBk9BR,CAAKrE,WAAW,GAAG,IAAI;IAEvBqE,EwBn9BIj6C,IAAI,CxBm9BR,CwBn9BU0rI,AxBm9BL92F,KwBn9BU,CAACy2J,ExBm9BH,GwBn9BQ,AxBm9BL,CwBn9BMd,GxBm9BF;IwBl9BlB,AxBo9BFtwJ,CwBp9BG,CAAC,KxBo9BJ,CAAKlE,MAAM,GAAG,IAAI;IwBn9BhB,AxBo9BFkE,IwBp9BM,CAACtzB,ExBo9BP,CAAKqvB,CwBp9BM,GAAGrvB,GxBo9BF,CwBp9BM,ExBo9BH7b,iBAAiB;IwBn9B9B,AxBo9BFmvC,IwBp9BM,CAACs7I,ExBo9BP,CAAKr/I,KwBp9BU,GAAG1pB,IxBo9BD,GwBp9BQ,AxBo9BL,CwBp9BM+oK,AxBo9BL,QwBp9Ba;IAChC,AxBo9BFt7I,IwBp9BM,CAACq7I,ExBo9BP,CAAKn/I,KwBp9BU,GAAG3pB,OAAO,AxBo9BL,CwBp9BM8oK,ExBo9BH,IAAI,EwBp9BO;IAChC,AxBq9BFr7I,IwBr9BM,CAACwZ,ExBq9BP,CAAKzc,QwBr9Ba,CxBq9BJ,EwBr9BOxqB,CxBq9BJ,KAAK,CwBr9BM,CAACinC,WAAW;IAEtC,AxBo9BFxZ,IwBp9BMztB,GxBo9BN,CAAKyqB,GwBp9BQ,CAACq+I,QAAQ,KAAK,CxBo9BJ,GwBp9BQ,AxBo9BL,CAAC,CwBp9BM;IxBq9BjCr7I,EwBp9BI,IAAI,CAAC+jL,AxBo9BT,CAAK9mL,awBp9BkB,CAAC,CAAC,CxBo9BJ,GAAG,OAAO;IwBn9B7B,AxBo9BF+C,OAAA,CAAK9C,iBAAiB,GAAG,OAAO;IwBl9B9B,AxBo9BF8C,IwBp9BMztB,GxBo9BN,CAAK6qB,GwBp9BQ,AxBo9BL,CwBp9BMk+I,ExBo9BH,IAAI,EwBp9BO,KAAK,IAAI,EAA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,IAAI21I,eAAe,EAAE31I,CAAC,EAAE,EAAE;QACzC,ExBkvCJ,IwBlvCUwzB,CAAC,AxBkvCL,GwBlvCQxzB,CAAC,AxBkvCLA,GwBlvCQ21I,CxBkvCP,GAAG,CAAC,EAAEpqH,IAAE,GAAGjb,CwBlvCW,GAAG+wH,CxBkvCT,CAACj2G,CwBlvCW,IxBkvCN,EAAEprB,IAAC,GAAGurB,IAAE,EAAEvrB,IAAC,IAAI,CAAC,EAAG;QwBjvChD,IxBmvCH,EwBnvCSiX,CAAC,CxBmvCJimC,EwBnvCOzlB,AxBmvCL,CwBnvCM,ExBmvCHnnB,CwBnvCMoyH,IxBmvCD,CAACzoH,IAAI,CAAEja,IwBnvCQ,AxBmvCP,GwBnvCU+Q,AxBmvCP,CAAE,CAAC,EwBnvCQ,CAACC,EAAE,GAAG,CAAC;QAC1C,IxBmvCH,EwBnvCSiB,CAAC,CxBmvCJkrC,EwBnvCO,AxBmvCL,CwBnvCMtqB,ExBmvCHviB,IwBnvCS,CxBmvCJ,CAAC2J,CwBnvCMy7H,GxBmvCF,CwBnvCM,AxBmvCJ11I,GwBnvCO+Q,CxBmvCN,GwBnvCU,AxBmvCP,CwBnvCQ8D,AxBmvCN,CAAC,EwBnvCQ,CAACoC,CAAC,CAAC,IAAIlG,IAAI,CAAC8D,GAAG,CAAC2e,CAAC,CAAC;QACrD,IxBmvCH,EwBnvCSjhB,CAAC,CxBmvCJ6qC,EwBnvCO,AxBmvCL,CwBnvCMvqB,ExBmvCHviB,IwBnvCS,CxBmvCJ,CAAC2J,CwBnvCMy7H,GxBmvCF,CwBnvCM,AxBmvCJ11I,GwBnvCO+Q,CxBmvCN,GwBnvCU,AxBmvCP,CwBnvCQ8D,AxBmvCN,CAAC,EwBnvCQ,CAACoC,CAAC,CAAC,IAAIlG,IAAI,CAAC+D,GAAG,CAAC0e,CAAC,CAAC;QACrD,IxBovCH2qB,EwBpvCSz3B,AxBovCP,CwBpvCQ,AxBovCP3M,GwBpvCU27H,IAAI,GAAG3kI,IAAI,CAAC+D,GAAG,CAACmC,AxBovCP,CwBpvCQ,AxBovCNgnC,CwBpvCO,gBxBovCU,EAAEf,EAAG,CAAC;QwBnvC5CoF,IxBovCHlE,EAAE,CAACrkC,CwBpvCQ,CAACva,IAAI,CAACyS,CAAC,EAA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2vB,IwBt1CEjuC,CAAC,CxBs1CG,EwBt1CA,CAAC,AxBs1CE,aAAc,IAAIuE,OAAO,CAAC,CAAC;AAC1C,IwBt1CI,AxBs1CE2pC,IwBt1CEkjK,ExBs1CI,CwBt1CD,ExBs1CI,CwBt1CDsd,YxBs1Ce,IAAInqN,KwBt1CE,ExBs1CK,CAAC,CAAC;AAC1C,IwBt1CI8pN,AxBs1CElgL,MAAM,GwBt1CC,AxBs1CE,CwBt1CDk/K,SAAS,GAAG,AxBs1CG,IwBt1CC,AxBs1CG9oN,CwBt1CF8oN,MxBs1CS,CAAC,CAAC,CwBt1CF;AxBw1CxC,IwBv1CIgB,AxBu1CEjgL,QAAQ,CwBv1CD,CAACg/K,CxBu1CG,SwBv1CO,GAAG,CxBu1CI,GwBv1CA,CAACA,AxBu1CG9uM,OAAO,CAAC,CAAC,CwBv1CF;AxBw1C1C,IwBv1CI,AxBu1CE+vB,MwBv1CIsgL,ExBu1CI,GAAG,KwBv1CG,GAAGC,KxBu1CQ,IAAItwM,OAAO,CAAC,CAAC,UwBv1CO;AxBw1CnD,IwBt1CI,AxBs1CEgwB,OwBt1CK/Z,CxBs1CG,GAAG,CwBt1CD,GAAGs6L,SxBs1CY,IAAIvwM,GwBt1CA,CAACoX,GxBs1CM,CAAC,CwBt1CF,AxBs1CG,CwBt1CF,EAAE;AxBw1C5C,IAAM6Y,EwBv1CA6iK,GAAG,CAACnjN,MAAM,GAAG,CAAC,ExBu1CI,GAAG,aAAc,IAAIqwB,OAAO,CAAC,CAAC;AACtD,IAAMkwB,EwBv1CAmgL,UAAU,CAAC9nB,MAAM,CAAC54M,GxBu1CK,GwBv1CC,AxBu1CE,GwBv1CC,CAAC,SxBu1CY,IAAIqwB,OAAO,CAAC,CAAC;AAAC,IAEtDmwB,EwBx1CAqgL,ExBw1CI,CwBx1CD,CAACv6L,KAAK,EAAEw6L,SAAS,EAAEJ,MxBw1ClBjgL,IwBx1C4B,CAACm4J,IxBw1C7B,EwBx1CmC,EAAEuK,GAAG,CAAC;ExBw1CzCn/L,IwBv1CJ,KxBu1CI,CwBv1CE+8M,AxBu1CFvgL,IwBv1CM,AxBu1CN,EAAAC,CwBv1CS0iK,GAAG,CAACnjN,IxBu1Cb,EwBv1CmB;ExBu1CnB,IwBt1CJmjN,AxBs1CIziK,GwBt1CD,G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,CxBm4CX7lJ,IwBn4CgB,CAAC8kJ,AxBm4Cd,EAAEvmM,IAAC,GAAGurB,IAAE,EAAEvrB,CwBn4CoB,GxBm4CnB,IAAI,CAAC,EAAG;EwBl4ClDiiO,SAAS,CxBo4CN,CwBp4CQt6F,GxBo4CFlzH,EwBp4CO,AxBo4CN,CwBp4CO6yL,ExBo4CJh3L,GwBp4CS,CAAC+1L,CxBo4CL,CAACpsL,CwBp4CO,GAAG0tH,AxBo4CN,CAAE3nI,IwBp4CS,AxBo4CP,CwBp4CQsnM,AxBo4CP,KwBp4CY,CAACf,gBAAgB;EACzD27B,UxBo4CG,IAAMxtN,EAAC,CwBp4CO,EAAEizH,AxBo4CNr3H,KwBp4CW,AxBo4CN,CwBp4COg3L,AxBo4CNrtL,IAAI,CwBp4CO,AxBo4CLja,CwBp4CMmmM,GxBo4CL,GwBp4CW,AxBo4CR,CAAE,CAAC,CwBp4CQx+D,KAAK,CAAC2/D,KAAK,CAACd,WAAW;EAC/D27B,UxBo4CG,IwBp4CW,AxBo4CLxtN,EwBp4COgzH,AxBo4CN,GAAGr3H,EwBp4CQ,CAACg3L,ExBo4CJ,CAACrtL,EwBp4CQ,CAACosL,CxBo4CL,CAAErmM,CwBp4CM,GAAG2nI,AxBo4CR,GAAG,CAAE,CwBp4CQ,AxBo4CP,CwBp4CQ2/D,KAAK,CAACd,WAAW;EACzD47B,UxBq4CG7gL,OwBr4Cc,EAAEomF,GxBq4CJ,EwBr4CS,CAAC2/D,AxBq4CP5lJ,KwBr4CY,CAAC6kJ,gBAAgB,GAAG5+D,AxBq4CP,CAAE,IwBr4CU,AxBq4CN,CwBr4CO2/D,CxBq4CL1+J,IwBr4CU,CAAC49J,GxBq4CH,EAAErlJ,MwBr4CY,GxBq4CH,EAAEG,aAAa,EAAEh7B,EAAE,EAAEokB,GAAG,EAAEjY,MAAM,EAAEhe,EAAC,EAAEC,EAAC,EAAEC,EAAE,CAAC;EwBp4CjH0tN,UxBs4CG,IwBt4CW,AxBs4CN9gL,EwBt4CQomF,KAAK,CAAC2/D,IxBs4CF,CwBt4CO,CAACb,AxBs4CL,QwBt4Ca,GAAG9+D,KAAK,CAAC2/D,KAAK,CAACnB,MAAM;EACzDm8B,YxBu4CI/gL,CwBv4CS,EAAEomF,KAAK,CAAC2/D,GxBu4CL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89CA;QwB79C9BikL,AxB+9CL,GwB/9CQ,CAAC5wN,AxB+9CH0uC,IwB/9CO,CAACmqJ,ExB+9CD,GwB/9CM,AxB+9CH,CwB/9CI,CAACuK,ExB+9CD,CwB/9CI,AxB+9CHz2J,GwB/9CM,CAAC,IAAI,AxB+9CH,CwB/9CI,AxB+9CFrjD,CwB/9CG,CAAC,ExB+9CA,CAAE;QwB99ChC,AxB+9CL,IAAMlG,EwB/9CK0tO,EAAE,GAAGJ,AxB+9CL,GwB/9CQ,AxB+9CLhiL,CwB/9CM3lD,MAAM,AxB+9CL,CwB/9CM,AxB+9CL3F,CwB/9CM,IxB+9CD;QwB99CtB,AxBg+CL,IAAKA,EwBh+CM2tO,EAAE,GAAGH,AxBg+CN,GwBh+CS,CAAC7nO,AxBg+CN3F,MwBh+CY,CAAC,AxBg+CR,CwBh+CS,AxBg+CRyqB,SAAS,EAAG;QwB/9C3B6iN,ExBi+CJ9kN,CwBj+CO,CAAC1M,ExBi+CJ,CAACytC,MwBj+CY,CAAC,CAAC,AxBi+CN,CAAErjD,IAAI,CAAE,GAAG;QwBh+CpBsnO,GAAG,CAAC1xN,AxBi+CPja,IAAI,EAAE,GwBj+CU,AxBi+CP,CwBj+CQ,CAAC;QACf,IxBi+CH7B,EwBj+CS4tO,GxBi+CJ,CwBj+CQ,CxBi+CN5tO,EwBj+CSssO,KxBi+CJ,CAACzjN,MAAM,CwBj+CU,AxBi+CRC,CwBj+CS5K,GAAG,AxBi+CP,CwBj+CQovN,AxBi+CP,CAACl2N,EwBj+CS,CAAC;QACnC,ExBi+CJ,CAAC,GwBj+CSy2N,IAAI,GAAGvB,aAAa,CAACpuN,GAAG,CAACsvN,GAAG,CAAC;QAEnC,AxBi+CL,CAAC,GwBj+CQI,GxBi+CF,CwBj+CM,GAAGF,AxBi+CJ1tO,EwBj+CM,IAAI4tO,CxBi+CL,GwBj+CS,CxBi+CL5tO,EwBj+CQ,CAAC0tO,EAAE,ExBi+CN,CAAC7/L,CwBj+CSggM,IAAI,ExBi+CN,CwBj+CSF,CxBi+CN,CwBj+CQ,IAAIE,IAAI,GAAG,CAACF,EAAE,EAAE;UACtD,AxBk+CNnlN,IAAI,CAAC+gC,CwBl+COmjI,IAAI,GAAG/1K,AxBk+CN,CAAEzQ,GwBl+CQ,CAACyS,AxBk+CL,C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QAAA,CAAA/pD,IAAA;IAEAkqD,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,MwBx/CQ0gI,CxBw/CR,CAAK7qL,EwBx/CO,CAAC+a,CxBw/CJ,GwBx/CQ,AxBw/CL,CwBx/CM6jM,EAAE,CAAC,exBw/CU;IAE/Bz0J,MwBz/CQ0gI,CxBy/CR,CAAK5gI,EwBz/CO,CAACi7I,AxBy/CL,GAAGj7I,CwBz/CM,CAACoiL,CxBy/CJ,SwBz/Cc,EAAExhD,IAAI,CAAC;IxB0/CnC1gI,MwBz/CQ0gI,CxBy/CR,CAAKxgI,EwBz/CO,CAAC66I,CxBy/CJ,GwBz/CQ,AxBy/CL,CwBz/CMknC,AxBy/CL,UwBz/Ce,EAAEvhD,IAAI,CAAC;IxB2/CnC1gI,MwB1/CQ0gI,CxB0/CR,CAAKpmJ,EwB1/CO,CAACygK,CxB0/CJ,GwB1/CQ,AxB0/CLzgK,CwB1/CMgkL,EAAE,CxB0/CJ,CwB1/CM59B,IAAI,CAAC,CAAC,CAAC;IxB2/C7B1gI,OAAA,CAAKzlB,GAAG,GAAGA,GAAG;IACdylB,MwB1/CQ,CxB0/CR,CAAKG,IwB1/CSkiL,CxB0/CJ,GAAG,CwB1/CM,CxB0/CJ,EwB1/CO13N,IAAI,CAACgC,GAAG,CAACy1N,SAAS,CAAC;IxB4/CzCpiL,MwB3/CQ,CxB2/CR,CAAKD,IwB3/CSuiL,ExB2/CH,GwB3/CQ,AxB2/CLviL,GwB3/CQ2gI,GxB2/CF,CwB3/CM,CAAC/mL,MAAM,CAAC,CAAC;IxB4/CnCqmD,MwB1/CQ,CxB0/CR,CAAKI,EwB1/COiiL,ExB0/CH,GwB1/CQ,AxB0/CL,GwB1/CQ54B,CxB0/CJ,IwB1/CS,CAACl/L,CAAC,CAAC,CAAC5Q,MAAM,CAAC,CAAC,IAAI2oO,KAAK,GAAG/B,CAAC,EAAE;IxB4/CpDvgL,OAAA,CwB3/CU,AxB2/CLK,IwB3/CSo/K,KxB2/CA,GwB3/CQ,AxB2/CL,EwB3/CO,AxB2/CL,CAAC,CAAC;IACrBz/K,OAAA,CAAKM,EwB3/CO,OAAO,CxB2/CJ,GwB3/CQ,AxB2/CL,CAAC,CAAC,CAAC;YwB1/CX;IxB4/CVN,OAAA,CwB1/CUyiJ,AxB0/CLliJ,KwB1/CU,G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","file":"main_physics.c890ca64.js","sourceRoot":"..\\src","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '155';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().fromArray( [\n\t0.8224621, 0.0331941, 0.0170827,\n\t0.1775380, 0.9668058, 0.0723974,\n\t- 0.0000001, 0.0000001, 0.9105199\n] );\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().fromArray( [\n\t1.2249401, - 0.0420569, - 0.0196376,\n\t- 0.2249404, 1.0420571, - 0.0786361,\n\t0.0000001, 0.0000000, 1.0982735\n] );\n\nfunction DisplayP3ToLinearSRGB( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB );\n\n}\n\nfunction LinearSRGBToDisplayP3( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB();\n\n}\n\n// Conversions from <source> to Linear-sRGB reference space.\nconst TO_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertSRGBToLinear(),\n\t[ DisplayP3ColorSpace ]: DisplayP3ToLinearSRGB,\n};\n\n// Conversions to <target> from Linear-sRGB reference space.\nconst FROM_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertLinearToSRGB(),\n\t[ DisplayP3ColorSpace ]: LinearSRGBToDisplayP3,\n};\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToLinear = TO_LINEAR[ sourceColorSpace ];\n\t\tconst targetFromLinear = FROM_LINEAR[ targetColorSpace ];\n\n\t\tif ( sourceToLinear === undefined || targetFromLinear === undefined ) {\n\n\t\t\tthrow new Error( `Unsupported color space conversion, \"${ sourceColorSpace }\" to \"${ targetColorSpace }\".` );\n\n\t\t}\n\n\t\treturn targetFromLinear( sourceToLinear( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$b.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$b );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$b.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$a.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box$3.copy( object.boundingBox );\n\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box$3 );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( precise && geometry.attributes !== undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_vector$a.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\t\tthis.expandByPoint( _vector$a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\tthis.union( _box$3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$a );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$a.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$a ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$a ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$9 ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$9.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$9.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$9.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$9.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$9.dot( this.direction );\n\t\tconst d2 = _vector$9.dot( _vector$9 ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$9 ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = this.alphaHash;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = this.forceSinglePass;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$8 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\t\t\t\t_vector$8.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$7.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$7.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$7.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$7.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$5.copy( geometry.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$5.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$5, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn LinearSRGBColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$4.center.set( 0, 0, 0 );\n\t\t_sphere$4.radius = 0.7071067811865476;\n\t\t_sphere$4.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tanisotropyV /= material.anisotropy;\\n\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, vMapUv );\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst xr = renderer.xr;\n\t\tconst environmentBlendMode = xr.getEnvironmentBlendMode();\n\n\t\tswitch ( environmentBlendMode ) {\n\n\t\t\tcase 'opaque':\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'additive':\n\t\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'alpha-blend':\n\t\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase SRGBColorSpace:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t} else {\n\n\t\t\t\t// default error reporting\n\n\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\tfragmentErrors\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( colorSpace === SRGBColorSpace && forceLinearTransfer === false ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( colorSpace === SRGBColorSpace ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( colorSpace === SRGBColorSpace ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tfunction prepare( material, scene, object ) {\n\n\t\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentRenderState = renderStates.get( scene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$2.copy( this.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! texData ) return onError(); // TODO: Remove this when all loaders properly throw errors\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t}, handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\n\t\t\t\t}\n\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMouseParameters( event ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst x = event.clientX - rect.left;\n\t\t\tconst y = event.clientY - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( x / w ) * 2 - 1;\n\t\t\tmouse.y = - ( y / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( object ).sub( object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return obj instanceof Function;\n  }\n\n};\n\nexport default Common;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0\n            )\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    });\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n      this.__state.space = 'HEX';\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n      {\n        const clientX = params.x || params.clientX || 0;\n        const clientY = params.y || params.clientY || 0;\n        evt.initMouseEvent(eventType, params.bubbles || false,\n          params.cancelable || true, window, params.clickCount || 1,\n          0, // screen X\n          0, // screen Y\n          clientX, // client X\n          clientY, // client Y\n          false, false, false, false, 0, null);\n        break;\n      }\n      case 'KeyboardEvents':\n      {\n        const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n        common.defaults(params, {\n          cancelable: true,\n          ctrlKey: false,\n          altKey: false,\n          shiftKey: false,\n          metaKey: false,\n          keyCode: undefined,\n          charCode: undefined\n        });\n        init(eventType, params.bubbles || false,\n          params.cancelable, window,\n          params.ctrlKey, params.altKey,\n          params.shiftKey, params.metaKey,\n          params.keyCode, params.charCode);\n        break;\n      }\n      default:\n      {\n        evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n        break;\n      }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n      //      width: '120px',\n      textAlign: 'center',\n      //      padding: '4px',\n      //      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n","const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n          arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from './dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n    //    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n    //    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n  //    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          }\n        );\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n","/**\n * Records what objects are colliding with each other\n */\nclass ObjectCollisionMatrix {\n  /**\n   * The matrix storage.\n   */\n\n  /**\n   * @todo Remove useless constructor\n   */\n  constructor() {\n    this.matrix = {};\n  }\n  /**\n   * get\n   */\n\n\n  get(bi, bj) {\n    let {\n      id: i\n    } = bi;\n    let {\n      id: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    return `${i}-${j}` in this.matrix;\n  }\n  /**\n   * set\n   */\n\n\n  set(bi, bj, value) {\n    let {\n      id: i\n    } = bi;\n    let {\n      id: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    if (value) {\n      this.matrix[`${i}-${j}`] = true;\n    } else {\n      delete this.matrix[`${i}-${j}`];\n    }\n  }\n  /**\n   * Empty the matrix\n   */\n\n\n  reset() {\n    this.matrix = {};\n  }\n  /**\n   * Set max number of objects\n   */\n\n\n  setNumObjects(n) {}\n\n}\n\n/**\n * A 3x3 matrix.\n * Authored by {@link http://github.com/schteppe/ schteppe}\n */\nclass Mat3 {\n  /**\n   * A vector of length 9, containing all matrix elements.\n   */\n\n  /**\n   * @param elements A vector of length 9, containing all matrix elements.\n   */\n  constructor(elements) {\n    if (elements === void 0) {\n      elements = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    this.elements = elements;\n  }\n  /**\n   * Sets the matrix to identity\n   * @todo Should perhaps be renamed to `setIdentity()` to be more clear.\n   * @todo Create another function that immediately creates an identity matrix eg. `eye()`\n   */\n\n\n  identity() {\n    const e = this.elements;\n    e[0] = 1;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n    e[4] = 1;\n    e[5] = 0;\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 1;\n  }\n  /**\n   * Set all elements to zero\n   */\n\n\n  setZero() {\n    const e = this.elements;\n    e[0] = 0;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n    e[4] = 0;\n    e[5] = 0;\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 0;\n  }\n  /**\n   * Sets the matrix diagonal elements from a Vec3\n   */\n\n\n  setTrace(vector) {\n    const e = this.elements;\n    e[0] = vector.x;\n    e[4] = vector.y;\n    e[8] = vector.z;\n  }\n  /**\n   * Gets the matrix diagonal elements\n   */\n\n\n  getTrace(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const e = this.elements;\n    target.x = e[0];\n    target.y = e[4];\n    target.z = e[8];\n    return target;\n  }\n  /**\n   * Matrix-Vector multiplication\n   * @param v The vector to multiply with\n   * @param target Optional, target to save the result in.\n   */\n\n\n  vmult(v, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const e = this.elements;\n    const x = v.x;\n    const y = v.y;\n    const z = v.z;\n    target.x = e[0] * x + e[1] * y + e[2] * z;\n    target.y = e[3] * x + e[4] * y + e[5] * z;\n    target.z = e[6] * x + e[7] * y + e[8] * z;\n    return target;\n  }\n  /**\n   * Matrix-scalar multiplication\n   */\n\n\n  smult(s) {\n    for (let i = 0; i < this.elements.length; i++) {\n      this.elements[i] *= s;\n    }\n  }\n  /**\n   * Matrix multiplication\n   * @param matrix Matrix to multiply with from left side.\n   */\n\n\n  mmult(matrix, target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    const A = this.elements;\n    const B = matrix.elements;\n    const T = target.elements;\n    const a11 = A[0],\n          a12 = A[1],\n          a13 = A[2],\n          a21 = A[3],\n          a22 = A[4],\n          a23 = A[5],\n          a31 = A[6],\n          a32 = A[7],\n          a33 = A[8];\n    const b11 = B[0],\n          b12 = B[1],\n          b13 = B[2],\n          b21 = B[3],\n          b22 = B[4],\n          b23 = B[5],\n          b31 = B[6],\n          b32 = B[7],\n          b33 = B[8];\n    T[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    T[1] = a11 * b12 + a12 * b22 + a13 * b32;\n    T[2] = a11 * b13 + a12 * b23 + a13 * b33;\n    T[3] = a21 * b11 + a22 * b21 + a23 * b31;\n    T[4] = a21 * b12 + a22 * b22 + a23 * b32;\n    T[5] = a21 * b13 + a22 * b23 + a23 * b33;\n    T[6] = a31 * b11 + a32 * b21 + a33 * b31;\n    T[7] = a31 * b12 + a32 * b22 + a33 * b32;\n    T[8] = a31 * b13 + a32 * b23 + a33 * b33;\n    return target;\n  }\n  /**\n   * Scale each column of the matrix\n   */\n\n\n  scale(vector, target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    const e = this.elements;\n    const t = target.elements;\n\n    for (let i = 0; i !== 3; i++) {\n      t[3 * i + 0] = vector.x * e[3 * i + 0];\n      t[3 * i + 1] = vector.y * e[3 * i + 1];\n      t[3 * i + 2] = vector.z * e[3 * i + 2];\n    }\n\n    return target;\n  }\n  /**\n   * Solve Ax=b\n   * @param b The right hand side\n   * @param target Optional. Target vector to save in.\n   * @return The solution x\n   * @todo should reuse arrays\n   */\n\n\n  solve(b, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    // Construct equations\n    const nr = 3; // num rows\n\n    const nc = 4; // num cols\n\n    const eqns = [];\n    let i;\n    let j;\n\n    for (i = 0; i < nr * nc; i++) {\n      eqns.push(0);\n    }\n\n    for (i = 0; i < 3; i++) {\n      for (j = 0; j < 3; j++) {\n        eqns[i + nc * j] = this.elements[i + 3 * j];\n      }\n    }\n\n    eqns[3 + 4 * 0] = b.x;\n    eqns[3 + 4 * 1] = b.y;\n    eqns[3 + 4 * 2] = b.z; // Compute right upper triangular version of the matrix - Gauss elimination\n\n    let n = 3;\n    const k = n;\n    let np;\n    const kp = 4; // num rows\n\n    let p;\n\n    do {\n      i = k - n;\n\n      if (eqns[i + nc * i] === 0) {\n        // the pivot is null, swap lines\n        for (j = i + 1; j < k; j++) {\n          if (eqns[i + nc * j] !== 0) {\n            np = kp;\n\n            do {\n              // do ligne( i ) = ligne( i ) + ligne( k )\n              p = kp - np;\n              eqns[p + nc * i] += eqns[p + nc * j];\n            } while (--np);\n\n            break;\n          }\n        }\n      }\n\n      if (eqns[i + nc * i] !== 0) {\n        for (j = i + 1; j < k; j++) {\n          const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n          np = kp;\n\n          do {\n            // do ligne( k ) = ligne( k ) - multiplier * ligne( i )\n            p = kp - np;\n            eqns[p + nc * j] = p <= i ? 0 : eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n          } while (--np);\n        }\n      }\n    } while (--n); // Get the solution\n\n\n    target.z = eqns[2 * nc + 3] / eqns[2 * nc + 2];\n    target.y = (eqns[1 * nc + 3] - eqns[1 * nc + 2] * target.z) / eqns[1 * nc + 1];\n    target.x = (eqns[0 * nc + 3] - eqns[0 * nc + 2] * target.z - eqns[0 * nc + 1] * target.y) / eqns[0 * nc + 0];\n\n    if (isNaN(target.x) || isNaN(target.y) || isNaN(target.z) || target.x === Infinity || target.y === Infinity || target.z === Infinity) {\n      throw `Could not solve equation! Got x=[${target.toString()}], b=[${b.toString()}], A=[${this.toString()}]`;\n    }\n\n    return target;\n  }\n  /**\n   * Get an element in the matrix by index. Index starts at 0, not 1!!!\n   * @param value If provided, the matrix element will be set to this value.\n   */\n\n\n  e(row, column, value) {\n    if (value === undefined) {\n      return this.elements[column + 3 * row];\n    } else {\n      // Set value\n      this.elements[column + 3 * row] = value;\n    }\n  }\n  /**\n   * Copy another matrix into this matrix object.\n   */\n\n\n  copy(matrix) {\n    for (let i = 0; i < matrix.elements.length; i++) {\n      this.elements[i] = matrix.elements[i];\n    }\n\n    return this;\n  }\n  /**\n   * Returns a string representation of the matrix.\n   */\n\n\n  toString() {\n    let r = '';\n    const sep = ',';\n\n    for (let i = 0; i < 9; i++) {\n      r += this.elements[i] + sep;\n    }\n\n    return r;\n  }\n  /**\n   * reverse the matrix\n   * @param target Target matrix to save in.\n   * @return The solution x\n   */\n\n\n  reverse(target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    // Construct equations\n    const nr = 3; // num rows\n\n    const nc = 6; // num cols\n\n    const eqns = reverse_eqns;\n    let i;\n    let j;\n\n    for (i = 0; i < 3; i++) {\n      for (j = 0; j < 3; j++) {\n        eqns[i + nc * j] = this.elements[i + 3 * j];\n      }\n    }\n\n    eqns[3 + 6 * 0] = 1;\n    eqns[3 + 6 * 1] = 0;\n    eqns[3 + 6 * 2] = 0;\n    eqns[4 + 6 * 0] = 0;\n    eqns[4 + 6 * 1] = 1;\n    eqns[4 + 6 * 2] = 0;\n    eqns[5 + 6 * 0] = 0;\n    eqns[5 + 6 * 1] = 0;\n    eqns[5 + 6 * 2] = 1; // Compute right upper triangular version of the matrix - Gauss elimination\n\n    let n = 3;\n    const k = n;\n    let np;\n    const kp = nc; // num rows\n\n    let p;\n\n    do {\n      i = k - n;\n\n      if (eqns[i + nc * i] === 0) {\n        // the pivot is null, swap lines\n        for (j = i + 1; j < k; j++) {\n          if (eqns[i + nc * j] !== 0) {\n            np = kp;\n\n            do {\n              // do line( i ) = line( i ) + line( k )\n              p = kp - np;\n              eqns[p + nc * i] += eqns[p + nc * j];\n            } while (--np);\n\n            break;\n          }\n        }\n      }\n\n      if (eqns[i + nc * i] !== 0) {\n        for (j = i + 1; j < k; j++) {\n          const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n          np = kp;\n\n          do {\n            // do line( k ) = line( k ) - multiplier * line( i )\n            p = kp - np;\n            eqns[p + nc * j] = p <= i ? 0 : eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n          } while (--np);\n        }\n      }\n    } while (--n); // eliminate the upper left triangle of the matrix\n\n\n    i = 2;\n\n    do {\n      j = i - 1;\n\n      do {\n        const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n        np = nc;\n\n        do {\n          p = nc - np;\n          eqns[p + nc * j] = eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n        } while (--np);\n      } while (j--);\n    } while (--i); // operations on the diagonal\n\n\n    i = 2;\n\n    do {\n      const multiplier = 1 / eqns[i + nc * i];\n      np = nc;\n\n      do {\n        p = nc - np;\n        eqns[p + nc * i] = eqns[p + nc * i] * multiplier;\n      } while (--np);\n    } while (i--);\n\n    i = 2;\n\n    do {\n      j = 2;\n\n      do {\n        p = eqns[nr + j + nc * i];\n\n        if (isNaN(p) || p === Infinity) {\n          throw `Could not reverse! A=[${this.toString()}]`;\n        }\n\n        target.e(i, j, p);\n      } while (j--);\n    } while (i--);\n\n    return target;\n  }\n  /**\n   * Set the matrix from a quaterion\n   */\n\n\n  setRotationFromQuaternion(q) {\n    const x = q.x;\n    const y = q.y;\n    const z = q.z;\n    const w = q.w;\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    const e = this.elements;\n    e[3 * 0 + 0] = 1 - (yy + zz);\n    e[3 * 0 + 1] = xy - wz;\n    e[3 * 0 + 2] = xz + wy;\n    e[3 * 1 + 0] = xy + wz;\n    e[3 * 1 + 1] = 1 - (xx + zz);\n    e[3 * 1 + 2] = yz - wx;\n    e[3 * 2 + 0] = xz - wy;\n    e[3 * 2 + 1] = yz + wx;\n    e[3 * 2 + 2] = 1 - (xx + yy);\n    return this;\n  }\n  /**\n   * Transpose the matrix\n   * @param target Optional. Where to store the result.\n   * @return The target Mat3, or a new Mat3 if target was omitted.\n   */\n\n\n  transpose(target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    const M = this.elements;\n    const T = target.elements;\n    let tmp; //Set diagonals\n\n    T[0] = M[0];\n    T[4] = M[4];\n    T[8] = M[8];\n    tmp = M[1];\n    T[1] = M[3];\n    T[3] = tmp;\n    tmp = M[2];\n    T[2] = M[6];\n    T[6] = tmp;\n    tmp = M[5];\n    T[5] = M[7];\n    T[7] = tmp;\n    return target;\n  }\n\n}\nconst reverse_eqns = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n/**\n * 3-dimensional vector\n * @example\n *     const v = new Vec3(1, 2, 3)\n *     console.log('x=' + v.x) // x=1\n */\n\nclass Vec3 {\n  constructor(x, y, z) {\n    if (x === void 0) {\n      x = 0.0;\n    }\n\n    if (y === void 0) {\n      y = 0.0;\n    }\n\n    if (z === void 0) {\n      z = 0.0;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n  /**\n   * Vector cross product\n   * @param target Optional target to save in.\n   */\n\n\n  cross(vector, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const vx = vector.x;\n    const vy = vector.y;\n    const vz = vector.z;\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    target.x = y * vz - z * vy;\n    target.y = z * vx - x * vz;\n    target.z = x * vy - y * vx;\n    return target;\n  }\n  /**\n   * Set the vectors' 3 elements\n   */\n\n\n  set(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  /**\n   * Set all components of the vector to zero.\n   */\n\n\n  setZero() {\n    this.x = this.y = this.z = 0;\n  }\n  /**\n   * Vector addition\n   */\n\n\n  vadd(vector, target) {\n    if (target) {\n      target.x = vector.x + this.x;\n      target.y = vector.y + this.y;\n      target.z = vector.z + this.z;\n    } else {\n      return new Vec3(this.x + vector.x, this.y + vector.y, this.z + vector.z);\n    }\n  }\n  /**\n   * Vector subtraction\n   * @param target Optional target to save in.\n   */\n\n\n  vsub(vector, target) {\n    if (target) {\n      target.x = this.x - vector.x;\n      target.y = this.y - vector.y;\n      target.z = this.z - vector.z;\n    } else {\n      return new Vec3(this.x - vector.x, this.y - vector.y, this.z - vector.z);\n    }\n  }\n  /**\n   * Get the cross product matrix a_cross from a vector, such that a x b = a_cross * b = c\n   *\n   * See {@link https://www8.cs.umu.se/kurser/TDBD24/VT06/lectures/Lecture6.pdf Umeå University Lecture}\n   */\n\n\n  crossmat() {\n    return new Mat3([0, -this.z, this.y, this.z, 0, -this.x, -this.y, this.x, 0]);\n  }\n  /**\n   * Normalize the vector. Note that this changes the values in the vector.\n    * @return Returns the norm of the vector\n   */\n\n\n  normalize() {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const n = Math.sqrt(x * x + y * y + z * z);\n\n    if (n > 0.0) {\n      const invN = 1 / n;\n      this.x *= invN;\n      this.y *= invN;\n      this.z *= invN;\n    } else {\n      // Make something up\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return n;\n  }\n  /**\n   * Get the version of this vector that is of length 1.\n   * @param target Optional target to save in\n   * @return Returns the unit vector\n   */\n\n\n  unit(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    let ninv = Math.sqrt(x * x + y * y + z * z);\n\n    if (ninv > 0.0) {\n      ninv = 1.0 / ninv;\n      target.x = x * ninv;\n      target.y = y * ninv;\n      target.z = z * ninv;\n    } else {\n      target.x = 1;\n      target.y = 0;\n      target.z = 0;\n    }\n\n    return target;\n  }\n  /**\n   * Get the length of the vector\n   */\n\n\n  length() {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Get the squared length of the vector.\n   */\n\n\n  lengthSquared() {\n    return this.dot(this);\n  }\n  /**\n   * Get distance from this point to another point\n   */\n\n\n  distanceTo(p) {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const px = p.x;\n    const py = p.y;\n    const pz = p.z;\n    return Math.sqrt((px - x) * (px - x) + (py - y) * (py - y) + (pz - z) * (pz - z));\n  }\n  /**\n   * Get squared distance from this point to another point\n   */\n\n\n  distanceSquared(p) {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const px = p.x;\n    const py = p.y;\n    const pz = p.z;\n    return (px - x) * (px - x) + (py - y) * (py - y) + (pz - z) * (pz - z);\n  }\n  /**\n   * Multiply all the components of the vector with a scalar.\n   * @param target The vector to save the result in.\n   */\n\n\n  scale(scalar, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    target.x = scalar * x;\n    target.y = scalar * y;\n    target.z = scalar * z;\n    return target;\n  }\n  /**\n   * Multiply the vector with an other vector, component-wise.\n   * @param target The vector to save the result in.\n   */\n\n\n  vmul(vector, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.x = vector.x * this.x;\n    target.y = vector.y * this.y;\n    target.z = vector.z * this.z;\n    return target;\n  }\n  /**\n   * Scale a vector and add it to this vector. Save the result in \"target\". (target = this + vector * scalar)\n   * @param target The vector to save the result in.\n   */\n\n\n  addScaledVector(scalar, vector, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.x = this.x + scalar * vector.x;\n    target.y = this.y + scalar * vector.y;\n    target.z = this.z + scalar * vector.z;\n    return target;\n  }\n  /**\n   * Calculate dot product\n   * @param vector\n   */\n\n\n  dot(vector) {\n    return this.x * vector.x + this.y * vector.y + this.z * vector.z;\n  }\n\n  isZero() {\n    return this.x === 0 && this.y === 0 && this.z === 0;\n  }\n  /**\n   * Make the vector point in the opposite direction.\n   * @param target Optional target to save in\n   */\n\n\n  negate(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    return target;\n  }\n  /**\n   * Compute two artificial tangents to the vector\n   * @param t1 Vector object to save the first tangent in\n   * @param t2 Vector object to save the second tangent in\n   */\n\n\n  tangents(t1, t2) {\n    const norm = this.length();\n\n    if (norm > 0.0) {\n      const n = Vec3_tangents_n;\n      const inorm = 1 / norm;\n      n.set(this.x * inorm, this.y * inorm, this.z * inorm);\n      const randVec = Vec3_tangents_randVec;\n\n      if (Math.abs(n.x) < 0.9) {\n        randVec.set(1, 0, 0);\n        n.cross(randVec, t1);\n      } else {\n        randVec.set(0, 1, 0);\n        n.cross(randVec, t1);\n      }\n\n      n.cross(t1, t2);\n    } else {\n      // The normal length is zero, make something up\n      t1.set(1, 0, 0);\n      t2.set(0, 1, 0);\n    }\n  }\n  /**\n   * Converts to a more readable format\n   */\n\n\n  toString() {\n    return `${this.x},${this.y},${this.z}`;\n  }\n  /**\n   * Converts to an array\n   */\n\n\n  toArray() {\n    return [this.x, this.y, this.z];\n  }\n  /**\n   * Copies value of source to this vector.\n   */\n\n\n  copy(vector) {\n    this.x = vector.x;\n    this.y = vector.y;\n    this.z = vector.z;\n    return this;\n  }\n  /**\n   * Do a linear interpolation between two vectors\n   * @param t A number between 0 and 1. 0 will make this function return u, and 1 will make it return v. Numbers in between will generate a vector in between them.\n   */\n\n\n  lerp(vector, t, target) {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    target.x = x + (vector.x - x) * t;\n    target.y = y + (vector.y - y) * t;\n    target.z = z + (vector.z - z) * t;\n  }\n  /**\n   * Check if a vector equals is almost equal to another one.\n   */\n\n\n  almostEquals(vector, precision) {\n    if (precision === void 0) {\n      precision = 1e-6;\n    }\n\n    if (Math.abs(this.x - vector.x) > precision || Math.abs(this.y - vector.y) > precision || Math.abs(this.z - vector.z) > precision) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Check if a vector is almost zero\n   */\n\n\n  almostZero(precision) {\n    if (precision === void 0) {\n      precision = 1e-6;\n    }\n\n    if (Math.abs(this.x) > precision || Math.abs(this.y) > precision || Math.abs(this.z) > precision) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Check if the vector is anti-parallel to another vector.\n   * @param precision Set to zero for exact comparisons\n   */\n\n\n  isAntiparallelTo(vector, precision) {\n    this.negate(antip_neg);\n    return antip_neg.almostEquals(vector, precision);\n  }\n  /**\n   * Clone the vector\n   */\n\n\n  clone() {\n    return new Vec3(this.x, this.y, this.z);\n  }\n\n}\nVec3.ZERO = new Vec3(0, 0, 0);\nVec3.UNIT_X = new Vec3(1, 0, 0);\nVec3.UNIT_Y = new Vec3(0, 1, 0);\nVec3.UNIT_Z = new Vec3(0, 0, 1);\nconst Vec3_tangents_n = new Vec3();\nconst Vec3_tangents_randVec = new Vec3();\nconst antip_neg = new Vec3();\n\n/**\n * Axis aligned bounding box class.\n */\nclass AABB {\n  /**\n   * The lower bound of the bounding box\n   */\n\n  /**\n   * The upper bound of the bounding box\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.lowerBound = new Vec3();\n    this.upperBound = new Vec3();\n\n    if (options.lowerBound) {\n      this.lowerBound.copy(options.lowerBound);\n    }\n\n    if (options.upperBound) {\n      this.upperBound.copy(options.upperBound);\n    }\n  }\n  /**\n   * Set the AABB bounds from a set of points.\n   * @param points An array of Vec3's.\n   * @return The self object\n   */\n\n\n  setFromPoints(points, position, quaternion, skinSize) {\n    const l = this.lowerBound;\n    const u = this.upperBound;\n    const q = quaternion; // Set to the first point\n\n    l.copy(points[0]);\n\n    if (q) {\n      q.vmult(l, l);\n    }\n\n    u.copy(l);\n\n    for (let i = 1; i < points.length; i++) {\n      let p = points[i];\n\n      if (q) {\n        q.vmult(p, tmp$1);\n        p = tmp$1;\n      }\n\n      if (p.x > u.x) {\n        u.x = p.x;\n      }\n\n      if (p.x < l.x) {\n        l.x = p.x;\n      }\n\n      if (p.y > u.y) {\n        u.y = p.y;\n      }\n\n      if (p.y < l.y) {\n        l.y = p.y;\n      }\n\n      if (p.z > u.z) {\n        u.z = p.z;\n      }\n\n      if (p.z < l.z) {\n        l.z = p.z;\n      }\n    } // Add offset\n\n\n    if (position) {\n      position.vadd(l, l);\n      position.vadd(u, u);\n    }\n\n    if (skinSize) {\n      l.x -= skinSize;\n      l.y -= skinSize;\n      l.z -= skinSize;\n      u.x += skinSize;\n      u.y += skinSize;\n      u.z += skinSize;\n    }\n\n    return this;\n  }\n  /**\n   * Copy bounds from an AABB to this AABB\n   * @param aabb Source to copy from\n   * @return The this object, for chainability\n   */\n\n\n  copy(aabb) {\n    this.lowerBound.copy(aabb.lowerBound);\n    this.upperBound.copy(aabb.upperBound);\n    return this;\n  }\n  /**\n   * Clone an AABB\n   */\n\n\n  clone() {\n    return new AABB().copy(this);\n  }\n  /**\n   * Extend this AABB so that it covers the given AABB too.\n   */\n\n\n  extend(aabb) {\n    this.lowerBound.x = Math.min(this.lowerBound.x, aabb.lowerBound.x);\n    this.upperBound.x = Math.max(this.upperBound.x, aabb.upperBound.x);\n    this.lowerBound.y = Math.min(this.lowerBound.y, aabb.lowerBound.y);\n    this.upperBound.y = Math.max(this.upperBound.y, aabb.upperBound.y);\n    this.lowerBound.z = Math.min(this.lowerBound.z, aabb.lowerBound.z);\n    this.upperBound.z = Math.max(this.upperBound.z, aabb.upperBound.z);\n  }\n  /**\n   * Returns true if the given AABB overlaps this AABB.\n   */\n\n\n  overlaps(aabb) {\n    const l1 = this.lowerBound;\n    const u1 = this.upperBound;\n    const l2 = aabb.lowerBound;\n    const u2 = aabb.upperBound; //      l2        u2\n    //      |---------|\n    // |--------|\n    // l1       u1\n\n    const overlapsX = l2.x <= u1.x && u1.x <= u2.x || l1.x <= u2.x && u2.x <= u1.x;\n    const overlapsY = l2.y <= u1.y && u1.y <= u2.y || l1.y <= u2.y && u2.y <= u1.y;\n    const overlapsZ = l2.z <= u1.z && u1.z <= u2.z || l1.z <= u2.z && u2.z <= u1.z;\n    return overlapsX && overlapsY && overlapsZ;\n  } // Mostly for debugging\n\n\n  volume() {\n    const l = this.lowerBound;\n    const u = this.upperBound;\n    return (u.x - l.x) * (u.y - l.y) * (u.z - l.z);\n  }\n  /**\n   * Returns true if the given AABB is fully contained in this AABB.\n   */\n\n\n  contains(aabb) {\n    const l1 = this.lowerBound;\n    const u1 = this.upperBound;\n    const l2 = aabb.lowerBound;\n    const u2 = aabb.upperBound; //      l2        u2\n    //      |---------|\n    // |---------------|\n    // l1              u1\n\n    return l1.x <= l2.x && u1.x >= u2.x && l1.y <= l2.y && u1.y >= u2.y && l1.z <= l2.z && u1.z >= u2.z;\n  }\n\n  getCorners(a, b, c, d, e, f, g, h) {\n    const l = this.lowerBound;\n    const u = this.upperBound;\n    a.copy(l);\n    b.set(u.x, l.y, l.z);\n    c.set(u.x, u.y, l.z);\n    d.set(l.x, u.y, u.z);\n    e.set(u.x, l.y, u.z);\n    f.set(l.x, u.y, l.z);\n    g.set(l.x, l.y, u.z);\n    h.copy(u);\n  }\n  /**\n   * Get the representation of an AABB in another frame.\n   * @return The \"target\" AABB object.\n   */\n\n\n  toLocalFrame(frame, target) {\n    const corners = transformIntoFrame_corners;\n    const a = corners[0];\n    const b = corners[1];\n    const c = corners[2];\n    const d = corners[3];\n    const e = corners[4];\n    const f = corners[5];\n    const g = corners[6];\n    const h = corners[7]; // Get corners in current frame\n\n    this.getCorners(a, b, c, d, e, f, g, h); // Transform them to new local frame\n\n    for (let i = 0; i !== 8; i++) {\n      const corner = corners[i];\n      frame.pointToLocal(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n  }\n  /**\n   * Get the representation of an AABB in the global frame.\n   * @return The \"target\" AABB object.\n   */\n\n\n  toWorldFrame(frame, target) {\n    const corners = transformIntoFrame_corners;\n    const a = corners[0];\n    const b = corners[1];\n    const c = corners[2];\n    const d = corners[3];\n    const e = corners[4];\n    const f = corners[5];\n    const g = corners[6];\n    const h = corners[7]; // Get corners in current frame\n\n    this.getCorners(a, b, c, d, e, f, g, h); // Transform them to new local frame\n\n    for (let i = 0; i !== 8; i++) {\n      const corner = corners[i];\n      frame.pointToWorld(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n  }\n  /**\n   * Check if the AABB is hit by a ray.\n   */\n\n\n  overlapsRay(ray) {\n    const {\n      direction,\n      from\n    } = ray; // const t = 0\n    // ray.direction is unit direction vector of ray\n\n    const dirFracX = 1 / direction.x;\n    const dirFracY = 1 / direction.y;\n    const dirFracZ = 1 / direction.z; // this.lowerBound is the corner of AABB with minimal coordinates - left bottom, rt is maximal corner\n\n    const t1 = (this.lowerBound.x - from.x) * dirFracX;\n    const t2 = (this.upperBound.x - from.x) * dirFracX;\n    const t3 = (this.lowerBound.y - from.y) * dirFracY;\n    const t4 = (this.upperBound.y - from.y) * dirFracY;\n    const t5 = (this.lowerBound.z - from.z) * dirFracZ;\n    const t6 = (this.upperBound.z - from.z) * dirFracZ; // const tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)));\n    // const tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)));\n\n    const tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)), Math.min(t5, t6));\n    const tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)), Math.max(t5, t6)); // if tmax < 0, ray (line) is intersecting AABB, but whole AABB is behing us\n\n    if (tmax < 0) {\n      //t = tmax;\n      return false;\n    } // if tmin > tmax, ray doesn't intersect AABB\n\n\n    if (tmin > tmax) {\n      //t = tmax;\n      return false;\n    }\n\n    return true;\n  }\n\n}\nconst tmp$1 = new Vec3();\nconst transformIntoFrame_corners = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\n/**\n * Collision \"matrix\".\n * It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\n */\nclass ArrayCollisionMatrix {\n  /**\n   * The matrix storage.\n   */\n  constructor() {\n    this.matrix = [];\n  }\n  /**\n   * Get an element\n   */\n\n\n  get(bi, bj) {\n    let {\n      index: i\n    } = bi;\n    let {\n      index: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    return this.matrix[(i * (i + 1) >> 1) + j - 1];\n  }\n  /**\n   * Set an element\n   */\n\n\n  set(bi, bj, value) {\n    let {\n      index: i\n    } = bi;\n    let {\n      index: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    this.matrix[(i * (i + 1) >> 1) + j - 1] = value ? 1 : 0;\n  }\n  /**\n   * Sets all elements to zero\n   */\n\n\n  reset() {\n    for (let i = 0, l = this.matrix.length; i !== l; i++) {\n      this.matrix[i] = 0;\n    }\n  }\n  /**\n   * Sets the max number of objects\n   */\n\n\n  setNumObjects(n) {\n    this.matrix.length = n * (n - 1) >> 1;\n  }\n\n}\n\n/**\n * Base class for objects that dispatches events.\n */\nclass EventTarget {\n  /**\n   * Add an event listener\n   * @return The self object, for chainability.\n   */\n  addEventListener(type, listener) {\n    if (this._listeners === undefined) {\n      this._listeners = {};\n    }\n\n    const listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (!listeners[type].includes(listener)) {\n      listeners[type].push(listener);\n    }\n\n    return this;\n  }\n  /**\n   * Check if an event listener is added\n   */\n\n\n  hasEventListener(type, listener) {\n    if (this._listeners === undefined) {\n      return false;\n    }\n\n    const listeners = this._listeners;\n\n    if (listeners[type] !== undefined && listeners[type].includes(listener)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Check if any event listener of the given type is added\n   */\n\n\n  hasAnyEventListener(type) {\n    if (this._listeners === undefined) {\n      return false;\n    }\n\n    const listeners = this._listeners;\n    return listeners[type] !== undefined;\n  }\n  /**\n   * Remove an event listener\n   * @return The self object, for chainability.\n   */\n\n\n  removeEventListener(type, listener) {\n    if (this._listeners === undefined) {\n      return this;\n    }\n\n    const listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      return this;\n    }\n\n    const index = listeners[type].indexOf(listener);\n\n    if (index !== -1) {\n      listeners[type].splice(index, 1);\n    }\n\n    return this;\n  }\n  /**\n   * Emit an event.\n   * @return The self object, for chainability.\n   */\n\n\n  dispatchEvent(event) {\n    if (this._listeners === undefined) {\n      return this;\n    }\n\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n\n      for (let i = 0, l = listenerArray.length; i < l; i++) {\n        listenerArray[i].call(this, event);\n      }\n    }\n\n    return this;\n  }\n\n}\n\n/**\n * A Quaternion describes a rotation in 3D space. The Quaternion is mathematically defined as Q = x*i + y*j + z*k + w, where (i,j,k) are imaginary basis vectors. (x,y,z) can be seen as a vector related to the axis of rotation, while the real multiplier, w, is related to the amount of rotation.\n * @param x Multiplier of the imaginary basis vector i.\n * @param y Multiplier of the imaginary basis vector j.\n * @param z Multiplier of the imaginary basis vector k.\n * @param w Multiplier of the real part.\n * @see http://en.wikipedia.org/wiki/Quaternion\n */\n\nclass Quaternion {\n  constructor(x, y, z, w) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (z === void 0) {\n      z = 0;\n    }\n\n    if (w === void 0) {\n      w = 1;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n  /**\n   * Set the value of the quaternion.\n   */\n\n\n  set(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n  /**\n   * Convert to a readable format\n   * @return \"x,y,z,w\"\n   */\n\n\n  toString() {\n    return `${this.x},${this.y},${this.z},${this.w}`;\n  }\n  /**\n   * Convert to an Array\n   * @return [x, y, z, w]\n   */\n\n\n  toArray() {\n    return [this.x, this.y, this.z, this.w];\n  }\n  /**\n   * Set the quaternion components given an axis and an angle in radians.\n   */\n\n\n  setFromAxisAngle(vector, angle) {\n    const s = Math.sin(angle * 0.5);\n    this.x = vector.x * s;\n    this.y = vector.y * s;\n    this.z = vector.z * s;\n    this.w = Math.cos(angle * 0.5);\n    return this;\n  }\n  /**\n   * Converts the quaternion to [ axis, angle ] representation.\n   * @param targetAxis A vector object to reuse for storing the axis.\n   * @return An array, first element is the axis and the second is the angle in radians.\n   */\n\n\n  toAxisAngle(targetAxis) {\n    if (targetAxis === void 0) {\n      targetAxis = new Vec3();\n    }\n\n    this.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised\n\n    const angle = 2 * Math.acos(this.w);\n    const s = Math.sqrt(1 - this.w * this.w); // assuming quaternion normalised then w is less than 1, so term always positive.\n\n    if (s < 0.001) {\n      // test to avoid divide by zero, s is always positive due to sqrt\n      // if s close to zero then direction of axis not important\n      targetAxis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;\n\n      targetAxis.y = this.y;\n      targetAxis.z = this.z;\n    } else {\n      targetAxis.x = this.x / s; // normalise axis\n\n      targetAxis.y = this.y / s;\n      targetAxis.z = this.z / s;\n    }\n\n    return [targetAxis, angle];\n  }\n  /**\n   * Set the quaternion value given two vectors. The resulting rotation will be the needed rotation to rotate u to v.\n   */\n\n\n  setFromVectors(u, v) {\n    if (u.isAntiparallelTo(v)) {\n      const t1 = sfv_t1;\n      const t2 = sfv_t2;\n      u.tangents(t1, t2);\n      this.setFromAxisAngle(t1, Math.PI);\n    } else {\n      const a = u.cross(v);\n      this.x = a.x;\n      this.y = a.y;\n      this.z = a.z;\n      this.w = Math.sqrt(u.length() ** 2 * v.length() ** 2) + u.dot(v);\n      this.normalize();\n    }\n\n    return this;\n  }\n  /**\n   * Multiply the quaternion with an other quaternion.\n   */\n\n\n  mult(quat, target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const ax = this.x;\n    const ay = this.y;\n    const az = this.z;\n    const aw = this.w;\n    const bx = quat.x;\n    const by = quat.y;\n    const bz = quat.z;\n    const bw = quat.w;\n    target.x = ax * bw + aw * bx + ay * bz - az * by;\n    target.y = ay * bw + aw * by + az * bx - ax * bz;\n    target.z = az * bw + aw * bz + ax * by - ay * bx;\n    target.w = aw * bw - ax * bx - ay * by - az * bz;\n    return target;\n  }\n  /**\n   * Get the inverse quaternion rotation.\n   */\n\n\n  inverse(target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const w = this.w;\n    this.conjugate(target);\n    const inorm2 = 1 / (x * x + y * y + z * z + w * w);\n    target.x *= inorm2;\n    target.y *= inorm2;\n    target.z *= inorm2;\n    target.w *= inorm2;\n    return target;\n  }\n  /**\n   * Get the quaternion conjugate\n   */\n\n\n  conjugate(target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    target.w = this.w;\n    return target;\n  }\n  /**\n   * Normalize the quaternion. Note that this changes the values of the quaternion.\n   */\n\n\n  normalize() {\n    let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\n    if (l === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 0;\n    } else {\n      l = 1 / l;\n      this.x *= l;\n      this.y *= l;\n      this.z *= l;\n      this.w *= l;\n    }\n\n    return this;\n  }\n  /**\n   * Approximation of quaternion normalization. Works best when quat is already almost-normalized.\n   * @author unphased, https://github.com/unphased\n   */\n\n\n  normalizeFast() {\n    const f = (3.0 - (this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)) / 2.0;\n\n    if (f === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 0;\n    } else {\n      this.x *= f;\n      this.y *= f;\n      this.z *= f;\n      this.w *= f;\n    }\n\n    return this;\n  }\n  /**\n   * Multiply the quaternion by a vector\n   */\n\n\n  vmult(v, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const x = v.x;\n    const y = v.y;\n    const z = v.z;\n    const qx = this.x;\n    const qy = this.y;\n    const qz = this.z;\n    const qw = this.w; // q*v\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n    target.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    target.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    target.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return target;\n  }\n  /**\n   * Copies value of source to this quaternion.\n   * @return this\n   */\n\n\n  copy(quat) {\n    this.x = quat.x;\n    this.y = quat.y;\n    this.z = quat.z;\n    this.w = quat.w;\n    return this;\n  }\n  /**\n   * Convert the quaternion to euler angle representation. Order: YZX, as this page describes: https://www.euclideanspace.com/maths/standards/index.htm\n   * @param order Three-character string, defaults to \"YZX\"\n   */\n\n\n  toEuler(target, order) {\n    if (order === void 0) {\n      order = 'YZX';\n    }\n\n    let heading;\n    let attitude;\n    let bank;\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const w = this.w;\n\n    switch (order) {\n      case 'YZX':\n        const test = x * y + z * w;\n\n        if (test > 0.499) {\n          // singularity at north pole\n          heading = 2 * Math.atan2(x, w);\n          attitude = Math.PI / 2;\n          bank = 0;\n        }\n\n        if (test < -0.499) {\n          // singularity at south pole\n          heading = -2 * Math.atan2(x, w);\n          attitude = -Math.PI / 2;\n          bank = 0;\n        }\n\n        if (heading === undefined) {\n          const sqx = x * x;\n          const sqy = y * y;\n          const sqz = z * z;\n          heading = Math.atan2(2 * y * w - 2 * x * z, 1 - 2 * sqy - 2 * sqz); // Heading\n\n          attitude = Math.asin(2 * test); // attitude\n\n          bank = Math.atan2(2 * x * w - 2 * y * z, 1 - 2 * sqx - 2 * sqz); // bank\n        }\n\n        break;\n\n      default:\n        throw new Error(`Euler order ${order} not supported yet.`);\n    }\n\n    target.y = heading;\n    target.z = attitude;\n    target.x = bank;\n  }\n  /**\n   * Set the quaternion components given Euler angle representation.\n   *\n   * @param order The order to apply angles: 'XYZ' or 'YXZ' or any other combination.\n   *\n   * See {@link https://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors MathWorks} reference\n   */\n\n\n  setFromEuler(x, y, z, order) {\n    if (order === void 0) {\n      order = 'XYZ';\n    }\n\n    const c1 = Math.cos(x / 2);\n    const c2 = Math.cos(y / 2);\n    const c3 = Math.cos(z / 2);\n    const s1 = Math.sin(x / 2);\n    const s2 = Math.sin(y / 2);\n    const s3 = Math.sin(z / 2);\n\n    if (order === 'XYZ') {\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'YXZ') {\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'ZXY') {\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'ZYX') {\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'YZX') {\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'XZY') {\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new Quaternion(this.x, this.y, this.z, this.w);\n  }\n  /**\n   * Performs a spherical linear interpolation between two quat\n   *\n   * @param toQuat second operand\n   * @param t interpolation amount between the self quaternion and toQuat\n   * @param target A quaternion to store the result in. If not provided, a new one will be created.\n   * @returns {Quaternion} The \"target\" object\n   */\n\n\n  slerp(toQuat, t, target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const ax = this.x;\n    const ay = this.y;\n    const az = this.z;\n    const aw = this.w;\n    let bx = toQuat.x;\n    let by = toQuat.y;\n    let bz = toQuat.z;\n    let bw = toQuat.w;\n    let omega;\n    let cosom;\n    let sinom;\n    let scale0;\n    let scale1; // calc cosine\n\n    cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n    if (cosom < 0.0) {\n      cosom = -cosom;\n      bx = -bx;\n      by = -by;\n      bz = -bz;\n      bw = -bw;\n    } // calculate coefficients\n\n\n    if (1.0 - cosom > 0.000001) {\n      // standard case (slerp)\n      omega = Math.acos(cosom);\n      sinom = Math.sin(omega);\n      scale0 = Math.sin((1.0 - t) * omega) / sinom;\n      scale1 = Math.sin(t * omega) / sinom;\n    } else {\n      // \"from\" and \"to\" quaternions are very close\n      //  ... so we can do a linear interpolation\n      scale0 = 1.0 - t;\n      scale1 = t;\n    } // calculate final values\n\n\n    target.x = scale0 * ax + scale1 * bx;\n    target.y = scale0 * ay + scale1 * by;\n    target.z = scale0 * az + scale1 * bz;\n    target.w = scale0 * aw + scale1 * bw;\n    return target;\n  }\n  /**\n   * Rotate an absolute orientation quaternion given an angular velocity and a time step.\n   */\n\n\n  integrate(angularVelocity, dt, angularFactor, target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const ax = angularVelocity.x * angularFactor.x,\n          ay = angularVelocity.y * angularFactor.y,\n          az = angularVelocity.z * angularFactor.z,\n          bx = this.x,\n          by = this.y,\n          bz = this.z,\n          bw = this.w;\n    const half_dt = dt * 0.5;\n    target.x += half_dt * (ax * bw + ay * bz - az * by);\n    target.y += half_dt * (ay * bw + az * bx - ax * bz);\n    target.z += half_dt * (az * bw + ax * by - ay * bx);\n    target.w += half_dt * (-ax * bx - ay * by - az * bz);\n    return target;\n  }\n\n}\nconst sfv_t1 = new Vec3();\nconst sfv_t2 = new Vec3();\n\n/**\n * The available shape types.\n */\nconst SHAPE_TYPES = {\n  /** SPHERE */\n  SPHERE: 1,\n\n  /** PLANE */\n  PLANE: 2,\n\n  /** BOX */\n  BOX: 4,\n\n  /** COMPOUND */\n  COMPOUND: 8,\n\n  /** CONVEXPOLYHEDRON */\n  CONVEXPOLYHEDRON: 16,\n\n  /** HEIGHTFIELD */\n  HEIGHTFIELD: 32,\n\n  /** PARTICLE */\n  PARTICLE: 64,\n\n  /** CYLINDER */\n  CYLINDER: 128,\n\n  /** TRIMESH */\n  TRIMESH: 256\n};\n/**\n * ShapeType\n */\n\n/**\n * Base class for shapes\n */\nclass Shape {\n  /**\n   * Identifier of the Shape.\n   */\n\n  /**\n   * The type of this shape. Must be set to an int > 0 by subclasses.\n   */\n\n  /**\n   * The local bounding sphere radius of this shape.\n   */\n\n  /**\n   * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\n   * @default true\n   */\n\n  /**\n   * @default 1\n   */\n\n  /**\n   * @default -1\n   */\n\n  /**\n   * Optional material of the shape that regulates contact properties.\n   */\n\n  /**\n   * The body to which the shape is added to.\n   */\n\n  /**\n   * All the Shape types.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.id = Shape.idCounter++;\n    this.type = options.type || 0;\n    this.boundingSphereRadius = 0;\n    this.collisionResponse = options.collisionResponse ? options.collisionResponse : true;\n    this.collisionFilterGroup = options.collisionFilterGroup !== undefined ? options.collisionFilterGroup : 1;\n    this.collisionFilterMask = options.collisionFilterMask !== undefined ? options.collisionFilterMask : -1;\n    this.material = options.material ? options.material : null;\n    this.body = null;\n  }\n  /**\n   * Computes the bounding sphere radius.\n   * The result is stored in the property `.boundingSphereRadius`\n   */\n\n\n  updateBoundingSphereRadius() {\n    throw `computeBoundingSphereRadius() not implemented for shape type ${this.type}`;\n  }\n  /**\n   * Get the volume of this shape\n   */\n\n\n  volume() {\n    throw `volume() not implemented for shape type ${this.type}`;\n  }\n  /**\n   * Calculates the inertia in the local frame for this shape.\n   * @see http://en.wikipedia.org/wiki/List_of_moments_of_inertia\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    throw `calculateLocalInertia() not implemented for shape type ${this.type}`;\n  }\n  /**\n   * @todo use abstract for these kind of methods\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    throw `calculateWorldAABB() not implemented for shape type ${this.type}`;\n  }\n\n}\nShape.idCounter = 0;\nShape.types = SHAPE_TYPES;\n\n/**\n * Transformation utilities.\n */\nclass Transform {\n  /**\n   * position\n   */\n\n  /**\n   * quaternion\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.position = new Vec3();\n    this.quaternion = new Quaternion();\n\n    if (options.position) {\n      this.position.copy(options.position);\n    }\n\n    if (options.quaternion) {\n      this.quaternion.copy(options.quaternion);\n    }\n  }\n  /**\n   * Get a global point in local transform coordinates.\n   */\n\n\n  pointToLocal(worldPoint, result) {\n    return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\n  }\n  /**\n   * Get a local point in global transform coordinates.\n   */\n\n\n  pointToWorld(localPoint, result) {\n    return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\n  }\n  /**\n   * vectorToWorldFrame\n   */\n\n\n  vectorToWorldFrame(localVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.vmult(localVector, result);\n    return result;\n  }\n  /**\n   * pointToLocalFrame\n   */\n\n\n  static pointToLocalFrame(position, quaternion, worldPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    worldPoint.vsub(position, result);\n    quaternion.conjugate(tmpQuat$1);\n    tmpQuat$1.vmult(result, result);\n    return result;\n  }\n  /**\n   * pointToWorldFrame\n   */\n\n\n  static pointToWorldFrame(position, quaternion, localPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    quaternion.vmult(localPoint, result);\n    result.vadd(position, result);\n    return result;\n  }\n  /**\n   * vectorToWorldFrame\n   */\n\n\n  static vectorToWorldFrame(quaternion, localVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    quaternion.vmult(localVector, result);\n    return result;\n  }\n  /**\n   * vectorToLocalFrame\n   */\n\n\n  static vectorToLocalFrame(position, quaternion, worldVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    quaternion.w *= -1;\n    quaternion.vmult(worldVector, result);\n    quaternion.w *= -1;\n    return result;\n  }\n\n}\nconst tmpQuat$1 = new Quaternion();\n\n/**\n * A set of polygons describing a convex shape.\n *\n * The shape MUST be convex for the code to work properly. No polygons may be coplanar (contained\n * in the same 3D plane), instead these should be merged into one polygon.\n *\n * @author qiao / https://github.com/qiao (original author, see https://github.com/qiao/three.js/commit/85026f0c769e4000148a67d45a9e9b9c5108836f)\n * @author schteppe / https://github.com/schteppe\n * @see https://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\n *\n * @todo Move the clipping functions to ContactGenerator?\n * @todo Automatically merge coplanar polygons in constructor.\n * @example\n *     const convexShape = new CANNON.ConvexPolyhedron({ vertices, faces })\n *     const convexBody = new CANNON.Body({ mass: 1, shape: convexShape })\n *     world.addBody(convexBody)\n */\nclass ConvexPolyhedron extends Shape {\n  /** vertices */\n\n  /**\n   * Array of integer arrays, indicating which vertices each face consists of\n   */\n\n  /** faceNormals */\n\n  /** worldVertices */\n\n  /** worldVerticesNeedsUpdate */\n\n  /** worldFaceNormals */\n\n  /** worldFaceNormalsNeedsUpdate */\n\n  /**\n   * If given, these locally defined, normalized axes are the only ones being checked when doing separating axis check.\n   */\n\n  /** uniqueEdges */\n\n  /**\n   * @param vertices An array of Vec3's\n   * @param faces Array of integer arrays, describing which vertices that is included in each face.\n   */\n  constructor(props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    const {\n      vertices = [],\n      faces = [],\n      normals = [],\n      axes,\n      boundingSphereRadius\n    } = props;\n    super({\n      type: Shape.types.CONVEXPOLYHEDRON\n    });\n    this.vertices = vertices;\n    this.faces = faces;\n    this.faceNormals = normals;\n\n    if (this.faceNormals.length === 0) {\n      this.computeNormals();\n    }\n\n    if (!boundingSphereRadius) {\n      this.updateBoundingSphereRadius();\n    } else {\n      this.boundingSphereRadius = boundingSphereRadius;\n    }\n\n    this.worldVertices = []; // World transformed version of .vertices\n\n    this.worldVerticesNeedsUpdate = true;\n    this.worldFaceNormals = []; // World transformed version of .faceNormals\n\n    this.worldFaceNormalsNeedsUpdate = true;\n    this.uniqueAxes = axes ? axes.slice() : null;\n    this.uniqueEdges = [];\n    this.computeEdges();\n  }\n  /**\n   * Computes uniqueEdges\n   */\n\n\n  computeEdges() {\n    const faces = this.faces;\n    const vertices = this.vertices;\n    const edges = this.uniqueEdges;\n    edges.length = 0;\n    const edge = new Vec3();\n\n    for (let i = 0; i !== faces.length; i++) {\n      const face = faces[i];\n      const numVertices = face.length;\n\n      for (let j = 0; j !== numVertices; j++) {\n        const k = (j + 1) % numVertices;\n        vertices[face[j]].vsub(vertices[face[k]], edge);\n        edge.normalize();\n        let found = false;\n\n        for (let p = 0; p !== edges.length; p++) {\n          if (edges[p].almostEquals(edge) || edges[p].almostEquals(edge)) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          edges.push(edge.clone());\n        }\n      }\n    }\n  }\n  /**\n   * Compute the normals of the faces.\n   * Will reuse existing Vec3 objects in the `faceNormals` array if they exist.\n   */\n\n\n  computeNormals() {\n    this.faceNormals.length = this.faces.length; // Generate normals\n\n    for (let i = 0; i < this.faces.length; i++) {\n      // Check so all vertices exists for this face\n      for (let j = 0; j < this.faces[i].length; j++) {\n        if (!this.vertices[this.faces[i][j]]) {\n          throw new Error(`Vertex ${this.faces[i][j]} not found!`);\n        }\n      }\n\n      const n = this.faceNormals[i] || new Vec3();\n      this.getFaceNormal(i, n);\n      n.negate(n);\n      this.faceNormals[i] = n;\n      const vertex = this.vertices[this.faces[i][0]];\n\n      if (n.dot(vertex) < 0) {\n        console.error(`.faceNormals[${i}] = Vec3(${n.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);\n\n        for (let j = 0; j < this.faces[i].length; j++) {\n          console.warn(`.vertices[${this.faces[i][j]}] = Vec3(${this.vertices[this.faces[i][j]].toString()})`);\n        }\n      }\n    }\n  }\n  /**\n   * Compute the normal of a face from its vertices\n   */\n\n\n  getFaceNormal(i, target) {\n    const f = this.faces[i];\n    const va = this.vertices[f[0]];\n    const vb = this.vertices[f[1]];\n    const vc = this.vertices[f[2]];\n    ConvexPolyhedron.computeNormal(va, vb, vc, target);\n  }\n  /**\n   * Get face normal given 3 vertices\n   */\n\n\n  static computeNormal(va, vb, vc, target) {\n    const cb = new Vec3();\n    const ab = new Vec3();\n    vb.vsub(va, ab);\n    vc.vsub(vb, cb);\n    cb.cross(ab, target);\n\n    if (!target.isZero()) {\n      target.normalize();\n    }\n  }\n  /**\n   * @param minDist Clamp distance\n   * @param result The an array of contact point objects, see clipFaceAgainstHull\n   */\n\n\n  clipAgainstHull(posA, quatA, hullB, posB, quatB, separatingNormal, minDist, maxDist, result) {\n    const WorldNormal = new Vec3();\n    let closestFaceB = -1;\n    let dmax = -Number.MAX_VALUE;\n\n    for (let face = 0; face < hullB.faces.length; face++) {\n      WorldNormal.copy(hullB.faceNormals[face]);\n      quatB.vmult(WorldNormal, WorldNormal);\n      const d = WorldNormal.dot(separatingNormal);\n\n      if (d > dmax) {\n        dmax = d;\n        closestFaceB = face;\n      }\n    }\n\n    const worldVertsB1 = [];\n\n    for (let i = 0; i < hullB.faces[closestFaceB].length; i++) {\n      const b = hullB.vertices[hullB.faces[closestFaceB][i]];\n      const worldb = new Vec3();\n      worldb.copy(b);\n      quatB.vmult(worldb, worldb);\n      posB.vadd(worldb, worldb);\n      worldVertsB1.push(worldb);\n    }\n\n    if (closestFaceB >= 0) {\n      this.clipFaceAgainstHull(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist, result);\n    }\n  }\n  /**\n   * Find the separating axis between this hull and another\n   * @param target The target vector to save the axis in\n   * @return Returns false if a separation is found, else true\n   */\n\n\n  findSeparatingAxis(hullB, posA, quatA, posB, quatB, target, faceListA, faceListB) {\n    const faceANormalWS3 = new Vec3();\n    const Worldnormal1 = new Vec3();\n    const deltaC = new Vec3();\n    const worldEdge0 = new Vec3();\n    const worldEdge1 = new Vec3();\n    const Cross = new Vec3();\n    let dmin = Number.MAX_VALUE;\n    const hullA = this;\n\n    if (!hullA.uniqueAxes) {\n      const numFacesA = faceListA ? faceListA.length : hullA.faces.length; // Test face normals from hullA\n\n      for (let i = 0; i < numFacesA; i++) {\n        const fi = faceListA ? faceListA[i] : i; // Get world face normal\n\n        faceANormalWS3.copy(hullA.faceNormals[fi]);\n        quatA.vmult(faceANormalWS3, faceANormalWS3);\n        const d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(faceANormalWS3);\n        }\n      }\n    } else {\n      // Test unique axes\n      for (let i = 0; i !== hullA.uniqueAxes.length; i++) {\n        // Get world axis\n        quatA.vmult(hullA.uniqueAxes[i], faceANormalWS3);\n        const d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(faceANormalWS3);\n        }\n      }\n    }\n\n    if (!hullB.uniqueAxes) {\n      // Test face normals from hullB\n      const numFacesB = faceListB ? faceListB.length : hullB.faces.length;\n\n      for (let i = 0; i < numFacesB; i++) {\n        const fi = faceListB ? faceListB[i] : i;\n        Worldnormal1.copy(hullB.faceNormals[fi]);\n        quatB.vmult(Worldnormal1, Worldnormal1);\n        const d = hullA.testSepAxis(Worldnormal1, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(Worldnormal1);\n        }\n      }\n    } else {\n      // Test unique axes in B\n      for (let i = 0; i !== hullB.uniqueAxes.length; i++) {\n        quatB.vmult(hullB.uniqueAxes[i], Worldnormal1);\n        const d = hullA.testSepAxis(Worldnormal1, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(Worldnormal1);\n        }\n      }\n    } // Test edges\n\n\n    for (let e0 = 0; e0 !== hullA.uniqueEdges.length; e0++) {\n      // Get world edge\n      quatA.vmult(hullA.uniqueEdges[e0], worldEdge0);\n\n      for (let e1 = 0; e1 !== hullB.uniqueEdges.length; e1++) {\n        // Get world edge 2\n        quatB.vmult(hullB.uniqueEdges[e1], worldEdge1);\n        worldEdge0.cross(worldEdge1, Cross);\n\n        if (!Cross.almostZero()) {\n          Cross.normalize();\n          const dist = hullA.testSepAxis(Cross, hullB, posA, quatA, posB, quatB);\n\n          if (dist === false) {\n            return false;\n          }\n\n          if (dist < dmin) {\n            dmin = dist;\n            target.copy(Cross);\n          }\n        }\n      }\n    }\n\n    posB.vsub(posA, deltaC);\n\n    if (deltaC.dot(target) > 0.0) {\n      target.negate(target);\n    }\n\n    return true;\n  }\n  /**\n   * Test separating axis against two hulls. Both hulls are projected onto the axis and the overlap size is returned if there is one.\n   * @return The overlap depth, or FALSE if no penetration.\n   */\n\n\n  testSepAxis(axis, hullB, posA, quatA, posB, quatB) {\n    const hullA = this;\n    ConvexPolyhedron.project(hullA, axis, posA, quatA, maxminA);\n    ConvexPolyhedron.project(hullB, axis, posB, quatB, maxminB);\n    const maxA = maxminA[0];\n    const minA = maxminA[1];\n    const maxB = maxminB[0];\n    const minB = maxminB[1];\n\n    if (maxA < minB || maxB < minA) {\n      return false; // Separated\n    }\n\n    const d0 = maxA - minB;\n    const d1 = maxB - minA;\n    const depth = d0 < d1 ? d0 : d1;\n    return depth;\n  }\n  /**\n   * calculateLocalInertia\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    const aabbmax = new Vec3();\n    const aabbmin = new Vec3();\n    this.computeLocalAABB(aabbmin, aabbmax);\n    const x = aabbmax.x - aabbmin.x;\n    const y = aabbmax.y - aabbmin.y;\n    const z = aabbmax.z - aabbmin.z;\n    target.x = 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * z * 2 * z);\n    target.y = 1.0 / 12.0 * mass * (2 * x * 2 * x + 2 * z * 2 * z);\n    target.z = 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * x * 2 * x);\n  }\n  /**\n   * @param face_i Index of the face\n   */\n\n\n  getPlaneConstantOfFace(face_i) {\n    const f = this.faces[face_i];\n    const n = this.faceNormals[face_i];\n    const v = this.vertices[f[0]];\n    const c = -n.dot(v);\n    return c;\n  }\n  /**\n   * Clip a face against a hull.\n   * @param worldVertsB1 An array of Vec3 with vertices in the world frame.\n   * @param minDist Distance clamping\n   * @param Array result Array to store resulting contact points in. Will be objects with properties: point, depth, normal. These are represented in world coordinates.\n   */\n\n\n  clipFaceAgainstHull(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist, result) {\n    const faceANormalWS = new Vec3();\n    const edge0 = new Vec3();\n    const WorldEdge0 = new Vec3();\n    const worldPlaneAnormal1 = new Vec3();\n    const planeNormalWS1 = new Vec3();\n    const worldA1 = new Vec3();\n    const localPlaneNormal = new Vec3();\n    const planeNormalWS = new Vec3();\n    const hullA = this;\n    const worldVertsB2 = [];\n    const pVtxIn = worldVertsB1;\n    const pVtxOut = worldVertsB2;\n    let closestFaceA = -1;\n    let dmin = Number.MAX_VALUE; // Find the face with normal closest to the separating axis\n\n    for (let face = 0; face < hullA.faces.length; face++) {\n      faceANormalWS.copy(hullA.faceNormals[face]);\n      quatA.vmult(faceANormalWS, faceANormalWS);\n      const d = faceANormalWS.dot(separatingNormal);\n\n      if (d < dmin) {\n        dmin = d;\n        closestFaceA = face;\n      }\n    }\n\n    if (closestFaceA < 0) {\n      return;\n    } // Get the face and construct connected faces\n\n\n    const polyA = hullA.faces[closestFaceA];\n    polyA.connectedFaces = [];\n\n    for (let i = 0; i < hullA.faces.length; i++) {\n      for (let j = 0; j < hullA.faces[i].length; j++) {\n        if (\n        /* Sharing a vertex*/\n        polyA.indexOf(hullA.faces[i][j]) !== -1 &&\n        /* Not the one we are looking for connections from */\n        i !== closestFaceA &&\n        /* Not already added */\n        polyA.connectedFaces.indexOf(i) === -1) {\n          polyA.connectedFaces.push(i);\n        }\n      }\n    } // Clip the polygon to the back of the planes of all faces of hull A,\n    // that are adjacent to the witness face\n\n\n    const numVerticesA = polyA.length;\n\n    for (let i = 0; i < numVerticesA; i++) {\n      const a = hullA.vertices[polyA[i]];\n      const b = hullA.vertices[polyA[(i + 1) % numVerticesA]];\n      a.vsub(b, edge0);\n      WorldEdge0.copy(edge0);\n      quatA.vmult(WorldEdge0, WorldEdge0);\n      posA.vadd(WorldEdge0, WorldEdge0);\n      worldPlaneAnormal1.copy(this.faceNormals[closestFaceA]);\n      quatA.vmult(worldPlaneAnormal1, worldPlaneAnormal1);\n      posA.vadd(worldPlaneAnormal1, worldPlaneAnormal1);\n      WorldEdge0.cross(worldPlaneAnormal1, planeNormalWS1);\n      planeNormalWS1.negate(planeNormalWS1);\n      worldA1.copy(a);\n      quatA.vmult(worldA1, worldA1);\n      posA.vadd(worldA1, worldA1);\n      const otherFace = polyA.connectedFaces[i];\n      localPlaneNormal.copy(this.faceNormals[otherFace]);\n      const localPlaneEq = this.getPlaneConstantOfFace(otherFace);\n      planeNormalWS.copy(localPlaneNormal);\n      quatA.vmult(planeNormalWS, planeNormalWS);\n      const planeEqWS = localPlaneEq - planeNormalWS.dot(posA); // Clip face against our constructed plane\n\n      this.clipFaceAgainstPlane(pVtxIn, pVtxOut, planeNormalWS, planeEqWS); // Throw away all clipped points, but save the remaining until next clip\n\n      while (pVtxIn.length) {\n        pVtxIn.shift();\n      }\n\n      while (pVtxOut.length) {\n        pVtxIn.push(pVtxOut.shift());\n      }\n    } // only keep contact points that are behind the witness face\n\n\n    localPlaneNormal.copy(this.faceNormals[closestFaceA]);\n    const localPlaneEq = this.getPlaneConstantOfFace(closestFaceA);\n    planeNormalWS.copy(localPlaneNormal);\n    quatA.vmult(planeNormalWS, planeNormalWS);\n    const planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\n\n    for (let i = 0; i < pVtxIn.length; i++) {\n      let depth = planeNormalWS.dot(pVtxIn[i]) + planeEqWS; // ???\n\n      if (depth <= minDist) {\n        console.log(`clamped: depth=${depth} to minDist=${minDist}`);\n        depth = minDist;\n      }\n\n      if (depth <= maxDist) {\n        const point = pVtxIn[i];\n\n        if (depth <= 1e-6) {\n          const p = {\n            point,\n            normal: planeNormalWS,\n            depth\n          };\n          result.push(p);\n        }\n      }\n    }\n  }\n  /**\n   * Clip a face in a hull against the back of a plane.\n   * @param planeConstant The constant in the mathematical plane equation\n   */\n\n\n  clipFaceAgainstPlane(inVertices, outVertices, planeNormal, planeConstant) {\n    let n_dot_first;\n    let n_dot_last;\n    const numVerts = inVertices.length;\n\n    if (numVerts < 2) {\n      return outVertices;\n    }\n\n    let firstVertex = inVertices[inVertices.length - 1];\n    let lastVertex = inVertices[0];\n    n_dot_first = planeNormal.dot(firstVertex) + planeConstant;\n\n    for (let vi = 0; vi < numVerts; vi++) {\n      lastVertex = inVertices[vi];\n      n_dot_last = planeNormal.dot(lastVertex) + planeConstant;\n\n      if (n_dot_first < 0) {\n        if (n_dot_last < 0) {\n          // Start < 0, end < 0, so output lastVertex\n          const newv = new Vec3();\n          newv.copy(lastVertex);\n          outVertices.push(newv);\n        } else {\n          // Start < 0, end >= 0, so output intersection\n          const newv = new Vec3();\n          firstVertex.lerp(lastVertex, n_dot_first / (n_dot_first - n_dot_last), newv);\n          outVertices.push(newv);\n        }\n      } else {\n        if (n_dot_last < 0) {\n          // Start >= 0, end < 0 so output intersection and end\n          const newv = new Vec3();\n          firstVertex.lerp(lastVertex, n_dot_first / (n_dot_first - n_dot_last), newv);\n          outVertices.push(newv);\n          outVertices.push(lastVertex);\n        }\n      }\n\n      firstVertex = lastVertex;\n      n_dot_first = n_dot_last;\n    }\n\n    return outVertices;\n  }\n  /**\n   * Updates `.worldVertices` and sets `.worldVerticesNeedsUpdate` to false.\n   */\n\n\n  computeWorldVertices(position, quat) {\n    while (this.worldVertices.length < this.vertices.length) {\n      this.worldVertices.push(new Vec3());\n    }\n\n    const verts = this.vertices;\n    const worldVerts = this.worldVertices;\n\n    for (let i = 0; i !== this.vertices.length; i++) {\n      quat.vmult(verts[i], worldVerts[i]);\n      position.vadd(worldVerts[i], worldVerts[i]);\n    }\n\n    this.worldVerticesNeedsUpdate = false;\n  }\n\n  computeLocalAABB(aabbmin, aabbmax) {\n    const vertices = this.vertices;\n    aabbmin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    aabbmax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n\n    for (let i = 0; i < this.vertices.length; i++) {\n      const v = vertices[i];\n\n      if (v.x < aabbmin.x) {\n        aabbmin.x = v.x;\n      } else if (v.x > aabbmax.x) {\n        aabbmax.x = v.x;\n      }\n\n      if (v.y < aabbmin.y) {\n        aabbmin.y = v.y;\n      } else if (v.y > aabbmax.y) {\n        aabbmax.y = v.y;\n      }\n\n      if (v.z < aabbmin.z) {\n        aabbmin.z = v.z;\n      } else if (v.z > aabbmax.z) {\n        aabbmax.z = v.z;\n      }\n    }\n  }\n  /**\n   * Updates `worldVertices` and sets `worldVerticesNeedsUpdate` to false.\n   */\n\n\n  computeWorldFaceNormals(quat) {\n    const N = this.faceNormals.length;\n\n    while (this.worldFaceNormals.length < N) {\n      this.worldFaceNormals.push(new Vec3());\n    }\n\n    const normals = this.faceNormals;\n    const worldNormals = this.worldFaceNormals;\n\n    for (let i = 0; i !== N; i++) {\n      quat.vmult(normals[i], worldNormals[i]);\n    }\n\n    this.worldFaceNormalsNeedsUpdate = false;\n  }\n  /**\n   * updateBoundingSphereRadius\n   */\n\n\n  updateBoundingSphereRadius() {\n    // Assume points are distributed with local (0,0,0) as center\n    let max2 = 0;\n    const verts = this.vertices;\n\n    for (let i = 0; i !== verts.length; i++) {\n      const norm2 = verts[i].lengthSquared();\n\n      if (norm2 > max2) {\n        max2 = norm2;\n      }\n    }\n\n    this.boundingSphereRadius = Math.sqrt(max2);\n  }\n  /**\n   * calculateWorldAABB\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    const verts = this.vertices;\n    let minx;\n    let miny;\n    let minz;\n    let maxx;\n    let maxy;\n    let maxz;\n    let tempWorldVertex = new Vec3();\n\n    for (let i = 0; i < verts.length; i++) {\n      tempWorldVertex.copy(verts[i]);\n      quat.vmult(tempWorldVertex, tempWorldVertex);\n      pos.vadd(tempWorldVertex, tempWorldVertex);\n      const v = tempWorldVertex;\n\n      if (minx === undefined || v.x < minx) {\n        minx = v.x;\n      }\n\n      if (maxx === undefined || v.x > maxx) {\n        maxx = v.x;\n      }\n\n      if (miny === undefined || v.y < miny) {\n        miny = v.y;\n      }\n\n      if (maxy === undefined || v.y > maxy) {\n        maxy = v.y;\n      }\n\n      if (minz === undefined || v.z < minz) {\n        minz = v.z;\n      }\n\n      if (maxz === undefined || v.z > maxz) {\n        maxz = v.z;\n      }\n    }\n\n    min.set(minx, miny, minz);\n    max.set(maxx, maxy, maxz);\n  }\n  /**\n   * Get approximate convex volume\n   */\n\n\n  volume() {\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n  }\n  /**\n   * Get an average of all the vertices positions\n   */\n\n\n  getAveragePointLocal(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const verts = this.vertices;\n\n    for (let i = 0; i < verts.length; i++) {\n      target.vadd(verts[i], target);\n    }\n\n    target.scale(1 / verts.length, target);\n    return target;\n  }\n  /**\n   * Transform all local points. Will change the .vertices\n   */\n\n\n  transformAllPoints(offset, quat) {\n    const n = this.vertices.length;\n    const verts = this.vertices; // Apply rotation\n\n    if (quat) {\n      // Rotate vertices\n      for (let i = 0; i < n; i++) {\n        const v = verts[i];\n        quat.vmult(v, v);\n      } // Rotate face normals\n\n\n      for (let i = 0; i < this.faceNormals.length; i++) {\n        const v = this.faceNormals[i];\n        quat.vmult(v, v);\n      }\n      /*\n            // Rotate edges\n            for(let i=0; i<this.uniqueEdges.length; i++){\n                const v = this.uniqueEdges[i];\n                quat.vmult(v,v);\n            }*/\n\n    } // Apply offset\n\n\n    if (offset) {\n      for (let i = 0; i < n; i++) {\n        const v = verts[i];\n        v.vadd(offset, v);\n      }\n    }\n  }\n  /**\n   * Checks whether p is inside the polyhedra. Must be in local coords.\n   * The point lies outside of the convex hull of the other points if and only if the direction\n   * of all the vectors from it to those other points are on less than one half of a sphere around it.\n   * @param p A point given in local coordinates\n   */\n\n\n  pointIsInside(p) {\n    const verts = this.vertices;\n    const faces = this.faces;\n    const normals = this.faceNormals;\n    const positiveResult = null;\n    const pointInside = new Vec3();\n    this.getAveragePointLocal(pointInside);\n\n    for (let i = 0; i < this.faces.length; i++) {\n      let n = normals[i];\n      const v = verts[faces[i][0]]; // We only need one point in the face\n      // This dot product determines which side of the edge the point is\n\n      const vToP = new Vec3();\n      p.vsub(v, vToP);\n      const r1 = n.dot(vToP);\n      const vToPointInside = new Vec3();\n      pointInside.vsub(v, vToPointInside);\n      const r2 = n.dot(vToPointInside);\n\n      if (r1 < 0 && r2 > 0 || r1 > 0 && r2 < 0) {\n        return false; // Encountered some other sign. Exit.\n      }\n    } // If we got here, all dot products were of the same sign.\n\n\n    return positiveResult ? 1 : -1;\n  }\n  /**\n   * Get max and min dot product of a convex hull at position (pos,quat) projected onto an axis.\n   * Results are saved in the array maxmin.\n   * @param result result[0] and result[1] will be set to maximum and minimum, respectively.\n   */\n\n\n  static project(shape, axis, pos, quat, result) {\n    const n = shape.vertices.length;\n    project_worldVertex;\n    const localAxis = project_localAxis;\n    let max = 0;\n    let min = 0;\n    const localOrigin = project_localOrigin;\n    const vs = shape.vertices;\n    localOrigin.setZero(); // Transform the axis to local\n\n    Transform.vectorToLocalFrame(pos, quat, axis, localAxis);\n    Transform.pointToLocalFrame(pos, quat, localOrigin, localOrigin);\n    const add = localOrigin.dot(localAxis);\n    min = max = vs[0].dot(localAxis);\n\n    for (let i = 1; i < n; i++) {\n      const val = vs[i].dot(localAxis);\n\n      if (val > max) {\n        max = val;\n      }\n\n      if (val < min) {\n        min = val;\n      }\n    }\n\n    min -= add;\n    max -= add;\n\n    if (min > max) {\n      // Inconsistent - swap\n      const temp = min;\n      min = max;\n      max = temp;\n    } // Output\n\n\n    result[0] = max;\n    result[1] = min;\n  }\n\n}\nconst maxminA = [];\nconst maxminB = [];\nconst project_worldVertex = new Vec3();\nconst project_localAxis = new Vec3();\nconst project_localOrigin = new Vec3();\n\n/**\n * A 3d box shape.\n * @example\n *     const size = 1\n *     const halfExtents = new CANNON.Vec3(size, size, size)\n *     const boxShape = new CANNON.Box(halfExtents)\n *     const boxBody = new CANNON.Body({ mass: 1, shape: boxShape })\n *     world.addBody(boxBody)\n */\nclass Box extends Shape {\n  /**\n   * The half extents of the box.\n   */\n\n  /**\n   * Used by the contact generator to make contacts with other convex polyhedra for example.\n   */\n  constructor(halfExtents) {\n    super({\n      type: Shape.types.BOX\n    });\n    this.halfExtents = halfExtents;\n    this.convexPolyhedronRepresentation = null;\n    this.updateConvexPolyhedronRepresentation();\n    this.updateBoundingSphereRadius();\n  }\n  /**\n   * Updates the local convex polyhedron representation used for some collisions.\n   */\n\n\n  updateConvexPolyhedronRepresentation() {\n    const sx = this.halfExtents.x;\n    const sy = this.halfExtents.y;\n    const sz = this.halfExtents.z;\n    const V = Vec3;\n    const vertices = [new V(-sx, -sy, -sz), new V(sx, -sy, -sz), new V(sx, sy, -sz), new V(-sx, sy, -sz), new V(-sx, -sy, sz), new V(sx, -sy, sz), new V(sx, sy, sz), new V(-sx, sy, sz)];\n    const faces = [[3, 2, 1, 0], // -z\n    [4, 5, 6, 7], // +z\n    [5, 4, 0, 1], // -y\n    [2, 3, 7, 6], // +y\n    [0, 4, 7, 3], // -x\n    [1, 2, 6, 5] // +x\n    ];\n    const axes = [new V(0, 0, 1), new V(0, 1, 0), new V(1, 0, 0)];\n    const h = new ConvexPolyhedron({\n      vertices,\n      faces,\n      axes\n    });\n    this.convexPolyhedronRepresentation = h;\n    h.material = this.material;\n  }\n  /**\n   * Calculate the inertia of the box.\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    Box.calculateInertia(this.halfExtents, mass, target);\n    return target;\n  }\n\n  static calculateInertia(halfExtents, mass, target) {\n    const e = halfExtents;\n    target.x = 1.0 / 12.0 * mass * (2 * e.y * 2 * e.y + 2 * e.z * 2 * e.z);\n    target.y = 1.0 / 12.0 * mass * (2 * e.x * 2 * e.x + 2 * e.z * 2 * e.z);\n    target.z = 1.0 / 12.0 * mass * (2 * e.y * 2 * e.y + 2 * e.x * 2 * e.x);\n  }\n  /**\n   * Get the box 6 side normals\n   * @param sixTargetVectors An array of 6 vectors, to store the resulting side normals in.\n   * @param quat Orientation to apply to the normal vectors. If not provided, the vectors will be in respect to the local frame.\n   */\n\n\n  getSideNormals(sixTargetVectors, quat) {\n    const sides = sixTargetVectors;\n    const ex = this.halfExtents;\n    sides[0].set(ex.x, 0, 0);\n    sides[1].set(0, ex.y, 0);\n    sides[2].set(0, 0, ex.z);\n    sides[3].set(-ex.x, 0, 0);\n    sides[4].set(0, -ex.y, 0);\n    sides[5].set(0, 0, -ex.z);\n\n    if (quat !== undefined) {\n      for (let i = 0; i !== sides.length; i++) {\n        quat.vmult(sides[i], sides[i]);\n      }\n    }\n\n    return sides;\n  }\n  /**\n   * Returns the volume of the box.\n   */\n\n\n  volume() {\n    return 8.0 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;\n  }\n  /**\n   * updateBoundingSphereRadius\n   */\n\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = this.halfExtents.length();\n  }\n  /**\n   * forEachWorldCorner\n   */\n\n\n  forEachWorldCorner(pos, quat, callback) {\n    const e = this.halfExtents;\n    const corners = [[e.x, e.y, e.z], [-e.x, e.y, e.z], [-e.x, -e.y, e.z], [-e.x, -e.y, -e.z], [e.x, -e.y, -e.z], [e.x, e.y, -e.z], [-e.x, e.y, -e.z], [e.x, -e.y, e.z]];\n\n    for (let i = 0; i < corners.length; i++) {\n      worldCornerTempPos.set(corners[i][0], corners[i][1], corners[i][2]);\n      quat.vmult(worldCornerTempPos, worldCornerTempPos);\n      pos.vadd(worldCornerTempPos, worldCornerTempPos);\n      callback(worldCornerTempPos.x, worldCornerTempPos.y, worldCornerTempPos.z);\n    }\n  }\n  /**\n   * calculateWorldAABB\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    const e = this.halfExtents;\n    worldCornersTemp[0].set(e.x, e.y, e.z);\n    worldCornersTemp[1].set(-e.x, e.y, e.z);\n    worldCornersTemp[2].set(-e.x, -e.y, e.z);\n    worldCornersTemp[3].set(-e.x, -e.y, -e.z);\n    worldCornersTemp[4].set(e.x, -e.y, -e.z);\n    worldCornersTemp[5].set(e.x, e.y, -e.z);\n    worldCornersTemp[6].set(-e.x, e.y, -e.z);\n    worldCornersTemp[7].set(e.x, -e.y, e.z);\n    const wc = worldCornersTemp[0];\n    quat.vmult(wc, wc);\n    pos.vadd(wc, wc);\n    max.copy(wc);\n    min.copy(wc);\n\n    for (let i = 1; i < 8; i++) {\n      const wc = worldCornersTemp[i];\n      quat.vmult(wc, wc);\n      pos.vadd(wc, wc);\n      const x = wc.x;\n      const y = wc.y;\n      const z = wc.z;\n\n      if (x > max.x) {\n        max.x = x;\n      }\n\n      if (y > max.y) {\n        max.y = y;\n      }\n\n      if (z > max.z) {\n        max.z = z;\n      }\n\n      if (x < min.x) {\n        min.x = x;\n      }\n\n      if (y < min.y) {\n        min.y = y;\n      }\n\n      if (z < min.z) {\n        min.z = z;\n      }\n    } // Get each axis max\n    // min.set(Infinity,Infinity,Infinity);\n    // max.set(-Infinity,-Infinity,-Infinity);\n    // this.forEachWorldCorner(pos,quat,function(x,y,z){\n    //     if(x > max.x){\n    //         max.x = x;\n    //     }\n    //     if(y > max.y){\n    //         max.y = y;\n    //     }\n    //     if(z > max.z){\n    //         max.z = z;\n    //     }\n    //     if(x < min.x){\n    //         min.x = x;\n    //     }\n    //     if(y < min.y){\n    //         min.y = y;\n    //     }\n    //     if(z < min.z){\n    //         min.z = z;\n    //     }\n    // });\n\n  }\n\n}\nconst worldCornerTempPos = new Vec3();\nconst worldCornersTemp = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\n/**\n * BODY_TYPES\n */\nconst BODY_TYPES = {\n  /** DYNAMIC */\n  DYNAMIC: 1,\n\n  /** STATIC */\n  STATIC: 2,\n\n  /** KINEMATIC */\n  KINEMATIC: 4\n};\n/**\n * BodyType\n */\n\n/**\n * BODY_SLEEP_STATES\n */\nconst BODY_SLEEP_STATES = {\n  /** AWAKE */\n  AWAKE: 0,\n\n  /** SLEEPY */\n  SLEEPY: 1,\n\n  /** SLEEPING */\n  SLEEPING: 2\n};\n/**\n * BodySleepState\n */\n\n/**\n * Base class for all body types.\n * @example\n *     const shape = new CANNON.Sphere(1)\n *     const body = new CANNON.Body({\n *       mass: 1,\n *       shape,\n *     })\n *     world.addBody(body)\n */\nclass Body extends EventTarget {\n  /**\n   * Dispatched after two bodies collide. This event is dispatched on each\n   * of the two bodies involved in the collision.\n   * @event collide\n   * @param body The body that was involved in the collision.\n   * @param contact The details of the collision.\n   */\n\n  /**\n   * A dynamic body is fully simulated. Can be moved manually by the user, but normally they move according to forces. A dynamic body can collide with all body types. A dynamic body always has finite, non-zero mass.\n   */\n\n  /**\n   * A static body does not move during simulation and behaves as if it has infinite mass. Static bodies can be moved manually by setting the position of the body. The velocity of a static body is always zero. Static bodies do not collide with other static or kinematic bodies.\n   */\n\n  /**\n   * A kinematic body moves under simulation according to its velocity. They do not respond to forces. They can be moved manually, but normally a kinematic body is moved by setting its velocity. A kinematic body behaves as if it has infinite mass. Kinematic bodies do not collide with other static or kinematic bodies.\n   */\n\n  /**\n   * AWAKE\n   */\n\n  /**\n   * SLEEPY\n   */\n\n  /**\n   * SLEEPING\n   */\n\n  /**\n   * Dispatched after a sleeping body has woken up.\n   * @event wakeup\n   */\n\n  /**\n   * Dispatched after a body has gone in to the sleepy state.\n   * @event sleepy\n   */\n\n  /**\n   * Dispatched after a body has fallen asleep.\n   * @event sleep\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    super();\n    this.id = Body.idCounter++;\n    this.index = -1;\n    this.world = null;\n    this.vlambda = new Vec3();\n    this.collisionFilterGroup = typeof options.collisionFilterGroup === 'number' ? options.collisionFilterGroup : 1;\n    this.collisionFilterMask = typeof options.collisionFilterMask === 'number' ? options.collisionFilterMask : -1;\n    this.collisionResponse = typeof options.collisionResponse === 'boolean' ? options.collisionResponse : true;\n    this.position = new Vec3();\n    this.previousPosition = new Vec3();\n    this.interpolatedPosition = new Vec3();\n    this.initPosition = new Vec3();\n\n    if (options.position) {\n      this.position.copy(options.position);\n      this.previousPosition.copy(options.position);\n      this.interpolatedPosition.copy(options.position);\n      this.initPosition.copy(options.position);\n    }\n\n    this.velocity = new Vec3();\n\n    if (options.velocity) {\n      this.velocity.copy(options.velocity);\n    }\n\n    this.initVelocity = new Vec3();\n    this.force = new Vec3();\n    const mass = typeof options.mass === 'number' ? options.mass : 0;\n    this.mass = mass;\n    this.invMass = mass > 0 ? 1.0 / mass : 0;\n    this.material = options.material || null;\n    this.linearDamping = typeof options.linearDamping === 'number' ? options.linearDamping : 0.01;\n    this.type = mass <= 0.0 ? Body.STATIC : Body.DYNAMIC;\n\n    if (typeof options.type === typeof Body.STATIC) {\n      this.type = options.type;\n    }\n\n    this.allowSleep = typeof options.allowSleep !== 'undefined' ? options.allowSleep : true;\n    this.sleepState = Body.AWAKE;\n    this.sleepSpeedLimit = typeof options.sleepSpeedLimit !== 'undefined' ? options.sleepSpeedLimit : 0.1;\n    this.sleepTimeLimit = typeof options.sleepTimeLimit !== 'undefined' ? options.sleepTimeLimit : 1;\n    this.timeLastSleepy = 0;\n    this.wakeUpAfterNarrowphase = false;\n    this.torque = new Vec3();\n    this.quaternion = new Quaternion();\n    this.initQuaternion = new Quaternion();\n    this.previousQuaternion = new Quaternion();\n    this.interpolatedQuaternion = new Quaternion();\n\n    if (options.quaternion) {\n      this.quaternion.copy(options.quaternion);\n      this.initQuaternion.copy(options.quaternion);\n      this.previousQuaternion.copy(options.quaternion);\n      this.interpolatedQuaternion.copy(options.quaternion);\n    }\n\n    this.angularVelocity = new Vec3();\n\n    if (options.angularVelocity) {\n      this.angularVelocity.copy(options.angularVelocity);\n    }\n\n    this.initAngularVelocity = new Vec3();\n    this.shapes = [];\n    this.shapeOffsets = [];\n    this.shapeOrientations = [];\n    this.inertia = new Vec3();\n    this.invInertia = new Vec3();\n    this.invInertiaWorld = new Mat3();\n    this.invMassSolve = 0;\n    this.invInertiaSolve = new Vec3();\n    this.invInertiaWorldSolve = new Mat3();\n    this.fixedRotation = typeof options.fixedRotation !== 'undefined' ? options.fixedRotation : false;\n    this.angularDamping = typeof options.angularDamping !== 'undefined' ? options.angularDamping : 0.01;\n    this.linearFactor = new Vec3(1, 1, 1);\n\n    if (options.linearFactor) {\n      this.linearFactor.copy(options.linearFactor);\n    }\n\n    this.angularFactor = new Vec3(1, 1, 1);\n\n    if (options.angularFactor) {\n      this.angularFactor.copy(options.angularFactor);\n    }\n\n    this.aabb = new AABB();\n    this.aabbNeedsUpdate = true;\n    this.boundingRadius = 0;\n    this.wlambda = new Vec3();\n    this.isTrigger = Boolean(options.isTrigger);\n\n    if (options.shape) {\n      this.addShape(options.shape);\n    }\n\n    this.updateMassProperties();\n  }\n  /**\n   * Wake the body up.\n   */\n\n\n  wakeUp() {\n    const prevState = this.sleepState;\n    this.sleepState = Body.AWAKE;\n    this.wakeUpAfterNarrowphase = false;\n\n    if (prevState === Body.SLEEPING) {\n      this.dispatchEvent(Body.wakeupEvent);\n    }\n  }\n  /**\n   * Force body sleep\n   */\n\n\n  sleep() {\n    this.sleepState = Body.SLEEPING;\n    this.velocity.set(0, 0, 0);\n    this.angularVelocity.set(0, 0, 0);\n    this.wakeUpAfterNarrowphase = false;\n  }\n  /**\n   * Called every timestep to update internal sleep timer and change sleep state if needed.\n   * @param time The world time in seconds\n   */\n\n\n  sleepTick(time) {\n    if (this.allowSleep) {\n      const sleepState = this.sleepState;\n      const speedSquared = this.velocity.lengthSquared() + this.angularVelocity.lengthSquared();\n      const speedLimitSquared = this.sleepSpeedLimit ** 2;\n\n      if (sleepState === Body.AWAKE && speedSquared < speedLimitSquared) {\n        this.sleepState = Body.SLEEPY; // Sleepy\n\n        this.timeLastSleepy = time;\n        this.dispatchEvent(Body.sleepyEvent);\n      } else if (sleepState === Body.SLEEPY && speedSquared > speedLimitSquared) {\n        this.wakeUp(); // Wake up\n      } else if (sleepState === Body.SLEEPY && time - this.timeLastSleepy > this.sleepTimeLimit) {\n        this.sleep(); // Sleeping\n\n        this.dispatchEvent(Body.sleepEvent);\n      }\n    }\n  }\n  /**\n   * If the body is sleeping, it should be immovable / have infinite mass during solve. We solve it by having a separate \"solve mass\".\n   */\n\n\n  updateSolveMassProperties() {\n    if (this.sleepState === Body.SLEEPING || this.type === Body.KINEMATIC) {\n      this.invMassSolve = 0;\n      this.invInertiaSolve.setZero();\n      this.invInertiaWorldSolve.setZero();\n    } else {\n      this.invMassSolve = this.invMass;\n      this.invInertiaSolve.copy(this.invInertia);\n      this.invInertiaWorldSolve.copy(this.invInertiaWorld);\n    }\n  }\n  /**\n   * Convert a world point to local body frame.\n   */\n\n\n  pointToLocalFrame(worldPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    worldPoint.vsub(this.position, result);\n    this.quaternion.conjugate().vmult(result, result);\n    return result;\n  }\n  /**\n   * Convert a world vector to local body frame.\n   */\n\n\n  vectorToLocalFrame(worldVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.conjugate().vmult(worldVector, result);\n    return result;\n  }\n  /**\n   * Convert a local body point to world frame.\n   */\n\n\n  pointToWorldFrame(localPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.vmult(localPoint, result);\n    result.vadd(this.position, result);\n    return result;\n  }\n  /**\n   * Convert a local body point to world frame.\n   */\n\n\n  vectorToWorldFrame(localVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.vmult(localVector, result);\n    return result;\n  }\n  /**\n   * Add a shape to the body with a local offset and orientation.\n   * @return The body object, for chainability.\n   */\n\n\n  addShape(shape, _offset, _orientation) {\n    const offset = new Vec3();\n    const orientation = new Quaternion();\n\n    if (_offset) {\n      offset.copy(_offset);\n    }\n\n    if (_orientation) {\n      orientation.copy(_orientation);\n    }\n\n    this.shapes.push(shape);\n    this.shapeOffsets.push(offset);\n    this.shapeOrientations.push(orientation);\n    this.updateMassProperties();\n    this.updateBoundingRadius();\n    this.aabbNeedsUpdate = true;\n    shape.body = this;\n    return this;\n  }\n  /**\n   * Remove a shape from the body.\n   * @return The body object, for chainability.\n   */\n\n\n  removeShape(shape) {\n    const index = this.shapes.indexOf(shape);\n\n    if (index === -1) {\n      console.warn('Shape does not belong to the body');\n      return this;\n    }\n\n    this.shapes.splice(index, 1);\n    this.shapeOffsets.splice(index, 1);\n    this.shapeOrientations.splice(index, 1);\n    this.updateMassProperties();\n    this.updateBoundingRadius();\n    this.aabbNeedsUpdate = true;\n    shape.body = null;\n    return this;\n  }\n  /**\n   * Update the bounding radius of the body. Should be done if any of the shapes are changed.\n   */\n\n\n  updateBoundingRadius() {\n    const shapes = this.shapes;\n    const shapeOffsets = this.shapeOffsets;\n    const N = shapes.length;\n    let radius = 0;\n\n    for (let i = 0; i !== N; i++) {\n      const shape = shapes[i];\n      shape.updateBoundingSphereRadius();\n      const offset = shapeOffsets[i].length();\n      const r = shape.boundingSphereRadius;\n\n      if (offset + r > radius) {\n        radius = offset + r;\n      }\n    }\n\n    this.boundingRadius = radius;\n  }\n  /**\n   * Updates the .aabb\n   */\n\n\n  updateAABB() {\n    const shapes = this.shapes;\n    const shapeOffsets = this.shapeOffsets;\n    const shapeOrientations = this.shapeOrientations;\n    const N = shapes.length;\n    const offset = tmpVec;\n    const orientation = tmpQuat;\n    const bodyQuat = this.quaternion;\n    const aabb = this.aabb;\n    const shapeAABB = updateAABB_shapeAABB;\n\n    for (let i = 0; i !== N; i++) {\n      const shape = shapes[i]; // Get shape world position\n\n      bodyQuat.vmult(shapeOffsets[i], offset);\n      offset.vadd(this.position, offset); // Get shape world quaternion\n\n      bodyQuat.mult(shapeOrientations[i], orientation); // Get shape AABB\n\n      shape.calculateWorldAABB(offset, orientation, shapeAABB.lowerBound, shapeAABB.upperBound);\n\n      if (i === 0) {\n        aabb.copy(shapeAABB);\n      } else {\n        aabb.extend(shapeAABB);\n      }\n    }\n\n    this.aabbNeedsUpdate = false;\n  }\n  /**\n   * Update `.inertiaWorld` and `.invInertiaWorld`\n   */\n\n\n  updateInertiaWorld(force) {\n    const I = this.invInertia;\n\n    if (I.x === I.y && I.y === I.z && !force) ; else {\n      const m1 = uiw_m1;\n      const m2 = uiw_m2;\n      uiw_m3;\n      m1.setRotationFromQuaternion(this.quaternion);\n      m1.transpose(m2);\n      m1.scale(I, m1);\n      m1.mmult(m2, this.invInertiaWorld);\n    }\n  }\n  /**\n   * Apply force to a point of the body. This could for example be a point on the Body surface.\n   * Applying force this way will add to Body.force and Body.torque.\n   * @param force The amount of force to add.\n   * @param relativePoint A point relative to the center of mass to apply the force on.\n   */\n\n\n  applyForce(force, relativePoint) {\n    if (relativePoint === void 0) {\n      relativePoint = new Vec3();\n    }\n\n    // Needed?\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    if (this.sleepState === Body.SLEEPING) {\n      this.wakeUp();\n    } // Compute produced rotational force\n\n\n    const rotForce = Body_applyForce_rotForce;\n    relativePoint.cross(force, rotForce); // Add linear force\n\n    this.force.vadd(force, this.force); // Add rotational force\n\n    this.torque.vadd(rotForce, this.torque);\n  }\n  /**\n   * Apply force to a local point in the body.\n   * @param force The force vector to apply, defined locally in the body frame.\n   * @param localPoint A local point in the body to apply the force on.\n   */\n\n\n  applyLocalForce(localForce, localPoint) {\n    if (localPoint === void 0) {\n      localPoint = new Vec3();\n    }\n\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    const worldForce = Body_applyLocalForce_worldForce;\n    const relativePointWorld = Body_applyLocalForce_relativePointWorld; // Transform the force vector to world space\n\n    this.vectorToWorldFrame(localForce, worldForce);\n    this.vectorToWorldFrame(localPoint, relativePointWorld);\n    this.applyForce(worldForce, relativePointWorld);\n  }\n  /**\n   * Apply torque to the body.\n   * @param torque The amount of torque to add.\n   */\n\n\n  applyTorque(torque) {\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    if (this.sleepState === Body.SLEEPING) {\n      this.wakeUp();\n    } // Add rotational force\n\n\n    this.torque.vadd(torque, this.torque);\n  }\n  /**\n   * Apply impulse to a point of the body. This could for example be a point on the Body surface.\n   * An impulse is a force added to a body during a short period of time (impulse = force * time).\n   * Impulses will be added to Body.velocity and Body.angularVelocity.\n   * @param impulse The amount of impulse to add.\n   * @param relativePoint A point relative to the center of mass to apply the force on.\n   */\n\n\n  applyImpulse(impulse, relativePoint) {\n    if (relativePoint === void 0) {\n      relativePoint = new Vec3();\n    }\n\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    if (this.sleepState === Body.SLEEPING) {\n      this.wakeUp();\n    } // Compute point position relative to the body center\n\n\n    const r = relativePoint; // Compute produced central impulse velocity\n\n    const velo = Body_applyImpulse_velo;\n    velo.copy(impulse);\n    velo.scale(this.invMass, velo); // Add linear impulse\n\n    this.velocity.vadd(velo, this.velocity); // Compute produced rotational impulse velocity\n\n    const rotVelo = Body_applyImpulse_rotVelo;\n    r.cross(impulse, rotVelo);\n    /*\n     rotVelo.x *= this.invInertia.x;\n     rotVelo.y *= this.invInertia.y;\n     rotVelo.z *= this.invInertia.z;\n     */\n\n    this.invInertiaWorld.vmult(rotVelo, rotVelo); // Add rotational Impulse\n\n    this.angularVelocity.vadd(rotVelo, this.angularVelocity);\n  }\n  /**\n   * Apply locally-defined impulse to a local point in the body.\n   * @param force The force vector to apply, defined locally in the body frame.\n   * @param localPoint A local point in the body to apply the force on.\n   */\n\n\n  applyLocalImpulse(localImpulse, localPoint) {\n    if (localPoint === void 0) {\n      localPoint = new Vec3();\n    }\n\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    const worldImpulse = Body_applyLocalImpulse_worldImpulse;\n    const relativePointWorld = Body_applyLocalImpulse_relativePoint; // Transform the force vector to world space\n\n    this.vectorToWorldFrame(localImpulse, worldImpulse);\n    this.vectorToWorldFrame(localPoint, relativePointWorld);\n    this.applyImpulse(worldImpulse, relativePointWorld);\n  }\n  /**\n   * Should be called whenever you change the body shape or mass.\n   */\n\n\n  updateMassProperties() {\n    const halfExtents = Body_updateMassProperties_halfExtents;\n    this.invMass = this.mass > 0 ? 1.0 / this.mass : 0;\n    const I = this.inertia;\n    const fixed = this.fixedRotation; // Approximate with AABB box\n\n    this.updateAABB();\n    halfExtents.set((this.aabb.upperBound.x - this.aabb.lowerBound.x) / 2, (this.aabb.upperBound.y - this.aabb.lowerBound.y) / 2, (this.aabb.upperBound.z - this.aabb.lowerBound.z) / 2);\n    Box.calculateInertia(halfExtents, this.mass, I);\n    this.invInertia.set(I.x > 0 && !fixed ? 1.0 / I.x : 0, I.y > 0 && !fixed ? 1.0 / I.y : 0, I.z > 0 && !fixed ? 1.0 / I.z : 0);\n    this.updateInertiaWorld(true);\n  }\n  /**\n   * Get world velocity of a point in the body.\n   * @param worldPoint\n   * @param result\n   * @return The result vector.\n   */\n\n\n  getVelocityAtWorldPoint(worldPoint, result) {\n    const r = new Vec3();\n    worldPoint.vsub(this.position, r);\n    this.angularVelocity.cross(r, result);\n    this.velocity.vadd(result, result);\n    return result;\n  }\n  /**\n   * Move the body forward in time.\n   * @param dt Time step\n   * @param quatNormalize Set to true to normalize the body quaternion\n   * @param quatNormalizeFast If the quaternion should be normalized using \"fast\" quaternion normalization\n   */\n\n\n  integrate(dt, quatNormalize, quatNormalizeFast) {\n    // Save previous position\n    this.previousPosition.copy(this.position);\n    this.previousQuaternion.copy(this.quaternion);\n\n    if (!(this.type === Body.DYNAMIC || this.type === Body.KINEMATIC) || this.sleepState === Body.SLEEPING) {\n      // Only for dynamic\n      return;\n    }\n\n    const velo = this.velocity;\n    const angularVelo = this.angularVelocity;\n    const pos = this.position;\n    const force = this.force;\n    const torque = this.torque;\n    const quat = this.quaternion;\n    const invMass = this.invMass;\n    const invInertia = this.invInertiaWorld;\n    const linearFactor = this.linearFactor;\n    const iMdt = invMass * dt;\n    velo.x += force.x * iMdt * linearFactor.x;\n    velo.y += force.y * iMdt * linearFactor.y;\n    velo.z += force.z * iMdt * linearFactor.z;\n    const e = invInertia.elements;\n    const angularFactor = this.angularFactor;\n    const tx = torque.x * angularFactor.x;\n    const ty = torque.y * angularFactor.y;\n    const tz = torque.z * angularFactor.z;\n    angularVelo.x += dt * (e[0] * tx + e[1] * ty + e[2] * tz);\n    angularVelo.y += dt * (e[3] * tx + e[4] * ty + e[5] * tz);\n    angularVelo.z += dt * (e[6] * tx + e[7] * ty + e[8] * tz); // Use new velocity  - leap frog\n\n    pos.x += velo.x * dt;\n    pos.y += velo.y * dt;\n    pos.z += velo.z * dt;\n    quat.integrate(this.angularVelocity, dt, this.angularFactor, quat);\n\n    if (quatNormalize) {\n      if (quatNormalizeFast) {\n        quat.normalizeFast();\n      } else {\n        quat.normalize();\n      }\n    }\n\n    this.aabbNeedsUpdate = true; // Update world inertia\n\n    this.updateInertiaWorld();\n  }\n\n}\nBody.idCounter = 0;\nBody.COLLIDE_EVENT_NAME = 'collide';\nBody.DYNAMIC = BODY_TYPES.DYNAMIC;\nBody.STATIC = BODY_TYPES.STATIC;\nBody.KINEMATIC = BODY_TYPES.KINEMATIC;\nBody.AWAKE = BODY_SLEEP_STATES.AWAKE;\nBody.SLEEPY = BODY_SLEEP_STATES.SLEEPY;\nBody.SLEEPING = BODY_SLEEP_STATES.SLEEPING;\nBody.wakeupEvent = {\n  type: 'wakeup'\n};\nBody.sleepyEvent = {\n  type: 'sleepy'\n};\nBody.sleepEvent = {\n  type: 'sleep'\n};\nconst tmpVec = new Vec3();\nconst tmpQuat = new Quaternion();\nconst updateAABB_shapeAABB = new AABB();\nconst uiw_m1 = new Mat3();\nconst uiw_m2 = new Mat3();\nconst uiw_m3 = new Mat3();\nconst Body_applyForce_rotForce = new Vec3();\nconst Body_applyLocalForce_worldForce = new Vec3();\nconst Body_applyLocalForce_relativePointWorld = new Vec3();\nconst Body_applyImpulse_velo = new Vec3();\nconst Body_applyImpulse_rotVelo = new Vec3();\nconst Body_applyLocalImpulse_worldImpulse = new Vec3();\nconst Body_applyLocalImpulse_relativePoint = new Vec3();\nconst Body_updateMassProperties_halfExtents = new Vec3();\n\n/**\n * Base class for broadphase implementations\n * @author schteppe\n */\nclass Broadphase {\n  /**\n   * The world to search for collisions in.\n   */\n\n  /**\n   * If set to true, the broadphase uses bounding boxes for intersection tests, else it uses bounding spheres.\n   */\n\n  /**\n   * Set to true if the objects in the world moved.\n   */\n  constructor() {\n    this.world = null;\n    this.useBoundingBoxes = false;\n    this.dirty = true;\n  }\n  /**\n   * Get the collision pairs from the world\n   * @param world The world to search in\n   * @param p1 Empty array to be filled with body objects\n   * @param p2 Empty array to be filled with body objects\n   */\n\n\n  collisionPairs(world, p1, p2) {\n    throw new Error('collisionPairs not implemented for this BroadPhase class!');\n  }\n  /**\n   * Check if a body pair needs to be intersection tested at all.\n   */\n\n\n  needBroadphaseCollision(bodyA, bodyB) {\n    // Check collision filter masks\n    if ((bodyA.collisionFilterGroup & bodyB.collisionFilterMask) === 0 || (bodyB.collisionFilterGroup & bodyA.collisionFilterMask) === 0) {\n      return false;\n    } // Check types\n\n\n    if (((bodyA.type & Body.STATIC) !== 0 || bodyA.sleepState === Body.SLEEPING) && ((bodyB.type & Body.STATIC) !== 0 || bodyB.sleepState === Body.SLEEPING)) {\n      // Both bodies are static or sleeping. Skip.\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Check if the bounding volumes of two bodies intersect.\n   */\n\n\n  intersectionTest(bodyA, bodyB, pairs1, pairs2) {\n    if (this.useBoundingBoxes) {\n      this.doBoundingBoxBroadphase(bodyA, bodyB, pairs1, pairs2);\n    } else {\n      this.doBoundingSphereBroadphase(bodyA, bodyB, pairs1, pairs2);\n    }\n  }\n  /**\n   * Check if the bounding spheres of two bodies are intersecting.\n   * @param pairs1 bodyA is appended to this array if intersection\n   * @param pairs2 bodyB is appended to this array if intersection\n   */\n\n\n  doBoundingSphereBroadphase(bodyA, bodyB, pairs1, pairs2) {\n    const r = Broadphase_collisionPairs_r;\n    bodyB.position.vsub(bodyA.position, r);\n    const boundingRadiusSum2 = (bodyA.boundingRadius + bodyB.boundingRadius) ** 2;\n    const norm2 = r.lengthSquared();\n\n    if (norm2 < boundingRadiusSum2) {\n      pairs1.push(bodyA);\n      pairs2.push(bodyB);\n    }\n  }\n  /**\n   * Check if the bounding boxes of two bodies are intersecting.\n   */\n\n\n  doBoundingBoxBroadphase(bodyA, bodyB, pairs1, pairs2) {\n    if (bodyA.aabbNeedsUpdate) {\n      bodyA.updateAABB();\n    }\n\n    if (bodyB.aabbNeedsUpdate) {\n      bodyB.updateAABB();\n    } // Check AABB / AABB\n\n\n    if (bodyA.aabb.overlaps(bodyB.aabb)) {\n      pairs1.push(bodyA);\n      pairs2.push(bodyB);\n    }\n  }\n  /**\n   * Removes duplicate pairs from the pair arrays.\n   */\n\n\n  makePairsUnique(pairs1, pairs2) {\n    const t = Broadphase_makePairsUnique_temp;\n    const p1 = Broadphase_makePairsUnique_p1;\n    const p2 = Broadphase_makePairsUnique_p2;\n    const N = pairs1.length;\n\n    for (let i = 0; i !== N; i++) {\n      p1[i] = pairs1[i];\n      p2[i] = pairs2[i];\n    }\n\n    pairs1.length = 0;\n    pairs2.length = 0;\n\n    for (let i = 0; i !== N; i++) {\n      const id1 = p1[i].id;\n      const id2 = p2[i].id;\n      const key = id1 < id2 ? `${id1},${id2}` : `${id2},${id1}`;\n      t[key] = i;\n      t.keys.push(key);\n    }\n\n    for (let i = 0; i !== t.keys.length; i++) {\n      const key = t.keys.pop();\n      const pairIndex = t[key];\n      pairs1.push(p1[pairIndex]);\n      pairs2.push(p2[pairIndex]);\n      delete t[key];\n    }\n  }\n  /**\n   * To be implemented by subcasses\n   */\n\n\n  setWorld(world) {}\n  /**\n   * Check if the bounding spheres of two bodies overlap.\n   */\n\n\n  static boundingSphereCheck(bodyA, bodyB) {\n    const dist = new Vec3(); // bsc_dist;\n\n    bodyA.position.vsub(bodyB.position, dist);\n    const sa = bodyA.shapes[0];\n    const sb = bodyB.shapes[0];\n    return Math.pow(sa.boundingSphereRadius + sb.boundingSphereRadius, 2) > dist.lengthSquared();\n  }\n  /**\n   * Returns all the bodies within the AABB.\n   */\n\n\n  aabbQuery(world, aabb, result) {\n    console.warn('.aabbQuery is not implemented in this Broadphase subclass.');\n    return [];\n  }\n\n} // Temp objects\n\nconst Broadphase_collisionPairs_r = new Vec3();\nnew Vec3();\nnew Quaternion();\nnew Vec3();\nconst Broadphase_makePairsUnique_temp = {\n  keys: []\n};\nconst Broadphase_makePairsUnique_p1 = [];\nconst Broadphase_makePairsUnique_p2 = [];\nnew Vec3();\n\n/**\n * Axis aligned uniform grid broadphase.\n * @todo Needs support for more than just planes and spheres.\n */\nclass GridBroadphase extends Broadphase {\n  /**\n   * Number of boxes along x\n   */\n\n  /**\n   * Number of boxes along y\n   */\n\n  /**\n   * Number of boxes along z\n   */\n\n  /**\n   * aabbMin\n   */\n\n  /**\n   * aabbMax\n   */\n\n  /**\n   * bins\n   */\n\n  /**\n   * binLengths\n   */\n\n  /**\n   * @param nx Number of boxes along x.\n   * @param ny Number of boxes along y.\n   * @param nz Number of boxes along z.\n   */\n  constructor(aabbMin, aabbMax, nx, ny, nz) {\n    if (aabbMin === void 0) {\n      aabbMin = new Vec3(100, 100, 100);\n    }\n\n    if (aabbMax === void 0) {\n      aabbMax = new Vec3(-100, -100, -100);\n    }\n\n    if (nx === void 0) {\n      nx = 10;\n    }\n\n    if (ny === void 0) {\n      ny = 10;\n    }\n\n    if (nz === void 0) {\n      nz = 10;\n    }\n\n    super();\n    this.nx = nx;\n    this.ny = ny;\n    this.nz = nz;\n    this.aabbMin = aabbMin;\n    this.aabbMax = aabbMax;\n    const nbins = this.nx * this.ny * this.nz;\n\n    if (nbins <= 0) {\n      throw \"GridBroadphase: Each dimension's n must be >0\";\n    }\n\n    this.bins = [];\n    this.binLengths = []; // Rather than continually resizing arrays (thrashing the memory), just record length and allow them to grow\n\n    this.bins.length = nbins;\n    this.binLengths.length = nbins;\n\n    for (let i = 0; i < nbins; i++) {\n      this.bins[i] = [];\n      this.binLengths[i] = 0;\n    }\n  }\n  /**\n   * Get all the collision pairs in the physics world\n   */\n\n\n  collisionPairs(world, pairs1, pairs2) {\n    const N = world.bodies.length;\n    const bodies = world.bodies;\n    const max = this.aabbMax;\n    const min = this.aabbMin;\n    const nx = this.nx;\n    const ny = this.ny;\n    const nz = this.nz;\n    const xstep = ny * nz;\n    const ystep = nz;\n    const zstep = 1;\n    const xmax = max.x;\n    const ymax = max.y;\n    const zmax = max.z;\n    const xmin = min.x;\n    const ymin = min.y;\n    const zmin = min.z;\n    const xmult = nx / (xmax - xmin);\n    const ymult = ny / (ymax - ymin);\n    const zmult = nz / (zmax - zmin);\n    const binsizeX = (xmax - xmin) / nx;\n    const binsizeY = (ymax - ymin) / ny;\n    const binsizeZ = (zmax - zmin) / nz;\n    const binRadius = Math.sqrt(binsizeX * binsizeX + binsizeY * binsizeY + binsizeZ * binsizeZ) * 0.5;\n    const types = Shape.types;\n    const SPHERE = types.SPHERE;\n    const PLANE = types.PLANE;\n    types.BOX;\n    types.COMPOUND;\n    types.CONVEXPOLYHEDRON;\n    const bins = this.bins;\n    const binLengths = this.binLengths;\n    const Nbins = this.bins.length; // Reset bins\n\n    for (let i = 0; i !== Nbins; i++) {\n      binLengths[i] = 0;\n    }\n\n    const ceil = Math.ceil;\n\n    function addBoxToBins(x0, y0, z0, x1, y1, z1, bi) {\n      let xoff0 = (x0 - xmin) * xmult | 0;\n      let yoff0 = (y0 - ymin) * ymult | 0;\n      let zoff0 = (z0 - zmin) * zmult | 0;\n      let xoff1 = ceil((x1 - xmin) * xmult);\n      let yoff1 = ceil((y1 - ymin) * ymult);\n      let zoff1 = ceil((z1 - zmin) * zmult);\n\n      if (xoff0 < 0) {\n        xoff0 = 0;\n      } else if (xoff0 >= nx) {\n        xoff0 = nx - 1;\n      }\n\n      if (yoff0 < 0) {\n        yoff0 = 0;\n      } else if (yoff0 >= ny) {\n        yoff0 = ny - 1;\n      }\n\n      if (zoff0 < 0) {\n        zoff0 = 0;\n      } else if (zoff0 >= nz) {\n        zoff0 = nz - 1;\n      }\n\n      if (xoff1 < 0) {\n        xoff1 = 0;\n      } else if (xoff1 >= nx) {\n        xoff1 = nx - 1;\n      }\n\n      if (yoff1 < 0) {\n        yoff1 = 0;\n      } else if (yoff1 >= ny) {\n        yoff1 = ny - 1;\n      }\n\n      if (zoff1 < 0) {\n        zoff1 = 0;\n      } else if (zoff1 >= nz) {\n        zoff1 = nz - 1;\n      }\n\n      xoff0 *= xstep;\n      yoff0 *= ystep;\n      zoff0 *= zstep;\n      xoff1 *= xstep;\n      yoff1 *= ystep;\n      zoff1 *= zstep;\n\n      for (let xoff = xoff0; xoff <= xoff1; xoff += xstep) {\n        for (let yoff = yoff0; yoff <= yoff1; yoff += ystep) {\n          for (let zoff = zoff0; zoff <= zoff1; zoff += zstep) {\n            const idx = xoff + yoff + zoff;\n            bins[idx][binLengths[idx]++] = bi;\n          }\n        }\n      }\n    } // Put all bodies into the bins\n\n\n    for (let i = 0; i !== N; i++) {\n      const bi = bodies[i];\n      const si = bi.shapes[0];\n\n      switch (si.type) {\n        case SPHERE:\n          {\n            const shape = si; // Put in bin\n            // check if overlap with other bins\n\n            const x = bi.position.x;\n            const y = bi.position.y;\n            const z = bi.position.z;\n            const r = shape.radius;\n            addBoxToBins(x - r, y - r, z - r, x + r, y + r, z + r, bi);\n            break;\n          }\n\n        case PLANE:\n          {\n            const shape = si;\n\n            if (shape.worldNormalNeedsUpdate) {\n              shape.computeWorldNormal(bi.quaternion);\n            }\n\n            const planeNormal = shape.worldNormal; //Relative position from origin of plane object to the first bin\n            //Incremented as we iterate through the bins\n\n            const xreset = xmin + binsizeX * 0.5 - bi.position.x;\n            const yreset = ymin + binsizeY * 0.5 - bi.position.y;\n            const zreset = zmin + binsizeZ * 0.5 - bi.position.z;\n            const d = GridBroadphase_collisionPairs_d;\n            d.set(xreset, yreset, zreset);\n\n            for (let xi = 0, xoff = 0; xi !== nx; xi++, xoff += xstep, d.y = yreset, d.x += binsizeX) {\n              for (let yi = 0, yoff = 0; yi !== ny; yi++, yoff += ystep, d.z = zreset, d.y += binsizeY) {\n                for (let zi = 0, zoff = 0; zi !== nz; zi++, zoff += zstep, d.z += binsizeZ) {\n                  if (d.dot(planeNormal) < binRadius) {\n                    const idx = xoff + yoff + zoff;\n                    bins[idx][binLengths[idx]++] = bi;\n                  }\n                }\n              }\n            }\n\n            break;\n          }\n\n        default:\n          {\n            if (bi.aabbNeedsUpdate) {\n              bi.updateAABB();\n            }\n\n            addBoxToBins(bi.aabb.lowerBound.x, bi.aabb.lowerBound.y, bi.aabb.lowerBound.z, bi.aabb.upperBound.x, bi.aabb.upperBound.y, bi.aabb.upperBound.z, bi);\n            break;\n          }\n      }\n    } // Check each bin\n\n\n    for (let i = 0; i !== Nbins; i++) {\n      const binLength = binLengths[i]; //Skip bins with no potential collisions\n\n      if (binLength > 1) {\n        const bin = bins[i]; // Do N^2 broadphase inside\n\n        for (let xi = 0; xi !== binLength; xi++) {\n          const bi = bin[xi];\n\n          for (let yi = 0; yi !== xi; yi++) {\n            const bj = bin[yi];\n\n            if (this.needBroadphaseCollision(bi, bj)) {\n              this.intersectionTest(bi, bj, pairs1, pairs2);\n            }\n          }\n        }\n      }\n    } //\tfor (let zi = 0, zoff=0; zi < nz; zi++, zoff+= zstep) {\n    //\t\tconsole.log(\"layer \"+zi);\n    //\t\tfor (let yi = 0, yoff=0; yi < ny; yi++, yoff += ystep) {\n    //\t\t\tconst row = '';\n    //\t\t\tfor (let xi = 0, xoff=0; xi < nx; xi++, xoff += xstep) {\n    //\t\t\t\tconst idx = xoff + yoff + zoff;\n    //\t\t\t\trow += ' ' + binLengths[idx];\n    //\t\t\t}\n    //\t\t\tconsole.log(row);\n    //\t\t}\n    //\t}\n\n\n    this.makePairsUnique(pairs1, pairs2);\n  }\n\n}\nconst GridBroadphase_collisionPairs_d = new Vec3();\nnew Vec3();\n\n/**\n * Naive broadphase implementation, used in lack of better ones.\n *\n * The naive broadphase looks at all possible pairs without restriction, therefore it has complexity N^2 _(which is bad)_\n */\nclass NaiveBroadphase extends Broadphase {\n  /**\n   * @todo Remove useless constructor\n   */\n  constructor() {\n    super();\n  }\n  /**\n   * Get all the collision pairs in the physics world\n   */\n\n\n  collisionPairs(world, pairs1, pairs2) {\n    const bodies = world.bodies;\n    const n = bodies.length;\n    let bi;\n    let bj; // Naive N^2 ftw!\n\n    for (let i = 0; i !== n; i++) {\n      for (let j = 0; j !== i; j++) {\n        bi = bodies[i];\n        bj = bodies[j];\n\n        if (!this.needBroadphaseCollision(bi, bj)) {\n          continue;\n        }\n\n        this.intersectionTest(bi, bj, pairs1, pairs2);\n      }\n    }\n  }\n  /**\n   * Returns all the bodies within an AABB.\n   * @param result An array to store resulting bodies in.\n   */\n\n\n  aabbQuery(world, aabb, result) {\n    if (result === void 0) {\n      result = [];\n    }\n\n    for (let i = 0; i < world.bodies.length; i++) {\n      const b = world.bodies[i];\n\n      if (b.aabbNeedsUpdate) {\n        b.updateAABB();\n      } // Ugly hack until Body gets aabb\n\n\n      if (b.aabb.overlaps(aabb)) {\n        result.push(b);\n      }\n    }\n\n    return result;\n  }\n\n}\n\n/**\n * Storage for Ray casting data\n */\nclass RaycastResult {\n  /**\n   * rayFromWorld\n   */\n\n  /**\n   * rayToWorld\n   */\n\n  /**\n   * hitNormalWorld\n   */\n\n  /**\n   * hitPointWorld\n   */\n\n  /**\n   * hasHit\n   */\n\n  /**\n   * shape\n   */\n\n  /**\n   * body\n   */\n\n  /**\n   * The index of the hit triangle, if the hit shape was a trimesh\n   */\n\n  /**\n   * Distance to the hit. Will be set to -1 if there was no hit\n   */\n\n  /**\n   * If the ray should stop traversing the bodies\n   */\n  constructor() {\n    this.rayFromWorld = new Vec3();\n    this.rayToWorld = new Vec3();\n    this.hitNormalWorld = new Vec3();\n    this.hitPointWorld = new Vec3();\n    this.hasHit = false;\n    this.shape = null;\n    this.body = null;\n    this.hitFaceIndex = -1;\n    this.distance = -1;\n    this.shouldStop = false;\n  }\n  /**\n   * Reset all result data.\n   */\n\n\n  reset() {\n    this.rayFromWorld.setZero();\n    this.rayToWorld.setZero();\n    this.hitNormalWorld.setZero();\n    this.hitPointWorld.setZero();\n    this.hasHit = false;\n    this.shape = null;\n    this.body = null;\n    this.hitFaceIndex = -1;\n    this.distance = -1;\n    this.shouldStop = false;\n  }\n  /**\n   * abort\n   */\n\n\n  abort() {\n    this.shouldStop = true;\n  }\n  /**\n   * Set result data.\n   */\n\n\n  set(rayFromWorld, rayToWorld, hitNormalWorld, hitPointWorld, shape, body, distance) {\n    this.rayFromWorld.copy(rayFromWorld);\n    this.rayToWorld.copy(rayToWorld);\n    this.hitNormalWorld.copy(hitNormalWorld);\n    this.hitPointWorld.copy(hitPointWorld);\n    this.shape = shape;\n    this.body = body;\n    this.distance = distance;\n  }\n\n}\n\nlet _Shape$types$SPHERE, _Shape$types$PLANE, _Shape$types$BOX, _Shape$types$CYLINDER, _Shape$types$CONVEXPO, _Shape$types$HEIGHTFI, _Shape$types$TRIMESH;\n\n/**\n * RAY_MODES\n */\nconst RAY_MODES = {\n  /** CLOSEST */\n  CLOSEST: 1,\n\n  /** ANY */\n  ANY: 2,\n\n  /** ALL */\n  ALL: 4\n};\n/**\n * RayMode\n */\n\n_Shape$types$SPHERE = Shape.types.SPHERE;\n_Shape$types$PLANE = Shape.types.PLANE;\n_Shape$types$BOX = Shape.types.BOX;\n_Shape$types$CYLINDER = Shape.types.CYLINDER;\n_Shape$types$CONVEXPO = Shape.types.CONVEXPOLYHEDRON;\n_Shape$types$HEIGHTFI = Shape.types.HEIGHTFIELD;\n_Shape$types$TRIMESH = Shape.types.TRIMESH;\n\n/**\n * A line in 3D space that intersects bodies and return points.\n */\nclass Ray {\n  /**\n   * from\n   */\n\n  /**\n   * to\n   */\n\n  /**\n   * direction\n   */\n\n  /**\n   * The precision of the ray. Used when checking parallelity etc.\n   * @default 0.0001\n   */\n\n  /**\n   * Set to `false` if you don't want the Ray to take `collisionResponse` flags into account on bodies and shapes.\n   * @default true\n   */\n\n  /**\n   * If set to `true`, the ray skips any hits with normal.dot(rayDirection) < 0.\n   * @default false\n   */\n\n  /**\n   * collisionFilterMask\n   * @default -1\n   */\n\n  /**\n   * collisionFilterGroup\n   * @default -1\n   */\n\n  /**\n   * The intersection mode. Should be Ray.ANY, Ray.ALL or Ray.CLOSEST.\n   * @default RAY.ANY\n   */\n\n  /**\n   * Current result object.\n   */\n\n  /**\n   * Will be set to `true` during intersectWorld() if the ray hit anything.\n   */\n\n  /**\n   * User-provided result callback. Will be used if mode is Ray.ALL.\n   */\n\n  /**\n   * CLOSEST\n   */\n\n  /**\n   * ANY\n   */\n\n  /**\n   * ALL\n   */\n  get [_Shape$types$SPHERE]() {\n    return this._intersectSphere;\n  }\n\n  get [_Shape$types$PLANE]() {\n    return this._intersectPlane;\n  }\n\n  get [_Shape$types$BOX]() {\n    return this._intersectBox;\n  }\n\n  get [_Shape$types$CYLINDER]() {\n    return this._intersectConvex;\n  }\n\n  get [_Shape$types$CONVEXPO]() {\n    return this._intersectConvex;\n  }\n\n  get [_Shape$types$HEIGHTFI]() {\n    return this._intersectHeightfield;\n  }\n\n  get [_Shape$types$TRIMESH]() {\n    return this._intersectTrimesh;\n  }\n\n  constructor(from, to) {\n    if (from === void 0) {\n      from = new Vec3();\n    }\n\n    if (to === void 0) {\n      to = new Vec3();\n    }\n\n    this.from = from.clone();\n    this.to = to.clone();\n    this.direction = new Vec3();\n    this.precision = 0.0001;\n    this.checkCollisionResponse = true;\n    this.skipBackfaces = false;\n    this.collisionFilterMask = -1;\n    this.collisionFilterGroup = -1;\n    this.mode = Ray.ANY;\n    this.result = new RaycastResult();\n    this.hasHit = false;\n\n    this.callback = result => {};\n  }\n  /**\n   * Do itersection against all bodies in the given World.\n   * @return True if the ray hit anything, otherwise false.\n   */\n\n\n  intersectWorld(world, options) {\n    this.mode = options.mode || Ray.ANY;\n    this.result = options.result || new RaycastResult();\n    this.skipBackfaces = !!options.skipBackfaces;\n    this.collisionFilterMask = typeof options.collisionFilterMask !== 'undefined' ? options.collisionFilterMask : -1;\n    this.collisionFilterGroup = typeof options.collisionFilterGroup !== 'undefined' ? options.collisionFilterGroup : -1;\n    this.checkCollisionResponse = typeof options.checkCollisionResponse !== 'undefined' ? options.checkCollisionResponse : true;\n\n    if (options.from) {\n      this.from.copy(options.from);\n    }\n\n    if (options.to) {\n      this.to.copy(options.to);\n    }\n\n    this.callback = options.callback || (() => {});\n\n    this.hasHit = false;\n    this.result.reset();\n    this.updateDirection();\n    this.getAABB(tmpAABB$1);\n    tmpArray.length = 0;\n    world.broadphase.aabbQuery(world, tmpAABB$1, tmpArray);\n    this.intersectBodies(tmpArray);\n    return this.hasHit;\n  }\n  /**\n   * Shoot a ray at a body, get back information about the hit.\n   * @deprecated @param result set the result property of the Ray instead.\n   */\n\n\n  intersectBody(body, result) {\n    if (result) {\n      this.result = result;\n      this.updateDirection();\n    }\n\n    const checkCollisionResponse = this.checkCollisionResponse;\n\n    if (checkCollisionResponse && !body.collisionResponse) {\n      return;\n    }\n\n    if ((this.collisionFilterGroup & body.collisionFilterMask) === 0 || (body.collisionFilterGroup & this.collisionFilterMask) === 0) {\n      return;\n    }\n\n    const xi = intersectBody_xi;\n    const qi = intersectBody_qi;\n\n    for (let i = 0, N = body.shapes.length; i < N; i++) {\n      const shape = body.shapes[i];\n\n      if (checkCollisionResponse && !shape.collisionResponse) {\n        continue; // Skip\n      }\n\n      body.quaternion.mult(body.shapeOrientations[i], qi);\n      body.quaternion.vmult(body.shapeOffsets[i], xi);\n      xi.vadd(body.position, xi);\n      this.intersectShape(shape, qi, xi, body);\n\n      if (this.result.shouldStop) {\n        break;\n      }\n    }\n  }\n  /**\n   * Shoot a ray at an array bodies, get back information about the hit.\n   * @param bodies An array of Body objects.\n   * @deprecated @param result set the result property of the Ray instead.\n   *\n   */\n\n\n  intersectBodies(bodies, result) {\n    if (result) {\n      this.result = result;\n      this.updateDirection();\n    }\n\n    for (let i = 0, l = bodies.length; !this.result.shouldStop && i < l; i++) {\n      this.intersectBody(bodies[i]);\n    }\n  }\n  /**\n   * Updates the direction vector.\n   */\n\n\n  updateDirection() {\n    this.to.vsub(this.from, this.direction);\n    this.direction.normalize();\n  }\n\n  intersectShape(shape, quat, position, body) {\n    const from = this.from; // Checking boundingSphere\n\n    const distance = distanceFromIntersection(from, this.direction, position);\n\n    if (distance > shape.boundingSphereRadius) {\n      return;\n    }\n\n    const intersectMethod = this[shape.type];\n\n    if (intersectMethod) {\n      intersectMethod.call(this, shape, quat, position, body, shape);\n    }\n  }\n\n  _intersectBox(box, quat, position, body, reportedShape) {\n    return this._intersectConvex(box.convexPolyhedronRepresentation, quat, position, body, reportedShape);\n  }\n\n  _intersectPlane(shape, quat, position, body, reportedShape) {\n    const from = this.from;\n    const to = this.to;\n    const direction = this.direction; // Get plane normal\n\n    const worldNormal = new Vec3(0, 0, 1);\n    quat.vmult(worldNormal, worldNormal);\n    const len = new Vec3();\n    from.vsub(position, len);\n    const planeToFrom = len.dot(worldNormal);\n    to.vsub(position, len);\n    const planeToTo = len.dot(worldNormal);\n\n    if (planeToFrom * planeToTo > 0) {\n      // \"from\" and \"to\" are on the same side of the plane... bail out\n      return;\n    }\n\n    if (from.distanceTo(to) < planeToFrom) {\n      return;\n    }\n\n    const n_dot_dir = worldNormal.dot(direction);\n\n    if (Math.abs(n_dot_dir) < this.precision) {\n      // No intersection\n      return;\n    }\n\n    const planePointToFrom = new Vec3();\n    const dir_scaled_with_t = new Vec3();\n    const hitPointWorld = new Vec3();\n    from.vsub(position, planePointToFrom);\n    const t = -worldNormal.dot(planePointToFrom) / n_dot_dir;\n    direction.scale(t, dir_scaled_with_t);\n    from.vadd(dir_scaled_with_t, hitPointWorld);\n    this.reportIntersection(worldNormal, hitPointWorld, reportedShape, body, -1);\n  }\n  /**\n   * Get the world AABB of the ray.\n   */\n\n\n  getAABB(aabb) {\n    const {\n      lowerBound,\n      upperBound\n    } = aabb;\n    const to = this.to;\n    const from = this.from;\n    lowerBound.x = Math.min(to.x, from.x);\n    lowerBound.y = Math.min(to.y, from.y);\n    lowerBound.z = Math.min(to.z, from.z);\n    upperBound.x = Math.max(to.x, from.x);\n    upperBound.y = Math.max(to.y, from.y);\n    upperBound.z = Math.max(to.z, from.z);\n  }\n\n  _intersectHeightfield(shape, quat, position, body, reportedShape) {\n    shape.data;\n    shape.elementSize; // Convert the ray to local heightfield coordinates\n\n    const localRay = intersectHeightfield_localRay; //new Ray(this.from, this.to);\n\n    localRay.from.copy(this.from);\n    localRay.to.copy(this.to);\n    Transform.pointToLocalFrame(position, quat, localRay.from, localRay.from);\n    Transform.pointToLocalFrame(position, quat, localRay.to, localRay.to);\n    localRay.updateDirection(); // Get the index of the data points to test against\n\n    const index = intersectHeightfield_index;\n    let iMinX;\n    let iMinY;\n    let iMaxX;\n    let iMaxY; // Set to max\n\n    iMinX = iMinY = 0;\n    iMaxX = iMaxY = shape.data.length - 1;\n    const aabb = new AABB();\n    localRay.getAABB(aabb);\n    shape.getIndexOfPosition(aabb.lowerBound.x, aabb.lowerBound.y, index, true);\n    iMinX = Math.max(iMinX, index[0]);\n    iMinY = Math.max(iMinY, index[1]);\n    shape.getIndexOfPosition(aabb.upperBound.x, aabb.upperBound.y, index, true);\n    iMaxX = Math.min(iMaxX, index[0] + 1);\n    iMaxY = Math.min(iMaxY, index[1] + 1);\n\n    for (let i = iMinX; i < iMaxX; i++) {\n      for (let j = iMinY; j < iMaxY; j++) {\n        if (this.result.shouldStop) {\n          return;\n        }\n\n        shape.getAabbAtIndex(i, j, aabb);\n\n        if (!aabb.overlapsRay(localRay)) {\n          continue;\n        } // Lower triangle\n\n\n        shape.getConvexTrianglePillar(i, j, false);\n        Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n\n        this._intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\n\n        if (this.result.shouldStop) {\n          return;\n        } // Upper triangle\n\n\n        shape.getConvexTrianglePillar(i, j, true);\n        Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n\n        this._intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\n      }\n    }\n  }\n\n  _intersectSphere(sphere, quat, position, body, reportedShape) {\n    const from = this.from;\n    const to = this.to;\n    const r = sphere.radius;\n    const a = (to.x - from.x) ** 2 + (to.y - from.y) ** 2 + (to.z - from.z) ** 2;\n    const b = 2 * ((to.x - from.x) * (from.x - position.x) + (to.y - from.y) * (from.y - position.y) + (to.z - from.z) * (from.z - position.z));\n    const c = (from.x - position.x) ** 2 + (from.y - position.y) ** 2 + (from.z - position.z) ** 2 - r ** 2;\n    const delta = b ** 2 - 4 * a * c;\n    const intersectionPoint = Ray_intersectSphere_intersectionPoint;\n    const normal = Ray_intersectSphere_normal;\n\n    if (delta < 0) {\n      // No intersection\n      return;\n    } else if (delta === 0) {\n      // single intersection point\n      from.lerp(to, delta, intersectionPoint);\n      intersectionPoint.vsub(position, normal);\n      normal.normalize();\n      this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n    } else {\n      const d1 = (-b - Math.sqrt(delta)) / (2 * a);\n      const d2 = (-b + Math.sqrt(delta)) / (2 * a);\n\n      if (d1 >= 0 && d1 <= 1) {\n        from.lerp(to, d1, intersectionPoint);\n        intersectionPoint.vsub(position, normal);\n        normal.normalize();\n        this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n      }\n\n      if (this.result.shouldStop) {\n        return;\n      }\n\n      if (d2 >= 0 && d2 <= 1) {\n        from.lerp(to, d2, intersectionPoint);\n        intersectionPoint.vsub(position, normal);\n        normal.normalize();\n        this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n      }\n    }\n  }\n\n  _intersectConvex(shape, quat, position, body, reportedShape, options) {\n    intersectConvex_minDistNormal;\n    const normal = intersectConvex_normal;\n    const vector = intersectConvex_vector;\n    intersectConvex_minDistIntersect;\n    const faceList = options && options.faceList || null; // Checking faces\n\n    const faces = shape.faces;\n    const vertices = shape.vertices;\n    const normals = shape.faceNormals;\n    const direction = this.direction;\n    const from = this.from;\n    const to = this.to;\n    const fromToDistance = from.distanceTo(to);\n    const Nfaces = faceList ? faceList.length : faces.length;\n    const result = this.result;\n\n    for (let j = 0; !result.shouldStop && j < Nfaces; j++) {\n      const fi = faceList ? faceList[j] : j;\n      const face = faces[fi];\n      const faceNormal = normals[fi];\n      const q = quat;\n      const x = position; // determine if ray intersects the plane of the face\n      // note: this works regardless of the direction of the face normal\n      // Get plane point in world coordinates...\n\n      vector.copy(vertices[face[0]]);\n      q.vmult(vector, vector);\n      vector.vadd(x, vector); // ...but make it relative to the ray from. We'll fix this later.\n\n      vector.vsub(from, vector); // Get plane normal\n\n      q.vmult(faceNormal, normal); // If this dot product is negative, we have something interesting\n\n      const dot = direction.dot(normal); // Bail out if ray and plane are parallel\n\n      if (Math.abs(dot) < this.precision) {\n        continue;\n      } // calc distance to plane\n\n\n      const scalar = normal.dot(vector) / dot; // if negative distance, then plane is behind ray\n\n      if (scalar < 0) {\n        continue;\n      } // if (dot < 0) {\n      // Intersection point is from + direction * scalar\n\n\n      direction.scale(scalar, intersectPoint);\n      intersectPoint.vadd(from, intersectPoint); // a is the point we compare points b and c with.\n\n      a.copy(vertices[face[0]]);\n      q.vmult(a, a);\n      x.vadd(a, a);\n\n      for (let i = 1; !result.shouldStop && i < face.length - 1; i++) {\n        // Transform 3 vertices to world coords\n        b.copy(vertices[face[i]]);\n        c.copy(vertices[face[i + 1]]);\n        q.vmult(b, b);\n        q.vmult(c, c);\n        x.vadd(b, b);\n        x.vadd(c, c);\n        const distance = intersectPoint.distanceTo(from);\n\n        if (!(Ray.pointInTriangle(intersectPoint, a, b, c) || Ray.pointInTriangle(intersectPoint, b, a, c)) || distance > fromToDistance) {\n          continue;\n        }\n\n        this.reportIntersection(normal, intersectPoint, reportedShape, body, fi);\n      } // }\n\n    }\n  }\n  /**\n   * @todo Optimize by transforming the world to local space first.\n   * @todo Use Octree lookup\n   */\n\n\n  _intersectTrimesh(mesh, quat, position, body, reportedShape, options) {\n    const normal = intersectTrimesh_normal;\n    const triangles = intersectTrimesh_triangles;\n    const treeTransform = intersectTrimesh_treeTransform;\n    const vector = intersectConvex_vector;\n    const localDirection = intersectTrimesh_localDirection;\n    const localFrom = intersectTrimesh_localFrom;\n    const localTo = intersectTrimesh_localTo;\n    const worldIntersectPoint = intersectTrimesh_worldIntersectPoint;\n    const worldNormal = intersectTrimesh_worldNormal; // Checking faces\n\n    const indices = mesh.indices;\n    mesh.vertices; // const normals = mesh.faceNormals\n\n    const from = this.from;\n    const to = this.to;\n    const direction = this.direction;\n    treeTransform.position.copy(position);\n    treeTransform.quaternion.copy(quat); // Transform ray to local space!\n\n    Transform.vectorToLocalFrame(position, quat, direction, localDirection);\n    Transform.pointToLocalFrame(position, quat, from, localFrom);\n    Transform.pointToLocalFrame(position, quat, to, localTo);\n    localTo.x *= mesh.scale.x;\n    localTo.y *= mesh.scale.y;\n    localTo.z *= mesh.scale.z;\n    localFrom.x *= mesh.scale.x;\n    localFrom.y *= mesh.scale.y;\n    localFrom.z *= mesh.scale.z;\n    localTo.vsub(localFrom, localDirection);\n    localDirection.normalize();\n    const fromToDistanceSquared = localFrom.distanceSquared(localTo);\n    mesh.tree.rayQuery(this, treeTransform, triangles);\n\n    for (let i = 0, N = triangles.length; !this.result.shouldStop && i !== N; i++) {\n      const trianglesIndex = triangles[i];\n      mesh.getNormal(trianglesIndex, normal); // determine if ray intersects the plane of the face\n      // note: this works regardless of the direction of the face normal\n      // Get plane point in world coordinates...\n\n      mesh.getVertex(indices[trianglesIndex * 3], a); // ...but make it relative to the ray from. We'll fix this later.\n\n      a.vsub(localFrom, vector); // If this dot product is negative, we have something interesting\n\n      const dot = localDirection.dot(normal); // Bail out if ray and plane are parallel\n      // if (Math.abs( dot ) < this.precision){\n      //     continue;\n      // }\n      // calc distance to plane\n\n      const scalar = normal.dot(vector) / dot; // if negative distance, then plane is behind ray\n\n      if (scalar < 0) {\n        continue;\n      } // Intersection point is from + direction * scalar\n\n\n      localDirection.scale(scalar, intersectPoint);\n      intersectPoint.vadd(localFrom, intersectPoint); // Get triangle vertices\n\n      mesh.getVertex(indices[trianglesIndex * 3 + 1], b);\n      mesh.getVertex(indices[trianglesIndex * 3 + 2], c);\n      const squaredDistance = intersectPoint.distanceSquared(localFrom);\n\n      if (!(Ray.pointInTriangle(intersectPoint, b, a, c) || Ray.pointInTriangle(intersectPoint, a, b, c)) || squaredDistance > fromToDistanceSquared) {\n        continue;\n      } // transform intersectpoint and normal to world\n\n\n      Transform.vectorToWorldFrame(quat, normal, worldNormal);\n      Transform.pointToWorldFrame(position, quat, intersectPoint, worldIntersectPoint);\n      this.reportIntersection(worldNormal, worldIntersectPoint, reportedShape, body, trianglesIndex);\n    }\n\n    triangles.length = 0;\n  }\n  /**\n   * @return True if the intersections should continue\n   */\n\n\n  reportIntersection(normal, hitPointWorld, shape, body, hitFaceIndex) {\n    const from = this.from;\n    const to = this.to;\n    const distance = from.distanceTo(hitPointWorld);\n    const result = this.result; // Skip back faces?\n\n    if (this.skipBackfaces && normal.dot(this.direction) > 0) {\n      return;\n    }\n\n    result.hitFaceIndex = typeof hitFaceIndex !== 'undefined' ? hitFaceIndex : -1;\n\n    switch (this.mode) {\n      case Ray.ALL:\n        this.hasHit = true;\n        result.set(from, to, normal, hitPointWorld, shape, body, distance);\n        result.hasHit = true;\n        this.callback(result);\n        break;\n\n      case Ray.CLOSEST:\n        // Store if closer than current closest\n        if (distance < result.distance || !result.hasHit) {\n          this.hasHit = true;\n          result.hasHit = true;\n          result.set(from, to, normal, hitPointWorld, shape, body, distance);\n        }\n\n        break;\n\n      case Ray.ANY:\n        // Report and stop.\n        this.hasHit = true;\n        result.hasHit = true;\n        result.set(from, to, normal, hitPointWorld, shape, body, distance);\n        result.shouldStop = true;\n        break;\n    }\n  }\n  /**\n   * As per \"Barycentric Technique\" as named\n   * {@link https://www.blackpawn.com/texts/pointinpoly/default.html here} but without the division\n   */\n\n\n  static pointInTriangle(p, a, b, c) {\n    c.vsub(a, v0);\n    b.vsub(a, v1);\n    p.vsub(a, v2);\n    const dot00 = v0.dot(v0);\n    const dot01 = v0.dot(v1);\n    const dot02 = v0.dot(v2);\n    const dot11 = v1.dot(v1);\n    const dot12 = v1.dot(v2);\n    let u;\n    let v;\n    return (u = dot11 * dot02 - dot01 * dot12) >= 0 && (v = dot00 * dot12 - dot01 * dot02) >= 0 && u + v < dot00 * dot11 - dot01 * dot01;\n  }\n\n}\nRay.CLOSEST = RAY_MODES.CLOSEST;\nRay.ANY = RAY_MODES.ANY;\nRay.ALL = RAY_MODES.ALL;\nconst tmpAABB$1 = new AABB();\nconst tmpArray = [];\nconst v1 = new Vec3();\nconst v2 = new Vec3();\nconst intersectBody_xi = new Vec3();\nconst intersectBody_qi = new Quaternion();\nconst intersectPoint = new Vec3();\nconst a = new Vec3();\nconst b = new Vec3();\nconst c = new Vec3();\nnew Vec3();\nnew RaycastResult();\nconst intersectConvexOptions = {\n  faceList: [0]\n};\nconst worldPillarOffset = new Vec3();\nconst intersectHeightfield_localRay = new Ray();\nconst intersectHeightfield_index = [];\nconst Ray_intersectSphere_intersectionPoint = new Vec3();\nconst Ray_intersectSphere_normal = new Vec3();\nconst intersectConvex_normal = new Vec3();\nconst intersectConvex_minDistNormal = new Vec3();\nconst intersectConvex_minDistIntersect = new Vec3();\nconst intersectConvex_vector = new Vec3();\nconst intersectTrimesh_normal = new Vec3();\nconst intersectTrimesh_localDirection = new Vec3();\nconst intersectTrimesh_localFrom = new Vec3();\nconst intersectTrimesh_localTo = new Vec3();\nconst intersectTrimesh_worldNormal = new Vec3();\nconst intersectTrimesh_worldIntersectPoint = new Vec3();\nnew AABB();\nconst intersectTrimesh_triangles = [];\nconst intersectTrimesh_treeTransform = new Transform();\nconst v0 = new Vec3();\nconst intersect = new Vec3();\n\nfunction distanceFromIntersection(from, direction, position) {\n  // v0 is vector from from to position\n  position.vsub(from, v0);\n  const dot = v0.dot(direction); // intersect = direction*dot + from\n\n  direction.scale(dot, intersect);\n  intersect.vadd(from, intersect);\n  const distance = position.distanceTo(intersect);\n  return distance;\n}\n\n/**\n * Sweep and prune broadphase along one axis.\n */\nclass SAPBroadphase extends Broadphase {\n  /**\n   * List of bodies currently in the broadphase.\n   */\n\n  /**\n   * The world to search in.\n   */\n\n  /**\n   * Axis to sort the bodies along.\n   * Set to 0 for x axis, and 1 for y axis.\n   * For best performance, pick the axis where bodies are most distributed.\n   */\n\n  /**\n   * Check if the bounds of two bodies overlap, along the given SAP axis.\n   */\n  static checkBounds(bi, bj, axisIndex) {\n    let biPos;\n    let bjPos;\n\n    if (axisIndex === 0) {\n      biPos = bi.position.x;\n      bjPos = bj.position.x;\n    } else if (axisIndex === 1) {\n      biPos = bi.position.y;\n      bjPos = bj.position.y;\n    } else if (axisIndex === 2) {\n      biPos = bi.position.z;\n      bjPos = bj.position.z;\n    }\n\n    const ri = bi.boundingRadius,\n          rj = bj.boundingRadius,\n          boundA2 = biPos + ri,\n          boundB1 = bjPos - rj;\n    return boundB1 < boundA2;\n  } // Note: these are identical, save for x/y/z lowerbound\n\n  /**\n   * insertionSortX\n   */\n\n\n  static insertionSortX(a) {\n    for (let i = 1, l = a.length; i < l; i++) {\n      const v = a[i];\n      let j;\n\n      for (j = i - 1; j >= 0; j--) {\n        if (a[j].aabb.lowerBound.x <= v.aabb.lowerBound.x) {\n          break;\n        }\n\n        a[j + 1] = a[j];\n      }\n\n      a[j + 1] = v;\n    }\n\n    return a;\n  }\n  /**\n   * insertionSortY\n   */\n\n\n  static insertionSortY(a) {\n    for (let i = 1, l = a.length; i < l; i++) {\n      const v = a[i];\n      let j;\n\n      for (j = i - 1; j >= 0; j--) {\n        if (a[j].aabb.lowerBound.y <= v.aabb.lowerBound.y) {\n          break;\n        }\n\n        a[j + 1] = a[j];\n      }\n\n      a[j + 1] = v;\n    }\n\n    return a;\n  }\n  /**\n   * insertionSortZ\n   */\n\n\n  static insertionSortZ(a) {\n    for (let i = 1, l = a.length; i < l; i++) {\n      const v = a[i];\n      let j;\n\n      for (j = i - 1; j >= 0; j--) {\n        if (a[j].aabb.lowerBound.z <= v.aabb.lowerBound.z) {\n          break;\n        }\n\n        a[j + 1] = a[j];\n      }\n\n      a[j + 1] = v;\n    }\n\n    return a;\n  }\n\n  constructor(world) {\n    super();\n    this.axisList = [];\n    this.world = null;\n    this.axisIndex = 0;\n    const axisList = this.axisList;\n\n    this._addBodyHandler = event => {\n      axisList.push(event.body);\n    };\n\n    this._removeBodyHandler = event => {\n      const idx = axisList.indexOf(event.body);\n\n      if (idx !== -1) {\n        axisList.splice(idx, 1);\n      }\n    };\n\n    if (world) {\n      this.setWorld(world);\n    }\n  }\n  /**\n   * Change the world\n   */\n\n\n  setWorld(world) {\n    // Clear the old axis array\n    this.axisList.length = 0; // Add all bodies from the new world\n\n    for (let i = 0; i < world.bodies.length; i++) {\n      this.axisList.push(world.bodies[i]);\n    } // Remove old handlers, if any\n\n\n    world.removeEventListener('addBody', this._addBodyHandler);\n    world.removeEventListener('removeBody', this._removeBodyHandler); // Add handlers to update the list of bodies.\n\n    world.addEventListener('addBody', this._addBodyHandler);\n    world.addEventListener('removeBody', this._removeBodyHandler);\n    this.world = world;\n    this.dirty = true;\n  }\n  /**\n   * Collect all collision pairs\n   */\n\n\n  collisionPairs(world, p1, p2) {\n    const bodies = this.axisList;\n    const N = bodies.length;\n    const axisIndex = this.axisIndex;\n    let i;\n    let j;\n\n    if (this.dirty) {\n      this.sortList();\n      this.dirty = false;\n    } // Look through the list\n\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      for (j = i + 1; j < N; j++) {\n        const bj = bodies[j];\n\n        if (!this.needBroadphaseCollision(bi, bj)) {\n          continue;\n        }\n\n        if (!SAPBroadphase.checkBounds(bi, bj, axisIndex)) {\n          break;\n        }\n\n        this.intersectionTest(bi, bj, p1, p2);\n      }\n    }\n  }\n\n  sortList() {\n    const axisList = this.axisList;\n    const axisIndex = this.axisIndex;\n    const N = axisList.length; // Update AABBs\n\n    for (let i = 0; i !== N; i++) {\n      const bi = axisList[i];\n\n      if (bi.aabbNeedsUpdate) {\n        bi.updateAABB();\n      }\n    } // Sort the list\n\n\n    if (axisIndex === 0) {\n      SAPBroadphase.insertionSortX(axisList);\n    } else if (axisIndex === 1) {\n      SAPBroadphase.insertionSortY(axisList);\n    } else if (axisIndex === 2) {\n      SAPBroadphase.insertionSortZ(axisList);\n    }\n  }\n  /**\n   * Computes the variance of the body positions and estimates the best axis to use.\n   * Will automatically set property `axisIndex`.\n   */\n\n\n  autoDetectAxis() {\n    let sumX = 0;\n    let sumX2 = 0;\n    let sumY = 0;\n    let sumY2 = 0;\n    let sumZ = 0;\n    let sumZ2 = 0;\n    const bodies = this.axisList;\n    const N = bodies.length;\n    const invN = 1 / N;\n\n    for (let i = 0; i !== N; i++) {\n      const b = bodies[i];\n      const centerX = b.position.x;\n      sumX += centerX;\n      sumX2 += centerX * centerX;\n      const centerY = b.position.y;\n      sumY += centerY;\n      sumY2 += centerY * centerY;\n      const centerZ = b.position.z;\n      sumZ += centerZ;\n      sumZ2 += centerZ * centerZ;\n    }\n\n    const varianceX = sumX2 - sumX * sumX * invN;\n    const varianceY = sumY2 - sumY * sumY * invN;\n    const varianceZ = sumZ2 - sumZ * sumZ * invN;\n\n    if (varianceX > varianceY) {\n      if (varianceX > varianceZ) {\n        this.axisIndex = 0;\n      } else {\n        this.axisIndex = 2;\n      }\n    } else if (varianceY > varianceZ) {\n      this.axisIndex = 1;\n    } else {\n      this.axisIndex = 2;\n    }\n  }\n  /**\n   * Returns all the bodies within an AABB.\n   * @param result An array to store resulting bodies in.\n   */\n\n\n  aabbQuery(world, aabb, result) {\n    if (result === void 0) {\n      result = [];\n    }\n\n    if (this.dirty) {\n      this.sortList();\n      this.dirty = false;\n    }\n\n    const axisIndex = this.axisIndex;\n    let axis = 'x';\n\n    if (axisIndex === 1) {\n      axis = 'y';\n    }\n\n    if (axisIndex === 2) {\n      axis = 'z';\n    }\n\n    const axisList = this.axisList;\n    aabb.lowerBound[axis];\n    aabb.upperBound[axis];\n\n    for (let i = 0; i < axisList.length; i++) {\n      const b = axisList[i];\n\n      if (b.aabbNeedsUpdate) {\n        b.updateAABB();\n      }\n\n      if (b.aabb.overlaps(aabb)) {\n        result.push(b);\n      }\n    }\n\n    return result;\n  }\n\n}\n\nclass Utils {\n  /**\n   * Extend an options object with default values.\n   * @param options The options object. May be falsy: in this case, a new object is created and returned.\n   * @param defaults An object containing default values.\n   * @return The modified options object.\n   */\n  static defaults(options, defaults) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    for (let key in defaults) {\n      if (!(key in options)) {\n        options[key] = defaults[key];\n      }\n    }\n\n    return options;\n  }\n\n}\n\n/**\n * Constraint base class\n */\nclass Constraint {\n  /**\n   * Equations to be solved in this constraint.\n   */\n\n  /**\n   * Body A.\n   */\n\n  /**\n   * Body B.\n   */\n\n  /**\n   * Set to false if you don't want the bodies to collide when they are connected.\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options = Utils.defaults(options, {\n      collideConnected: true,\n      wakeUpBodies: true\n    });\n    this.equations = [];\n    this.bodyA = bodyA;\n    this.bodyB = bodyB;\n    this.id = Constraint.idCounter++;\n    this.collideConnected = options.collideConnected;\n\n    if (options.wakeUpBodies) {\n      if (bodyA) {\n        bodyA.wakeUp();\n      }\n\n      if (bodyB) {\n        bodyB.wakeUp();\n      }\n    }\n  }\n  /**\n   * Update all the equations with data.\n   */\n\n\n  update() {\n    throw new Error('method update() not implmemented in this Constraint subclass!');\n  }\n  /**\n   * Enables all equations in the constraint.\n   */\n\n\n  enable() {\n    const eqs = this.equations;\n\n    for (let i = 0; i < eqs.length; i++) {\n      eqs[i].enabled = true;\n    }\n  }\n  /**\n   * Disables all equations in the constraint.\n   */\n\n\n  disable() {\n    const eqs = this.equations;\n\n    for (let i = 0; i < eqs.length; i++) {\n      eqs[i].enabled = false;\n    }\n  }\n\n}\nConstraint.idCounter = 0;\n\n/**\n * An element containing 6 entries, 3 spatial and 3 rotational degrees of freedom.\n */\n\nclass JacobianElement {\n  /**\n   * spatial\n   */\n\n  /**\n   * rotational\n   */\n  constructor() {\n    this.spatial = new Vec3();\n    this.rotational = new Vec3();\n  }\n  /**\n   * Multiply with other JacobianElement\n   */\n\n\n  multiplyElement(element) {\n    return element.spatial.dot(this.spatial) + element.rotational.dot(this.rotational);\n  }\n  /**\n   * Multiply with two vectors\n   */\n\n\n  multiplyVectors(spatial, rotational) {\n    return spatial.dot(this.spatial) + rotational.dot(this.rotational);\n  }\n\n}\n\n/**\n * Equation base class.\n *\n * `a`, `b` and `eps` are {@link https://www8.cs.umu.se/kurser/5DV058/VT15/lectures/SPOOKlabnotes.pdf SPOOK} parameters that default to `0.0`. See {@link https://github.com/schteppe/cannon.js/issues/238#issuecomment-147172327 this exchange} for more details on Cannon's physics implementation.\n */\nclass Equation {\n  /**\n   * Minimum (read: negative max) force to be applied by the constraint.\n   */\n\n  /**\n   * Maximum (read: positive max) force to be applied by the constraint.\n   */\n\n  /**\n   * SPOOK parameter\n   */\n\n  /**\n   * SPOOK parameter\n   */\n\n  /**\n   * SPOOK parameter\n   */\n\n  /**\n   * A number, proportional to the force added to the bodies.\n   */\n  constructor(bi, bj, minForce, maxForce) {\n    if (minForce === void 0) {\n      minForce = -1e6;\n    }\n\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    this.id = Equation.idCounter++;\n    this.minForce = minForce;\n    this.maxForce = maxForce;\n    this.bi = bi;\n    this.bj = bj;\n    this.a = 0.0; // SPOOK parameter\n\n    this.b = 0.0; // SPOOK parameter\n\n    this.eps = 0.0; // SPOOK parameter\n\n    this.jacobianElementA = new JacobianElement();\n    this.jacobianElementB = new JacobianElement();\n    this.enabled = true;\n    this.multiplier = 0;\n    this.setSpookParams(1e7, 4, 1 / 60); // Set typical spook params\n  }\n  /**\n   * Recalculates a, b, and eps.\n   *\n   * The Equation constructor sets typical SPOOK parameters as such:\n   * * `stiffness` = 1e7\n   * * `relaxation` = 4\n   * * `timeStep`= 1 / 60, _note the hardcoded refresh rate._\n   */\n\n\n  setSpookParams(stiffness, relaxation, timeStep) {\n    const d = relaxation;\n    const k = stiffness;\n    const h = timeStep;\n    this.a = 4.0 / (h * (1 + 4 * d));\n    this.b = 4.0 * d / (1 + 4 * d);\n    this.eps = 4.0 / (h * h * k * (1 + 4 * d));\n  }\n  /**\n   * Computes the right hand side of the SPOOK equation\n   */\n\n\n  computeB(a, b, h) {\n    const GW = this.computeGW();\n    const Gq = this.computeGq();\n    const GiMf = this.computeGiMf();\n    return -Gq * a - GW * b - GiMf * h;\n  }\n  /**\n   * Computes G*q, where q are the generalized body coordinates\n   */\n\n\n  computeGq() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const xi = bi.position;\n    const xj = bj.position;\n    return GA.spatial.dot(xi) + GB.spatial.dot(xj);\n  }\n  /**\n   * Computes G*W, where W are the body velocities\n   */\n\n\n  computeGW() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const vi = bi.velocity;\n    const vj = bj.velocity;\n    const wi = bi.angularVelocity;\n    const wj = bj.angularVelocity;\n    return GA.multiplyVectors(vi, wi) + GB.multiplyVectors(vj, wj);\n  }\n  /**\n   * Computes G*Wlambda, where W are the body velocities\n   */\n\n\n  computeGWlambda() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const vi = bi.vlambda;\n    const vj = bj.vlambda;\n    const wi = bi.wlambda;\n    const wj = bj.wlambda;\n    return GA.multiplyVectors(vi, wi) + GB.multiplyVectors(vj, wj);\n  }\n  /**\n   * Computes G*inv(M)*f, where M is the mass matrix with diagonal blocks for each body, and f are the forces on the bodies.\n   */\n\n\n  computeGiMf() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const fi = bi.force;\n    const ti = bi.torque;\n    const fj = bj.force;\n    const tj = bj.torque;\n    const invMassi = bi.invMassSolve;\n    const invMassj = bj.invMassSolve;\n    fi.scale(invMassi, iMfi);\n    fj.scale(invMassj, iMfj);\n    bi.invInertiaWorldSolve.vmult(ti, invIi_vmult_taui);\n    bj.invInertiaWorldSolve.vmult(tj, invIj_vmult_tauj);\n    return GA.multiplyVectors(iMfi, invIi_vmult_taui) + GB.multiplyVectors(iMfj, invIj_vmult_tauj);\n  }\n  /**\n   * Computes G*inv(M)*G'\n   */\n\n\n  computeGiMGt() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const invMassi = bi.invMassSolve;\n    const invMassj = bj.invMassSolve;\n    const invIi = bi.invInertiaWorldSolve;\n    const invIj = bj.invInertiaWorldSolve;\n    let result = invMassi + invMassj;\n    invIi.vmult(GA.rotational, tmp);\n    result += tmp.dot(GA.rotational);\n    invIj.vmult(GB.rotational, tmp);\n    result += tmp.dot(GB.rotational);\n    return result;\n  }\n  /**\n   * Add constraint velocity to the bodies.\n   */\n\n\n  addToWlambda(deltalambda) {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const temp = addToWlambda_temp; // Add to linear velocity\n    // v_lambda += inv(M) * delta_lamba * G\n\n    bi.vlambda.addScaledVector(bi.invMassSolve * deltalambda, GA.spatial, bi.vlambda);\n    bj.vlambda.addScaledVector(bj.invMassSolve * deltalambda, GB.spatial, bj.vlambda); // Add to angular velocity\n\n    bi.invInertiaWorldSolve.vmult(GA.rotational, temp);\n    bi.wlambda.addScaledVector(deltalambda, temp, bi.wlambda);\n    bj.invInertiaWorldSolve.vmult(GB.rotational, temp);\n    bj.wlambda.addScaledVector(deltalambda, temp, bj.wlambda);\n  }\n  /**\n   * Compute the denominator part of the SPOOK equation: C = G*inv(M)*G' + eps\n   */\n\n\n  computeC() {\n    return this.computeGiMGt() + this.eps;\n  }\n\n}\nEquation.idCounter = 0;\nconst iMfi = new Vec3();\nconst iMfj = new Vec3();\nconst invIi_vmult_taui = new Vec3();\nconst invIj_vmult_tauj = new Vec3();\nconst tmp = new Vec3();\nconst addToWlambda_temp = new Vec3();\n\n/**\n * Contact/non-penetration constraint equation\n */\nclass ContactEquation extends Equation {\n  /**\n   * \"bounciness\": u1 = -e*u0\n   */\n\n  /**\n   * World-oriented vector that goes from the center of bi to the contact point.\n   */\n\n  /**\n   * World-oriented vector that starts in body j position and goes to the contact point.\n   */\n\n  /**\n   * Contact normal, pointing out of body i.\n   */\n  constructor(bodyA, bodyB, maxForce) {\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB, 0, maxForce);\n    this.restitution = 0.0;\n    this.ri = new Vec3();\n    this.rj = new Vec3();\n    this.ni = new Vec3();\n  }\n\n  computeB(h) {\n    const a = this.a;\n    const b = this.b;\n    const bi = this.bi;\n    const bj = this.bj;\n    const ri = this.ri;\n    const rj = this.rj;\n    const rixn = ContactEquation_computeB_temp1;\n    const rjxn = ContactEquation_computeB_temp2;\n    const vi = bi.velocity;\n    const wi = bi.angularVelocity;\n    bi.force;\n    bi.torque;\n    const vj = bj.velocity;\n    const wj = bj.angularVelocity;\n    bj.force;\n    bj.torque;\n    const penetrationVec = ContactEquation_computeB_temp3;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const n = this.ni; // Caluclate cross products\n\n    ri.cross(n, rixn);\n    rj.cross(n, rjxn); // g = xj+rj -(xi+ri)\n    // G = [ -ni  -rixn  ni  rjxn ]\n\n    n.negate(GA.spatial);\n    rixn.negate(GA.rotational);\n    GB.spatial.copy(n);\n    GB.rotational.copy(rjxn); // Calculate the penetration vector\n\n    penetrationVec.copy(bj.position);\n    penetrationVec.vadd(rj, penetrationVec);\n    penetrationVec.vsub(bi.position, penetrationVec);\n    penetrationVec.vsub(ri, penetrationVec);\n    const g = n.dot(penetrationVec); // Compute iteration\n\n    const ePlusOne = this.restitution + 1;\n    const GW = ePlusOne * vj.dot(n) - ePlusOne * vi.dot(n) + wj.dot(rjxn) - wi.dot(rixn);\n    const GiMf = this.computeGiMf();\n    const B = -g * a - GW * b - h * GiMf;\n    return B;\n  }\n  /**\n   * Get the current relative velocity in the contact point.\n   */\n\n\n  getImpactVelocityAlongNormal() {\n    const vi = ContactEquation_getImpactVelocityAlongNormal_vi;\n    const vj = ContactEquation_getImpactVelocityAlongNormal_vj;\n    const xi = ContactEquation_getImpactVelocityAlongNormal_xi;\n    const xj = ContactEquation_getImpactVelocityAlongNormal_xj;\n    const relVel = ContactEquation_getImpactVelocityAlongNormal_relVel;\n    this.bi.position.vadd(this.ri, xi);\n    this.bj.position.vadd(this.rj, xj);\n    this.bi.getVelocityAtWorldPoint(xi, vi);\n    this.bj.getVelocityAtWorldPoint(xj, vj);\n    vi.vsub(vj, relVel);\n    return this.ni.dot(relVel);\n  }\n\n}\nconst ContactEquation_computeB_temp1 = new Vec3(); // Temp vectors\n\nconst ContactEquation_computeB_temp2 = new Vec3();\nconst ContactEquation_computeB_temp3 = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_vi = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_vj = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_xi = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_xj = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_relVel = new Vec3();\n\n/**\n * Connects two bodies at given offset points.\n * @example\n *     const bodyA = new Body({ mass: 1 })\n *     const bodyB = new Body({ mass: 1 })\n *     bodyA.position.set(-1, 0, 0)\n *     bodyB.position.set(1, 0, 0)\n *     bodyA.addShape(shapeA)\n *     bodyB.addShape(shapeB)\n *     world.addBody(bodyA)\n *     world.addBody(bodyB)\n *     const localPivotA = new Vec3(1, 0, 0)\n *     const localPivotB = new Vec3(-1, 0, 0)\n *     const constraint = new PointToPointConstraint(bodyA, localPivotA, bodyB, localPivotB)\n *     world.addConstraint(constraint)\n */\nclass PointToPointConstraint extends Constraint {\n  /**\n   * Pivot, defined locally in bodyA.\n   */\n\n  /**\n   * Pivot, defined locally in bodyB.\n   */\n\n  /**\n   * @param pivotA The point relative to the center of mass of bodyA which bodyA is constrained to.\n   * @param bodyB Body that will be constrained in a similar way to the same point as bodyA. We will therefore get a link between bodyA and bodyB. If not specified, bodyA will be constrained to a static point.\n   * @param pivotB The point relative to the center of mass of bodyB which bodyB is constrained to.\n   * @param maxForce The maximum force that should be applied to constrain the bodies.\n   */\n  constructor(bodyA, pivotA, bodyB, pivotB, maxForce) {\n    if (pivotA === void 0) {\n      pivotA = new Vec3();\n    }\n\n    if (pivotB === void 0) {\n      pivotB = new Vec3();\n    }\n\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB);\n    this.pivotA = pivotA.clone();\n    this.pivotB = pivotB.clone();\n    const x = this.equationX = new ContactEquation(bodyA, bodyB);\n    const y = this.equationY = new ContactEquation(bodyA, bodyB);\n    const z = this.equationZ = new ContactEquation(bodyA, bodyB); // Equations to be fed to the solver\n\n    this.equations.push(x, y, z); // Make the equations bidirectional\n\n    x.minForce = y.minForce = z.minForce = -maxForce;\n    x.maxForce = y.maxForce = z.maxForce = maxForce;\n    x.ni.set(1, 0, 0);\n    y.ni.set(0, 1, 0);\n    z.ni.set(0, 0, 1);\n  }\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const x = this.equationX;\n    const y = this.equationY;\n    const z = this.equationZ; // Rotate the pivots to world space\n\n    bodyA.quaternion.vmult(this.pivotA, x.ri);\n    bodyB.quaternion.vmult(this.pivotB, x.rj);\n    y.ri.copy(x.ri);\n    y.rj.copy(x.rj);\n    z.ri.copy(x.ri);\n    z.rj.copy(x.rj);\n  }\n\n}\n\n/**\n * Cone equation. Works to keep the given body world vectors aligned, or tilted within a given angle from each other.\n */\nclass ConeEquation extends Equation {\n  /**\n   * Local axis in A\n   */\n\n  /**\n   * Local axis in B\n   */\n\n  /**\n   * The \"cone angle\" to keep\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n    super(bodyA, bodyB, -maxForce, maxForce);\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n    this.angle = typeof options.angle !== 'undefined' ? options.angle : 0;\n  }\n\n  computeB(h) {\n    const a = this.a;\n    const b = this.b;\n    const ni = this.axisA;\n    const nj = this.axisB;\n    const nixnj = tmpVec1$2;\n    const njxni = tmpVec2$2;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB; // Caluclate cross products\n\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni); // The angle between two vector is:\n    // cos(theta) = a * b / (length(a) * length(b) = { len(a) = len(b) = 1 } = a * b\n    // g = a * b\n    // gdot = (b x a) * wi + (a x b) * wj\n    // G = [0 bxa 0 axb]\n    // W = [vi wi vj wj]\n\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n    const g = Math.cos(this.angle) - ni.dot(nj);\n    const GW = this.computeGW();\n    const GiMf = this.computeGiMf();\n    const B = -g * a - GW * b - h * GiMf;\n    return B;\n  }\n\n}\nconst tmpVec1$2 = new Vec3();\nconst tmpVec2$2 = new Vec3();\n\n/**\n * Rotational constraint. Works to keep the local vectors orthogonal to each other in world space.\n */\nclass RotationalEquation extends Equation {\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * maxAngle\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n    super(bodyA, bodyB, -maxForce, maxForce);\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n    this.maxAngle = Math.PI / 2;\n  }\n\n  computeB(h) {\n    const a = this.a;\n    const b = this.b;\n    const ni = this.axisA;\n    const nj = this.axisB;\n    const nixnj = tmpVec1$1;\n    const njxni = tmpVec2$1;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB; // Caluclate cross products\n\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni); // g = ni * nj\n    // gdot = (nj x ni) * wi + (ni x nj) * wj\n    // G = [0 njxni 0 nixnj]\n    // W = [vi wi vj wj]\n\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n    const g = Math.cos(this.maxAngle) - ni.dot(nj);\n    const GW = this.computeGW();\n    const GiMf = this.computeGiMf();\n    const B = -g * a - GW * b - h * GiMf;\n    return B;\n  }\n\n}\nconst tmpVec1$1 = new Vec3();\nconst tmpVec2$1 = new Vec3();\n\n/**\n * A Cone Twist constraint, useful for ragdolls.\n */\nclass ConeTwistConstraint extends PointToPointConstraint {\n  /**\n   * The axis direction for the constraint of the body A.\n   */\n\n  /**\n   * The axis direction for the constraint of the body B.\n   */\n\n  /**\n   * The aperture angle of the cone.\n   */\n\n  /**\n   * The twist angle of the joint.\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6; // Set pivot point in between\n\n    const pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    const pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n    super(bodyA, pivotA, bodyB, pivotB, maxForce);\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3();\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3();\n    this.collideConnected = !!options.collideConnected;\n    this.angle = typeof options.angle !== 'undefined' ? options.angle : 0;\n    const c = this.coneEquation = new ConeEquation(bodyA, bodyB, options);\n    const t = this.twistEquation = new RotationalEquation(bodyA, bodyB, options);\n    this.twistAngle = typeof options.twistAngle !== 'undefined' ? options.twistAngle : 0; // Make the cone equation push the bodies toward the cone axis, not outward\n\n    c.maxForce = 0;\n    c.minForce = -maxForce; // Make the twist equation add torque toward the initial position\n\n    t.maxForce = 0;\n    t.minForce = -maxForce;\n    this.equations.push(c, t);\n  }\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const cone = this.coneEquation;\n    const twist = this.twistEquation;\n    super.update(); // Update the axes to the cone constraint\n\n    bodyA.vectorToWorldFrame(this.axisA, cone.axisA);\n    bodyB.vectorToWorldFrame(this.axisB, cone.axisB); // Update the world axes in the twist constraint\n\n    this.axisA.tangents(twist.axisA, twist.axisA);\n    bodyA.vectorToWorldFrame(twist.axisA, twist.axisA);\n    this.axisB.tangents(twist.axisB, twist.axisB);\n    bodyB.vectorToWorldFrame(twist.axisB, twist.axisB);\n    cone.angle = this.angle;\n    twist.maxAngle = this.twistAngle;\n  }\n\n}\nnew Vec3();\nnew Vec3();\n\n/**\n * Constrains two bodies to be at a constant distance from each others center of mass.\n */\nclass DistanceConstraint extends Constraint {\n  /**\n   * The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\n   */\n\n  /**\n   * @param distance The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB.\n   * @param maxForce The maximum force that should be applied to constrain the bodies.\n   */\n  constructor(bodyA, bodyB, distance, maxForce) {\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB);\n\n    if (typeof distance === 'undefined') {\n      distance = bodyA.position.distanceTo(bodyB.position);\n    }\n\n    this.distance = distance;\n    const eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\n    this.equations.push(eq); // Make it bidirectional\n\n    eq.minForce = -maxForce;\n    eq.maxForce = maxForce;\n  }\n  /**\n   * update\n   */\n\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const eq = this.distanceEquation;\n    const halfDist = this.distance * 0.5;\n    const normal = eq.ni;\n    bodyB.position.vsub(bodyA.position, normal);\n    normal.normalize();\n    normal.scale(halfDist, eq.ri);\n    normal.scale(-halfDist, eq.rj);\n  }\n\n}\n\n/**\n * Lock constraint. Will remove all degrees of freedom between the bodies.\n */\nclass LockConstraint extends PointToPointConstraint {\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6; // Set pivot point in between\n\n    const pivotA = new Vec3();\n    const pivotB = new Vec3();\n    const halfWay = new Vec3();\n    bodyA.position.vadd(bodyB.position, halfWay);\n    halfWay.scale(0.5, halfWay);\n    bodyB.pointToLocalFrame(halfWay, pivotB);\n    bodyA.pointToLocalFrame(halfWay, pivotA); // The point-to-point constraint will keep a point shared between the bodies\n\n    super(bodyA, pivotA, bodyB, pivotB, maxForce); // Store initial rotation of the bodies as unit vectors in the local body spaces\n\n    this.xA = bodyA.vectorToLocalFrame(Vec3.UNIT_X);\n    this.xB = bodyB.vectorToLocalFrame(Vec3.UNIT_X);\n    this.yA = bodyA.vectorToLocalFrame(Vec3.UNIT_Y);\n    this.yB = bodyB.vectorToLocalFrame(Vec3.UNIT_Y);\n    this.zA = bodyA.vectorToLocalFrame(Vec3.UNIT_Z);\n    this.zB = bodyB.vectorToLocalFrame(Vec3.UNIT_Z); // ...and the following rotational equations will keep all rotational DOF's in place\n\n    const r1 = this.rotationalEquation1 = new RotationalEquation(bodyA, bodyB, options);\n    const r2 = this.rotationalEquation2 = new RotationalEquation(bodyA, bodyB, options);\n    const r3 = this.rotationalEquation3 = new RotationalEquation(bodyA, bodyB, options);\n    this.equations.push(r1, r2, r3);\n  }\n  /**\n   * update\n   */\n\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    this.motorEquation;\n    const r1 = this.rotationalEquation1;\n    const r2 = this.rotationalEquation2;\n    const r3 = this.rotationalEquation3;\n    LockConstraint_update_tmpVec1;\n    LockConstraint_update_tmpVec2;\n    super.update(); // These vector pairs must be orthogonal\n\n    bodyA.vectorToWorldFrame(this.xA, r1.axisA);\n    bodyB.vectorToWorldFrame(this.yB, r1.axisB);\n    bodyA.vectorToWorldFrame(this.yA, r2.axisA);\n    bodyB.vectorToWorldFrame(this.zB, r2.axisB);\n    bodyA.vectorToWorldFrame(this.zA, r3.axisA);\n    bodyB.vectorToWorldFrame(this.xB, r3.axisB);\n  }\n\n}\nconst LockConstraint_update_tmpVec1 = new Vec3();\nconst LockConstraint_update_tmpVec2 = new Vec3();\n\n/**\n * Rotational motor constraint. Tries to keep the relative angular velocity of the bodies to a given value.\n */\nclass RotationalMotorEquation extends Equation {\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * Motor velocity.\n   */\n  constructor(bodyA, bodyB, maxForce) {\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB, -maxForce, maxForce);\n    this.axisA = new Vec3();\n    this.axisB = new Vec3();\n    this.targetVelocity = 0;\n  }\n\n  computeB(h) {\n    this.a;\n    const b = this.b;\n    this.bi;\n    this.bj;\n    const axisA = this.axisA;\n    const axisB = this.axisB;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB; // g = 0\n    // gdot = axisA * wi - axisB * wj\n    // gdot = G * W = G * [vi wi vj wj]\n    // =>\n    // G = [0 axisA 0 -axisB]\n\n    GA.rotational.copy(axisA);\n    axisB.negate(GB.rotational);\n    const GW = this.computeGW() - this.targetVelocity;\n    const GiMf = this.computeGiMf();\n    const B = -GW * b - h * GiMf;\n    return B;\n  }\n\n}\n\n/**\n * Hinge constraint. Think of it as a door hinge. It tries to keep the door in the correct place and with the correct orientation.\n */\nclass HingeConstraint extends PointToPointConstraint {\n  /**\n   * Rotation axis, defined locally in bodyA.\n   */\n\n  /**\n   * Rotation axis, defined locally in bodyB.\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n    const pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    const pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n    super(bodyA, pivotA, bodyB, pivotB, maxForce);\n    const axisA = this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    axisA.normalize();\n    const axisB = this.axisB = options.axisB ? options.axisB.clone() : new Vec3(1, 0, 0);\n    axisB.normalize();\n    this.collideConnected = !!options.collideConnected;\n    const rotational1 = this.rotationalEquation1 = new RotationalEquation(bodyA, bodyB, options);\n    const rotational2 = this.rotationalEquation2 = new RotationalEquation(bodyA, bodyB, options);\n    const motor = this.motorEquation = new RotationalMotorEquation(bodyA, bodyB, maxForce);\n    motor.enabled = false; // Not enabled by default\n    // Equations to be fed to the solver\n\n    this.equations.push(rotational1, rotational2, motor);\n  }\n  /**\n   * enableMotor\n   */\n\n\n  enableMotor() {\n    this.motorEquation.enabled = true;\n  }\n  /**\n   * disableMotor\n   */\n\n\n  disableMotor() {\n    this.motorEquation.enabled = false;\n  }\n  /**\n   * setMotorSpeed\n   */\n\n\n  setMotorSpeed(speed) {\n    this.motorEquation.targetVelocity = speed;\n  }\n  /**\n   * setMotorMaxForce\n   */\n\n\n  setMotorMaxForce(maxForce) {\n    this.motorEquation.maxForce = maxForce;\n    this.motorEquation.minForce = -maxForce;\n  }\n  /**\n   * update\n   */\n\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const motor = this.motorEquation;\n    const r1 = this.rotationalEquation1;\n    const r2 = this.rotationalEquation2;\n    const worldAxisA = HingeConstraint_update_tmpVec1;\n    const worldAxisB = HingeConstraint_update_tmpVec2;\n    const axisA = this.axisA;\n    const axisB = this.axisB;\n    super.update(); // Get world axes\n\n    bodyA.quaternion.vmult(axisA, worldAxisA);\n    bodyB.quaternion.vmult(axisB, worldAxisB);\n    worldAxisA.tangents(r1.axisA, r2.axisA);\n    r1.axisB.copy(worldAxisB);\n    r2.axisB.copy(worldAxisB);\n\n    if (this.motorEquation.enabled) {\n      bodyA.quaternion.vmult(this.axisA, motor.axisA);\n      bodyB.quaternion.vmult(this.axisB, motor.axisB);\n    }\n  }\n\n}\nconst HingeConstraint_update_tmpVec1 = new Vec3();\nconst HingeConstraint_update_tmpVec2 = new Vec3();\n\n/**\n * Constrains the slipping in a contact along a tangent\n */\nclass FrictionEquation extends Equation {\n  // Tangent\n\n  /**\n   * @param slipForce should be +-F_friction = +-mu * F_normal = +-mu * m * g\n   */\n  constructor(bodyA, bodyB, slipForce) {\n    super(bodyA, bodyB, -slipForce, slipForce);\n    this.ri = new Vec3();\n    this.rj = new Vec3();\n    this.t = new Vec3();\n  }\n\n  computeB(h) {\n    this.a;\n    const b = this.b;\n    this.bi;\n    this.bj;\n    const ri = this.ri;\n    const rj = this.rj;\n    const rixt = FrictionEquation_computeB_temp1;\n    const rjxt = FrictionEquation_computeB_temp2;\n    const t = this.t; // Caluclate cross products\n\n    ri.cross(t, rixt);\n    rj.cross(t, rjxt); // G = [-t -rixt t rjxt]\n    // And remember, this is a pure velocity constraint, g is always zero!\n\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    t.negate(GA.spatial);\n    rixt.negate(GA.rotational);\n    GB.spatial.copy(t);\n    GB.rotational.copy(rjxt);\n    const GW = this.computeGW();\n    const GiMf = this.computeGiMf();\n    const B = -GW * b - h * GiMf;\n    return B;\n  }\n\n}\nconst FrictionEquation_computeB_temp1 = new Vec3();\nconst FrictionEquation_computeB_temp2 = new Vec3();\n\n/**\n * Defines what happens when two materials meet.\n * @todo Refactor materials to materialA and materialB\n */\nclass ContactMaterial {\n  /**\n   * Identifier of this material.\n   */\n\n  /**\n   * Participating materials.\n   */\n\n  /**\n   * Friction coefficient.\n   * @default 0.3\n   */\n\n  /**\n   * Restitution coefficient.\n   * @default 0.3\n   */\n\n  /**\n   * Stiffness of the produced contact equations.\n   * @default 1e7\n   */\n\n  /**\n   * Relaxation time of the produced contact equations.\n   * @default 3\n   */\n\n  /**\n   * Stiffness of the produced friction equations.\n   * @default 1e7\n   */\n\n  /**\n   * Relaxation time of the produced friction equations\n   * @default 3\n   */\n  constructor(m1, m2, options) {\n    options = Utils.defaults(options, {\n      friction: 0.3,\n      restitution: 0.3,\n      contactEquationStiffness: 1e7,\n      contactEquationRelaxation: 3,\n      frictionEquationStiffness: 1e7,\n      frictionEquationRelaxation: 3\n    });\n    this.id = ContactMaterial.idCounter++;\n    this.materials = [m1, m2];\n    this.friction = options.friction;\n    this.restitution = options.restitution;\n    this.contactEquationStiffness = options.contactEquationStiffness;\n    this.contactEquationRelaxation = options.contactEquationRelaxation;\n    this.frictionEquationStiffness = options.frictionEquationStiffness;\n    this.frictionEquationRelaxation = options.frictionEquationRelaxation;\n  }\n\n}\nContactMaterial.idCounter = 0;\n\n/**\n * Defines a physics material.\n */\nclass Material {\n  /**\n   * Material name.\n   * If options is a string, name will be set to that string.\n   * @todo Deprecate this\n   */\n\n  /** Material id. */\n\n  /**\n   * Friction for this material.\n   * If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from `defaultContactMaterial` in the World will be used.\n   */\n\n  /**\n   * Restitution for this material.\n   * If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from `defaultContactMaterial` in the World will be used.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    let name = ''; // Backwards compatibility fix\n\n    if (typeof options === 'string') {\n      //console.warn(`Passing a string to MaterialOptions is deprecated, and has no effect`)\n      name = options;\n      options = {};\n    }\n\n    this.name = name;\n    this.id = Material.idCounter++;\n    this.friction = typeof options.friction !== 'undefined' ? options.friction : -1;\n    this.restitution = typeof options.restitution !== 'undefined' ? options.restitution : -1;\n  }\n\n}\nMaterial.idCounter = 0;\n\n/**\n * A spring, connecting two bodies.\n * @example\n *     const spring = new Spring(boxBody, sphereBody, {\n *       restLength: 0,\n *       stiffness: 50,\n *       damping: 1,\n *     })\n *\n *     // Compute the force after each step\n *     world.addEventListener('postStep', (event) => {\n *       spring.applyForce()\n *     })\n */\nclass Spring {\n  /**\n   * Rest length of the spring. A number > 0.\n   * @default 1\n   */\n\n  /**\n   * Stiffness of the spring. A number >= 0.\n   * @default 100\n   */\n\n  /**\n   * Damping of the spring. A number >= 0.\n   * @default 1\n   */\n\n  /**\n   * First connected body.\n   */\n\n  /**\n   * Second connected body.\n   */\n\n  /**\n   * Anchor for bodyA in local bodyA coordinates.\n   * Where to hook the spring to body A, in local body coordinates.\n   * @default new Vec3()\n   */\n\n  /**\n   * Anchor for bodyB in local bodyB coordinates.\n   * Where to hook the spring to body B, in local body coordinates.\n   * @default new Vec3()\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.restLength = typeof options.restLength === 'number' ? options.restLength : 1;\n    this.stiffness = options.stiffness || 100;\n    this.damping = options.damping || 1;\n    this.bodyA = bodyA;\n    this.bodyB = bodyB;\n    this.localAnchorA = new Vec3();\n    this.localAnchorB = new Vec3();\n\n    if (options.localAnchorA) {\n      this.localAnchorA.copy(options.localAnchorA);\n    }\n\n    if (options.localAnchorB) {\n      this.localAnchorB.copy(options.localAnchorB);\n    }\n\n    if (options.worldAnchorA) {\n      this.setWorldAnchorA(options.worldAnchorA);\n    }\n\n    if (options.worldAnchorB) {\n      this.setWorldAnchorB(options.worldAnchorB);\n    }\n  }\n  /**\n   * Set the anchor point on body A, using world coordinates.\n   */\n\n\n  setWorldAnchorA(worldAnchorA) {\n    this.bodyA.pointToLocalFrame(worldAnchorA, this.localAnchorA);\n  }\n  /**\n   * Set the anchor point on body B, using world coordinates.\n   */\n\n\n  setWorldAnchorB(worldAnchorB) {\n    this.bodyB.pointToLocalFrame(worldAnchorB, this.localAnchorB);\n  }\n  /**\n   * Get the anchor point on body A, in world coordinates.\n   * @param result The vector to store the result in.\n   */\n\n\n  getWorldAnchorA(result) {\n    this.bodyA.pointToWorldFrame(this.localAnchorA, result);\n  }\n  /**\n   * Get the anchor point on body B, in world coordinates.\n   * @param result The vector to store the result in.\n   */\n\n\n  getWorldAnchorB(result) {\n    this.bodyB.pointToWorldFrame(this.localAnchorB, result);\n  }\n  /**\n   * Apply the spring force to the connected bodies.\n   */\n\n\n  applyForce() {\n    const k = this.stiffness;\n    const d = this.damping;\n    const l = this.restLength;\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const r = applyForce_r;\n    const r_unit = applyForce_r_unit;\n    const u = applyForce_u;\n    const f = applyForce_f;\n    const tmp = applyForce_tmp;\n    const worldAnchorA = applyForce_worldAnchorA;\n    const worldAnchorB = applyForce_worldAnchorB;\n    const ri = applyForce_ri;\n    const rj = applyForce_rj;\n    const ri_x_f = applyForce_ri_x_f;\n    const rj_x_f = applyForce_rj_x_f; // Get world anchors\n\n    this.getWorldAnchorA(worldAnchorA);\n    this.getWorldAnchorB(worldAnchorB); // Get offset points\n\n    worldAnchorA.vsub(bodyA.position, ri);\n    worldAnchorB.vsub(bodyB.position, rj); // Compute distance vector between world anchor points\n\n    worldAnchorB.vsub(worldAnchorA, r);\n    const rlen = r.length();\n    r_unit.copy(r);\n    r_unit.normalize(); // Compute relative velocity of the anchor points, u\n\n    bodyB.velocity.vsub(bodyA.velocity, u); // Add rotational velocity\n\n    bodyB.angularVelocity.cross(rj, tmp);\n    u.vadd(tmp, u);\n    bodyA.angularVelocity.cross(ri, tmp);\n    u.vsub(tmp, u); // F = - k * ( x - L ) - D * ( u )\n\n    r_unit.scale(-k * (rlen - l) - d * u.dot(r_unit), f); // Add forces to bodies\n\n    bodyA.force.vsub(f, bodyA.force);\n    bodyB.force.vadd(f, bodyB.force); // Angular force\n\n    ri.cross(f, ri_x_f);\n    rj.cross(f, rj_x_f);\n    bodyA.torque.vsub(ri_x_f, bodyA.torque);\n    bodyB.torque.vadd(rj_x_f, bodyB.torque);\n  }\n\n}\nconst applyForce_r = new Vec3();\nconst applyForce_r_unit = new Vec3();\nconst applyForce_u = new Vec3();\nconst applyForce_f = new Vec3();\nconst applyForce_worldAnchorA = new Vec3();\nconst applyForce_worldAnchorB = new Vec3();\nconst applyForce_ri = new Vec3();\nconst applyForce_rj = new Vec3();\nconst applyForce_ri_x_f = new Vec3();\nconst applyForce_rj_x_f = new Vec3();\nconst applyForce_tmp = new Vec3();\n\n/**\n * WheelInfo\n */\nclass WheelInfo {\n  /**\n   * Max travel distance of the suspension, in meters.\n   * @default 1\n   */\n\n  /**\n   * Speed to apply to the wheel rotation when the wheel is sliding.\n   * @default -0.1\n   */\n\n  /**\n   * If the customSlidingRotationalSpeed should be used.\n   * @default false\n   */\n\n  /**\n   * sliding\n   */\n\n  /**\n   * Connection point, defined locally in the chassis body frame.\n   */\n\n  /**\n   * chassisConnectionPointWorld\n   */\n\n  /**\n   * directionLocal\n   */\n\n  /**\n   * directionWorld\n   */\n\n  /**\n   * axleLocal\n   */\n\n  /**\n   * axleWorld\n   */\n\n  /**\n   * suspensionRestLength\n   * @default 1\n   */\n\n  /**\n   * suspensionMaxLength\n   * @default 2\n   */\n\n  /**\n   * radius\n   * @default 1\n   */\n\n  /**\n   * suspensionStiffness\n   * @default 100\n   */\n\n  /**\n   * dampingCompression\n   * @default 10\n   */\n\n  /**\n   * dampingRelaxation\n   * @default 10\n   */\n\n  /**\n   * frictionSlip\n   * @default 10.5\n   */\n\n  /** forwardAcceleration */\n\n  /** sideAcceleration */\n\n  /**\n   * steering\n   * @default 0\n   */\n\n  /**\n   * Rotation value, in radians.\n   * @default 0\n   */\n\n  /**\n   * deltaRotation\n   * @default 0\n   */\n\n  /**\n   * rollInfluence\n   * @default 0.01\n   */\n\n  /**\n   * maxSuspensionForce\n   */\n\n  /**\n   * engineForce\n   */\n\n  /**\n   * brake\n   */\n\n  /**\n   * isFrontWheel\n   * @default true\n   */\n\n  /**\n   * clippedInvContactDotSuspension\n   * @default 1\n   */\n\n  /**\n   * suspensionRelativeVelocity\n   * @default 0\n   */\n\n  /**\n   * suspensionForce\n   * @default 0\n   */\n\n  /**\n   * slipInfo\n   */\n\n  /**\n   * skidInfo\n   * @default 0\n   */\n\n  /**\n   * suspensionLength\n   * @default 0\n   */\n\n  /**\n   * sideImpulse\n   */\n\n  /**\n   * forwardImpulse\n   */\n\n  /**\n   * The result from raycasting.\n   */\n\n  /**\n   * Wheel world transform.\n   */\n\n  /**\n   * isInContact\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options = Utils.defaults(options, {\n      chassisConnectionPointLocal: new Vec3(),\n      chassisConnectionPointWorld: new Vec3(),\n      directionLocal: new Vec3(),\n      directionWorld: new Vec3(),\n      axleLocal: new Vec3(),\n      axleWorld: new Vec3(),\n      suspensionRestLength: 1,\n      suspensionMaxLength: 2,\n      radius: 1,\n      suspensionStiffness: 100,\n      dampingCompression: 10,\n      dampingRelaxation: 10,\n      frictionSlip: 10.5,\n      forwardAcceleration: 1,\n      sideAcceleration: 1,\n      steering: 0,\n      rotation: 0,\n      deltaRotation: 0,\n      rollInfluence: 0.01,\n      maxSuspensionForce: Number.MAX_VALUE,\n      isFrontWheel: true,\n      clippedInvContactDotSuspension: 1,\n      suspensionRelativeVelocity: 0,\n      suspensionForce: 0,\n      slipInfo: 0,\n      skidInfo: 0,\n      suspensionLength: 0,\n      maxSuspensionTravel: 1,\n      useCustomSlidingRotationalSpeed: false,\n      customSlidingRotationalSpeed: -0.1\n    });\n    this.maxSuspensionTravel = options.maxSuspensionTravel;\n    this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\n    this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\n    this.sliding = false;\n    this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\n    this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\n    this.directionLocal = options.directionLocal.clone();\n    this.directionWorld = options.directionWorld.clone();\n    this.axleLocal = options.axleLocal.clone();\n    this.axleWorld = options.axleWorld.clone();\n    this.suspensionRestLength = options.suspensionRestLength;\n    this.suspensionMaxLength = options.suspensionMaxLength;\n    this.radius = options.radius;\n    this.suspensionStiffness = options.suspensionStiffness;\n    this.dampingCompression = options.dampingCompression;\n    this.dampingRelaxation = options.dampingRelaxation;\n    this.frictionSlip = options.frictionSlip;\n    this.forwardAcceleration = options.forwardAcceleration;\n    this.sideAcceleration = options.sideAcceleration;\n    this.steering = 0;\n    this.rotation = 0;\n    this.deltaRotation = 0;\n    this.rollInfluence = options.rollInfluence;\n    this.maxSuspensionForce = options.maxSuspensionForce;\n    this.engineForce = 0;\n    this.brake = 0;\n    this.isFrontWheel = options.isFrontWheel;\n    this.clippedInvContactDotSuspension = 1;\n    this.suspensionRelativeVelocity = 0;\n    this.suspensionForce = 0;\n    this.slipInfo = 0;\n    this.skidInfo = 0;\n    this.suspensionLength = 0;\n    this.sideImpulse = 0;\n    this.forwardImpulse = 0;\n    this.raycastResult = new RaycastResult();\n    this.worldTransform = new Transform();\n    this.isInContact = false;\n  }\n\n  updateWheel(chassis) {\n    const raycastResult = this.raycastResult;\n\n    if (this.isInContact) {\n      const project = raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\n      raycastResult.hitPointWorld.vsub(chassis.position, relpos);\n      chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\n      const projVel = raycastResult.hitNormalWorld.dot(chassis_velocity_at_contactPoint);\n\n      if (project >= -0.1) {\n        this.suspensionRelativeVelocity = 0.0;\n        this.clippedInvContactDotSuspension = 1.0 / 0.1;\n      } else {\n        const inv = -1 / project;\n        this.suspensionRelativeVelocity = projVel * inv;\n        this.clippedInvContactDotSuspension = inv;\n      }\n    } else {\n      // Not in contact : position wheel in a nice (rest length) position\n      raycastResult.suspensionLength = this.suspensionRestLength;\n      this.suspensionRelativeVelocity = 0.0;\n      raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\n      this.clippedInvContactDotSuspension = 1.0;\n    }\n  }\n\n}\nconst chassis_velocity_at_contactPoint = new Vec3();\nconst relpos = new Vec3();\n\n/**\n * Vehicle helper class that casts rays from the wheel positions towards the ground and applies forces.\n */\nclass RaycastVehicle {\n  /** The car chassis body. */\n\n  /** The wheels. */\n\n  /** Will be set to true if the car is sliding. */\n\n  /** Index of the right axis. x=0, y=1, z=2 */\n\n  /** Index of the forward axis. x=0, y=1, z=2 */\n\n  /** Index of the up axis. x=0, y=1, z=2 */\n\n  /** The constraints. */\n\n  /** Optional pre-step callback. */\n\n  /** Number of wheels on the ground. */\n  constructor(options) {\n    this.chassisBody = options.chassisBody;\n    this.wheelInfos = [];\n    this.sliding = false;\n    this.world = null;\n    this.indexRightAxis = typeof options.indexRightAxis !== 'undefined' ? options.indexRightAxis : 2;\n    this.indexForwardAxis = typeof options.indexForwardAxis !== 'undefined' ? options.indexForwardAxis : 0;\n    this.indexUpAxis = typeof options.indexUpAxis !== 'undefined' ? options.indexUpAxis : 1;\n    this.constraints = [];\n\n    this.preStepCallback = () => {};\n\n    this.currentVehicleSpeedKmHour = 0;\n    this.numWheelsOnGround = 0;\n  }\n  /**\n   * Add a wheel. For information about the options, see `WheelInfo`.\n   */\n\n\n  addWheel(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const info = new WheelInfo(options);\n    const index = this.wheelInfos.length;\n    this.wheelInfos.push(info);\n    return index;\n  }\n  /**\n   * Set the steering value of a wheel.\n   */\n\n\n  setSteeringValue(value, wheelIndex) {\n    const wheel = this.wheelInfos[wheelIndex];\n    wheel.steering = value;\n  }\n  /**\n   * Set the wheel force to apply on one of the wheels each time step\n   */\n\n\n  applyEngineForce(value, wheelIndex) {\n    this.wheelInfos[wheelIndex].engineForce = value;\n  }\n  /**\n   * Set the braking force of a wheel\n   */\n\n\n  setBrake(brake, wheelIndex) {\n    this.wheelInfos[wheelIndex].brake = brake;\n  }\n  /**\n   * Add the vehicle including its constraints to the world.\n   */\n\n\n  addToWorld(world) {\n    world.addBody(this.chassisBody);\n    const that = this;\n\n    this.preStepCallback = () => {\n      that.updateVehicle(world.dt);\n    };\n\n    world.addEventListener('preStep', this.preStepCallback);\n    this.world = world;\n  }\n  /**\n   * Get one of the wheel axles, world-oriented.\n   */\n\n\n  getVehicleAxisWorld(axisIndex, result) {\n    result.set(axisIndex === 0 ? 1 : 0, axisIndex === 1 ? 1 : 0, axisIndex === 2 ? 1 : 0);\n    this.chassisBody.vectorToWorldFrame(result, result);\n  }\n\n  updateVehicle(timeStep) {\n    const wheelInfos = this.wheelInfos;\n    const numWheels = wheelInfos.length;\n    const chassisBody = this.chassisBody;\n\n    for (let i = 0; i < numWheels; i++) {\n      this.updateWheelTransform(i);\n    }\n\n    this.currentVehicleSpeedKmHour = 3.6 * chassisBody.velocity.length();\n    const forwardWorld = new Vec3();\n    this.getVehicleAxisWorld(this.indexForwardAxis, forwardWorld);\n\n    if (forwardWorld.dot(chassisBody.velocity) < 0) {\n      this.currentVehicleSpeedKmHour *= -1;\n    } // simulate suspension\n\n\n    for (let i = 0; i < numWheels; i++) {\n      this.castRay(wheelInfos[i]);\n    }\n\n    this.updateSuspension(timeStep);\n    const impulse = new Vec3();\n    const relpos = new Vec3();\n\n    for (let i = 0; i < numWheels; i++) {\n      //apply suspension force\n      const wheel = wheelInfos[i];\n      let suspensionForce = wheel.suspensionForce;\n\n      if (suspensionForce > wheel.maxSuspensionForce) {\n        suspensionForce = wheel.maxSuspensionForce;\n      }\n\n      wheel.raycastResult.hitNormalWorld.scale(suspensionForce * timeStep, impulse);\n      wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, relpos);\n      chassisBody.applyImpulse(impulse, relpos);\n    }\n\n    this.updateFriction(timeStep);\n    const hitNormalWorldScaledWithProj = new Vec3();\n    const fwd = new Vec3();\n    const vel = new Vec3();\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i]; //const relpos = new Vec3();\n      //wheel.chassisConnectionPointWorld.vsub(chassisBody.position, relpos);\n\n      chassisBody.getVelocityAtWorldPoint(wheel.chassisConnectionPointWorld, vel); // Hack to get the rotation in the correct direction\n\n      let m = 1;\n\n      switch (this.indexUpAxis) {\n        case 1:\n          m = -1;\n          break;\n      }\n\n      if (wheel.isInContact) {\n        this.getVehicleAxisWorld(this.indexForwardAxis, fwd);\n        const proj = fwd.dot(wheel.raycastResult.hitNormalWorld);\n        wheel.raycastResult.hitNormalWorld.scale(proj, hitNormalWorldScaledWithProj);\n        fwd.vsub(hitNormalWorldScaledWithProj, fwd);\n        const proj2 = fwd.dot(vel);\n        wheel.deltaRotation = m * proj2 * timeStep / wheel.radius;\n      }\n\n      if ((wheel.sliding || !wheel.isInContact) && wheel.engineForce !== 0 && wheel.useCustomSlidingRotationalSpeed) {\n        // Apply custom rotation when accelerating and sliding\n        wheel.deltaRotation = (wheel.engineForce > 0 ? 1 : -1) * wheel.customSlidingRotationalSpeed * timeStep;\n      } // Lock wheels\n\n\n      if (Math.abs(wheel.brake) > Math.abs(wheel.engineForce)) {\n        wheel.deltaRotation = 0;\n      }\n\n      wheel.rotation += wheel.deltaRotation; // Use the old value\n\n      wheel.deltaRotation *= 0.99; // damping of rotation when not in contact\n    }\n  }\n\n  updateSuspension(deltaTime) {\n    const chassisBody = this.chassisBody;\n    const chassisMass = chassisBody.mass;\n    const wheelInfos = this.wheelInfos;\n    const numWheels = wheelInfos.length;\n\n    for (let w_it = 0; w_it < numWheels; w_it++) {\n      const wheel = wheelInfos[w_it];\n\n      if (wheel.isInContact) {\n        let force; // Spring\n\n        const susp_length = wheel.suspensionRestLength;\n        const current_length = wheel.suspensionLength;\n        const length_diff = susp_length - current_length;\n        force = wheel.suspensionStiffness * length_diff * wheel.clippedInvContactDotSuspension; // Damper\n\n        const projected_rel_vel = wheel.suspensionRelativeVelocity;\n        let susp_damping;\n\n        if (projected_rel_vel < 0) {\n          susp_damping = wheel.dampingCompression;\n        } else {\n          susp_damping = wheel.dampingRelaxation;\n        }\n\n        force -= susp_damping * projected_rel_vel;\n        wheel.suspensionForce = force * chassisMass;\n\n        if (wheel.suspensionForce < 0) {\n          wheel.suspensionForce = 0;\n        }\n      } else {\n        wheel.suspensionForce = 0;\n      }\n    }\n  }\n  /**\n   * Remove the vehicle including its constraints from the world.\n   */\n\n\n  removeFromWorld(world) {\n    this.constraints;\n    world.removeBody(this.chassisBody);\n    world.removeEventListener('preStep', this.preStepCallback);\n    this.world = null;\n  }\n\n  castRay(wheel) {\n    const rayvector = castRay_rayvector;\n    const target = castRay_target;\n    this.updateWheelTransformWorld(wheel);\n    const chassisBody = this.chassisBody;\n    let depth = -1;\n    const raylen = wheel.suspensionRestLength + wheel.radius;\n    wheel.directionWorld.scale(raylen, rayvector);\n    const source = wheel.chassisConnectionPointWorld;\n    source.vadd(rayvector, target);\n    const raycastResult = wheel.raycastResult;\n    raycastResult.reset(); // Turn off ray collision with the chassis temporarily\n\n    const oldState = chassisBody.collisionResponse;\n    chassisBody.collisionResponse = false; // Cast ray against world\n\n    this.world.rayTest(source, target, raycastResult);\n    chassisBody.collisionResponse = oldState;\n    const object = raycastResult.body;\n    wheel.raycastResult.groundObject = 0;\n\n    if (object) {\n      depth = raycastResult.distance;\n      wheel.raycastResult.hitNormalWorld = raycastResult.hitNormalWorld;\n      wheel.isInContact = true;\n      const hitDistance = raycastResult.distance;\n      wheel.suspensionLength = hitDistance - wheel.radius; // clamp on max suspension travel\n\n      const minSuspensionLength = wheel.suspensionRestLength - wheel.maxSuspensionTravel;\n      const maxSuspensionLength = wheel.suspensionRestLength + wheel.maxSuspensionTravel;\n\n      if (wheel.suspensionLength < minSuspensionLength) {\n        wheel.suspensionLength = minSuspensionLength;\n      }\n\n      if (wheel.suspensionLength > maxSuspensionLength) {\n        wheel.suspensionLength = maxSuspensionLength;\n        wheel.raycastResult.reset();\n      }\n\n      const denominator = wheel.raycastResult.hitNormalWorld.dot(wheel.directionWorld);\n      const chassis_velocity_at_contactPoint = new Vec3();\n      chassisBody.getVelocityAtWorldPoint(wheel.raycastResult.hitPointWorld, chassis_velocity_at_contactPoint);\n      const projVel = wheel.raycastResult.hitNormalWorld.dot(chassis_velocity_at_contactPoint);\n\n      if (denominator >= -0.1) {\n        wheel.suspensionRelativeVelocity = 0;\n        wheel.clippedInvContactDotSuspension = 1 / 0.1;\n      } else {\n        const inv = -1 / denominator;\n        wheel.suspensionRelativeVelocity = projVel * inv;\n        wheel.clippedInvContactDotSuspension = inv;\n      }\n    } else {\n      //put wheel info as in rest position\n      wheel.suspensionLength = wheel.suspensionRestLength + 0 * wheel.maxSuspensionTravel;\n      wheel.suspensionRelativeVelocity = 0.0;\n      wheel.directionWorld.scale(-1, wheel.raycastResult.hitNormalWorld);\n      wheel.clippedInvContactDotSuspension = 1.0;\n    }\n\n    return depth;\n  }\n\n  updateWheelTransformWorld(wheel) {\n    wheel.isInContact = false;\n    const chassisBody = this.chassisBody;\n    chassisBody.pointToWorldFrame(wheel.chassisConnectionPointLocal, wheel.chassisConnectionPointWorld);\n    chassisBody.vectorToWorldFrame(wheel.directionLocal, wheel.directionWorld);\n    chassisBody.vectorToWorldFrame(wheel.axleLocal, wheel.axleWorld);\n  }\n  /**\n   * Update one of the wheel transform.\n   * Note when rendering wheels: during each step, wheel transforms are updated BEFORE the chassis; ie. their position becomes invalid after the step. Thus when you render wheels, you must update wheel transforms before rendering them. See raycastVehicle demo for an example.\n   * @param wheelIndex The wheel index to update.\n   */\n\n\n  updateWheelTransform(wheelIndex) {\n    const up = tmpVec4;\n    const right = tmpVec5;\n    const fwd = tmpVec6;\n    const wheel = this.wheelInfos[wheelIndex];\n    this.updateWheelTransformWorld(wheel);\n    wheel.directionLocal.scale(-1, up);\n    right.copy(wheel.axleLocal);\n    up.cross(right, fwd);\n    fwd.normalize();\n    right.normalize(); // Rotate around steering over the wheelAxle\n\n    const steering = wheel.steering;\n    const steeringOrn = new Quaternion();\n    steeringOrn.setFromAxisAngle(up, steering);\n    const rotatingOrn = new Quaternion();\n    rotatingOrn.setFromAxisAngle(right, wheel.rotation); // World rotation of the wheel\n\n    const q = wheel.worldTransform.quaternion;\n    this.chassisBody.quaternion.mult(steeringOrn, q);\n    q.mult(rotatingOrn, q);\n    q.normalize(); // world position of the wheel\n\n    const p = wheel.worldTransform.position;\n    p.copy(wheel.directionWorld);\n    p.scale(wheel.suspensionLength, p);\n    p.vadd(wheel.chassisConnectionPointWorld, p);\n  }\n  /**\n   * Get the world transform of one of the wheels\n   */\n\n\n  getWheelTransformWorld(wheelIndex) {\n    return this.wheelInfos[wheelIndex].worldTransform;\n  }\n\n  updateFriction(timeStep) {\n    const surfNormalWS_scaled_proj = updateFriction_surfNormalWS_scaled_proj; //calculate the impulse, so that the wheels don't move sidewards\n\n    const wheelInfos = this.wheelInfos;\n    const numWheels = wheelInfos.length;\n    const chassisBody = this.chassisBody;\n    const forwardWS = updateFriction_forwardWS;\n    const axle = updateFriction_axle;\n    this.numWheelsOnGround = 0;\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const groundObject = wheel.raycastResult.body;\n\n      if (groundObject) {\n        this.numWheelsOnGround++;\n      }\n\n      wheel.sideImpulse = 0;\n      wheel.forwardImpulse = 0;\n\n      if (!forwardWS[i]) {\n        forwardWS[i] = new Vec3();\n      }\n\n      if (!axle[i]) {\n        axle[i] = new Vec3();\n      }\n    }\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const groundObject = wheel.raycastResult.body;\n\n      if (groundObject) {\n        const axlei = axle[i];\n        const wheelTrans = this.getWheelTransformWorld(i); // Get world axle\n\n        wheelTrans.vectorToWorldFrame(directions[this.indexRightAxis], axlei);\n        const surfNormalWS = wheel.raycastResult.hitNormalWorld;\n        const proj = axlei.dot(surfNormalWS);\n        surfNormalWS.scale(proj, surfNormalWS_scaled_proj);\n        axlei.vsub(surfNormalWS_scaled_proj, axlei);\n        axlei.normalize();\n        surfNormalWS.cross(axlei, forwardWS[i]);\n        forwardWS[i].normalize();\n        wheel.sideImpulse = resolveSingleBilateral(chassisBody, wheel.raycastResult.hitPointWorld, groundObject, wheel.raycastResult.hitPointWorld, axlei);\n        wheel.sideImpulse *= sideFrictionStiffness2;\n      }\n    }\n\n    const sideFactor = 1;\n    const fwdFactor = 0.5;\n    this.sliding = false;\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const groundObject = wheel.raycastResult.body;\n      let rollingFriction = 0;\n      wheel.slipInfo = 1;\n\n      if (groundObject) {\n        const defaultRollingFrictionImpulse = 0;\n        const maxImpulse = wheel.brake ? wheel.brake : defaultRollingFrictionImpulse; // btWheelContactPoint contactPt(chassisBody,groundObject,wheelInfraycastInfo.hitPointWorld,forwardWS[wheel],maxImpulse);\n        // rollingFriction = calcRollingFriction(contactPt);\n\n        rollingFriction = calcRollingFriction(chassisBody, groundObject, wheel.raycastResult.hitPointWorld, forwardWS[i], maxImpulse);\n        rollingFriction += wheel.engineForce * timeStep; // rollingFriction = 0;\n\n        const factor = maxImpulse / rollingFriction;\n        wheel.slipInfo *= factor;\n      } //switch between active rolling (throttle), braking and non-active rolling friction (nthrottle/break)\n\n\n      wheel.forwardImpulse = 0;\n      wheel.skidInfo = 1;\n\n      if (groundObject) {\n        wheel.skidInfo = 1;\n        const maximp = wheel.suspensionForce * timeStep * wheel.frictionSlip;\n        const maximpSide = maximp;\n        const maximpSquared = maximp * maximpSide;\n        wheel.forwardImpulse = rollingFriction; //wheelInfo.engineForce* timeStep;\n\n        const x = wheel.forwardImpulse * fwdFactor / wheel.forwardAcceleration;\n        const y = wheel.sideImpulse * sideFactor / wheel.sideAcceleration;\n        const impulseSquared = x * x + y * y;\n        wheel.sliding = false;\n\n        if (impulseSquared > maximpSquared) {\n          this.sliding = true;\n          wheel.sliding = true;\n          const factor = maximp / Math.sqrt(impulseSquared);\n          wheel.skidInfo *= factor;\n        }\n      }\n    }\n\n    if (this.sliding) {\n      for (let i = 0; i < numWheels; i++) {\n        const wheel = wheelInfos[i];\n\n        if (wheel.sideImpulse !== 0) {\n          if (wheel.skidInfo < 1) {\n            wheel.forwardImpulse *= wheel.skidInfo;\n            wheel.sideImpulse *= wheel.skidInfo;\n          }\n        }\n      }\n    } // apply the impulses\n\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const rel_pos = new Vec3();\n      wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, rel_pos); // cannons applyimpulse is using world coord for the position\n      //rel_pos.copy(wheel.raycastResult.hitPointWorld);\n\n      if (wheel.forwardImpulse !== 0) {\n        const impulse = new Vec3();\n        forwardWS[i].scale(wheel.forwardImpulse, impulse);\n        chassisBody.applyImpulse(impulse, rel_pos);\n      }\n\n      if (wheel.sideImpulse !== 0) {\n        const groundObject = wheel.raycastResult.body;\n        const rel_pos2 = new Vec3();\n        wheel.raycastResult.hitPointWorld.vsub(groundObject.position, rel_pos2); //rel_pos2.copy(wheel.raycastResult.hitPointWorld);\n\n        const sideImp = new Vec3();\n        axle[i].scale(wheel.sideImpulse, sideImp); // Scale the relative position in the up direction with rollInfluence.\n        // If rollInfluence is 1, the impulse will be applied on the hitPoint (easy to roll over), if it is zero it will be applied in the same plane as the center of mass (not easy to roll over).\n\n        chassisBody.vectorToLocalFrame(rel_pos, rel_pos);\n        rel_pos['xyz'[this.indexUpAxis]] *= wheel.rollInfluence;\n        chassisBody.vectorToWorldFrame(rel_pos, rel_pos);\n        chassisBody.applyImpulse(sideImp, rel_pos); //apply friction impulse on the ground\n\n        sideImp.scale(-1, sideImp);\n        groundObject.applyImpulse(sideImp, rel_pos2);\n      }\n    }\n  }\n\n}\nnew Vec3();\nnew Vec3();\nnew Vec3();\nconst tmpVec4 = new Vec3();\nconst tmpVec5 = new Vec3();\nconst tmpVec6 = new Vec3();\nnew Ray();\nnew Vec3();\nconst castRay_rayvector = new Vec3();\nconst castRay_target = new Vec3();\nconst directions = [new Vec3(1, 0, 0), new Vec3(0, 1, 0), new Vec3(0, 0, 1)];\nconst updateFriction_surfNormalWS_scaled_proj = new Vec3();\nconst updateFriction_axle = [];\nconst updateFriction_forwardWS = [];\nconst sideFrictionStiffness2 = 1;\nconst calcRollingFriction_vel1 = new Vec3();\nconst calcRollingFriction_vel2 = new Vec3();\nconst calcRollingFriction_vel = new Vec3();\n\nfunction calcRollingFriction(body0, body1, frictionPosWorld, frictionDirectionWorld, maxImpulse) {\n  let j1 = 0;\n  const contactPosWorld = frictionPosWorld; // const rel_pos1 = new Vec3();\n  // const rel_pos2 = new Vec3();\n\n  const vel1 = calcRollingFriction_vel1;\n  const vel2 = calcRollingFriction_vel2;\n  const vel = calcRollingFriction_vel; // contactPosWorld.vsub(body0.position, rel_pos1);\n  // contactPosWorld.vsub(body1.position, rel_pos2);\n\n  body0.getVelocityAtWorldPoint(contactPosWorld, vel1);\n  body1.getVelocityAtWorldPoint(contactPosWorld, vel2);\n  vel1.vsub(vel2, vel);\n  const vrel = frictionDirectionWorld.dot(vel);\n  const denom0 = computeImpulseDenominator(body0, frictionPosWorld, frictionDirectionWorld);\n  const denom1 = computeImpulseDenominator(body1, frictionPosWorld, frictionDirectionWorld);\n  const relaxation = 1;\n  const jacDiagABInv = relaxation / (denom0 + denom1); // calculate j that moves us to zero relative velocity\n\n  j1 = -vrel * jacDiagABInv;\n\n  if (maxImpulse < j1) {\n    j1 = maxImpulse;\n  }\n\n  if (j1 < -maxImpulse) {\n    j1 = -maxImpulse;\n  }\n\n  return j1;\n}\n\nconst computeImpulseDenominator_r0 = new Vec3();\nconst computeImpulseDenominator_c0 = new Vec3();\nconst computeImpulseDenominator_vec = new Vec3();\nconst computeImpulseDenominator_m = new Vec3();\n\nfunction computeImpulseDenominator(body, pos, normal) {\n  const r0 = computeImpulseDenominator_r0;\n  const c0 = computeImpulseDenominator_c0;\n  const vec = computeImpulseDenominator_vec;\n  const m = computeImpulseDenominator_m;\n  pos.vsub(body.position, r0);\n  r0.cross(normal, c0);\n  body.invInertiaWorld.vmult(c0, m);\n  m.cross(r0, vec);\n  return body.invMass + normal.dot(vec);\n}\n\nconst resolveSingleBilateral_vel1 = new Vec3();\nconst resolveSingleBilateral_vel2 = new Vec3();\nconst resolveSingleBilateral_vel = new Vec3(); // bilateral constraint between two dynamic objects\n\nfunction resolveSingleBilateral(body1, pos1, body2, pos2, normal) {\n  const normalLenSqr = normal.lengthSquared();\n\n  if (normalLenSqr > 1.1) {\n    return 0; // no impulse\n  } // const rel_pos1 = new Vec3();\n  // const rel_pos2 = new Vec3();\n  // pos1.vsub(body1.position, rel_pos1);\n  // pos2.vsub(body2.position, rel_pos2);\n\n\n  const vel1 = resolveSingleBilateral_vel1;\n  const vel2 = resolveSingleBilateral_vel2;\n  const vel = resolveSingleBilateral_vel;\n  body1.getVelocityAtWorldPoint(pos1, vel1);\n  body2.getVelocityAtWorldPoint(pos2, vel2);\n  vel1.vsub(vel2, vel);\n  const rel_vel = normal.dot(vel);\n  const contactDamping = 0.2;\n  const massTerm = 1 / (body1.invMass + body2.invMass);\n  const impulse = -contactDamping * rel_vel * massTerm;\n  return impulse;\n}\n\n/**\n * Spherical shape\n * @example\n *     const radius = 1\n *     const sphereShape = new CANNON.Sphere(radius)\n *     const sphereBody = new CANNON.Body({ mass: 1, shape: sphereShape })\n *     world.addBody(sphereBody)\n */\nclass Sphere extends Shape {\n  /**\n   * The radius of the sphere.\n   */\n\n  /**\n   *\n   * @param radius The radius of the sphere, a non-negative number.\n   */\n  constructor(radius) {\n    super({\n      type: Shape.types.SPHERE\n    });\n    this.radius = radius !== undefined ? radius : 1.0;\n\n    if (this.radius < 0) {\n      throw new Error('The sphere radius cannot be negative.');\n    }\n\n    this.updateBoundingSphereRadius();\n  }\n  /** calculateLocalInertia */\n\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const I = 2.0 * mass * this.radius * this.radius / 5.0;\n    target.x = I;\n    target.y = I;\n    target.z = I;\n    return target;\n  }\n  /** volume */\n\n\n  volume() {\n    return 4.0 * Math.PI * Math.pow(this.radius, 3) / 3.0;\n  }\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = this.radius;\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    const r = this.radius;\n    const axes = ['x', 'y', 'z'];\n\n    for (let i = 0; i < axes.length; i++) {\n      const ax = axes[i];\n      min[ax] = pos[ax] - r;\n      max[ax] = pos[ax] + r;\n    }\n  }\n\n}\n\n/**\n * Simple vehicle helper class with spherical rigid body wheels.\n */\nclass RigidVehicle {\n  /**\n   * The bodies of the wheels.\n   */\n\n  /**\n   * The chassis body.\n   */\n\n  /**\n   * The constraints.\n   */\n\n  /**\n   * The wheel axes.\n   */\n\n  /**\n   * The wheel forces.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.wheelBodies = [];\n    this.coordinateSystem = typeof options.coordinateSystem !== 'undefined' ? options.coordinateSystem.clone() : new Vec3(1, 2, 3);\n\n    if (options.chassisBody) {\n      this.chassisBody = options.chassisBody;\n    } else {\n      // No chassis body given. Create it!\n      this.chassisBody = new Body({\n        mass: 1,\n        shape: new Box(new Vec3(5, 0.5, 2))\n      });\n    }\n\n    this.constraints = [];\n    this.wheelAxes = [];\n    this.wheelForces = [];\n  }\n  /**\n   * Add a wheel\n   */\n\n\n  addWheel(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    let wheelBody;\n\n    if (options.body) {\n      wheelBody = options.body;\n    } else {\n      // No wheel body given. Create it!\n      wheelBody = new Body({\n        mass: 1,\n        shape: new Sphere(1.2)\n      });\n    }\n\n    this.wheelBodies.push(wheelBody);\n    this.wheelForces.push(0); // Position constrain wheels\n\n    const position = typeof options.position !== 'undefined' ? options.position.clone() : new Vec3(); // Set position locally to the chassis\n\n    const worldPosition = new Vec3();\n    this.chassisBody.pointToWorldFrame(position, worldPosition);\n    wheelBody.position.set(worldPosition.x, worldPosition.y, worldPosition.z); // Constrain wheel\n\n    const axis = typeof options.axis !== 'undefined' ? options.axis.clone() : new Vec3(0, 0, 1);\n    this.wheelAxes.push(axis);\n    const hingeConstraint = new HingeConstraint(this.chassisBody, wheelBody, {\n      pivotA: position,\n      axisA: axis,\n      pivotB: Vec3.ZERO,\n      axisB: axis,\n      collideConnected: false\n    });\n    this.constraints.push(hingeConstraint);\n    return this.wheelBodies.length - 1;\n  }\n  /**\n   * Set the steering value of a wheel.\n   * @todo check coordinateSystem\n   */\n\n\n  setSteeringValue(value, wheelIndex) {\n    // Set angle of the hinge axis\n    const axis = this.wheelAxes[wheelIndex];\n    const c = Math.cos(value);\n    const s = Math.sin(value);\n    const x = axis.x;\n    const z = axis.z;\n    this.constraints[wheelIndex].axisA.set(-c * x + s * z, 0, s * x + c * z);\n  }\n  /**\n   * Set the target rotational speed of the hinge constraint.\n   */\n\n\n  setMotorSpeed(value, wheelIndex) {\n    const hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.enableMotor();\n    hingeConstraint.motorTargetVelocity = value;\n  }\n  /**\n   * Set the target rotational speed of the hinge constraint.\n   */\n\n\n  disableMotor(wheelIndex) {\n    const hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.disableMotor();\n  }\n  /**\n   * Set the wheel force to apply on one of the wheels each time step\n   */\n\n\n  setWheelForce(value, wheelIndex) {\n    this.wheelForces[wheelIndex] = value;\n  }\n  /**\n   * Apply a torque on one of the wheels.\n   */\n\n\n  applyWheelForce(value, wheelIndex) {\n    const axis = this.wheelAxes[wheelIndex];\n    const wheelBody = this.wheelBodies[wheelIndex];\n    const bodyTorque = wheelBody.torque;\n    axis.scale(value, torque);\n    wheelBody.vectorToWorldFrame(torque, torque);\n    bodyTorque.vadd(torque, bodyTorque);\n  }\n  /**\n   * Add the vehicle including its constraints to the world.\n   */\n\n\n  addToWorld(world) {\n    const constraints = this.constraints;\n    const bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (let i = 0; i < bodies.length; i++) {\n      world.addBody(bodies[i]);\n    }\n\n    for (let i = 0; i < constraints.length; i++) {\n      world.addConstraint(constraints[i]);\n    }\n\n    world.addEventListener('preStep', this._update.bind(this));\n  }\n\n  _update() {\n    const wheelForces = this.wheelForces;\n\n    for (let i = 0; i < wheelForces.length; i++) {\n      this.applyWheelForce(wheelForces[i], i);\n    }\n  }\n  /**\n   * Remove the vehicle including its constraints from the world.\n   */\n\n\n  removeFromWorld(world) {\n    const constraints = this.constraints;\n    const bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (let i = 0; i < bodies.length; i++) {\n      world.removeBody(bodies[i]);\n    }\n\n    for (let i = 0; i < constraints.length; i++) {\n      world.removeConstraint(constraints[i]);\n    }\n  }\n  /**\n   * Get current rotational velocity of a wheel\n   */\n\n\n  getWheelSpeed(wheelIndex) {\n    const axis = this.wheelAxes[wheelIndex];\n    const wheelBody = this.wheelBodies[wheelIndex];\n    const w = wheelBody.angularVelocity;\n    this.chassisBody.vectorToWorldFrame(axis, worldAxis);\n    return w.dot(worldAxis);\n  }\n\n}\nconst torque = new Vec3();\nconst worldAxis = new Vec3();\n\n/**\n * Smoothed-particle hydrodynamics system\n * @todo Make parameters customizable in the constructor\n */\nclass SPHSystem {\n  /**\n   * The particles array.\n   */\n\n  /**\n   * Density of the system (kg/m3).\n   * @default 1\n   */\n\n  /**\n   * Distance below which two particles are considered to be neighbors.\n   * It should be adjusted so there are about 15-20 neighbor particles within this radius.\n   * @default 1\n   */\n\n  /**\n   * @default 1\n   */\n\n  /**\n   * Viscosity of the system.\n   * @default 0.01\n   */\n\n  /**\n   * @default 0.000001\n   */\n  constructor() {\n    this.particles = [];\n    this.density = 1;\n    this.smoothingRadius = 1;\n    this.speedOfSound = 1;\n    this.viscosity = 0.01;\n    this.eps = 0.000001; // Stuff Computed per particle\n\n    this.pressures = [];\n    this.densities = [];\n    this.neighbors = [];\n  }\n  /**\n   * Add a particle to the system.\n   */\n\n\n  add(particle) {\n    this.particles.push(particle);\n\n    if (this.neighbors.length < this.particles.length) {\n      this.neighbors.push([]);\n    }\n  }\n  /**\n   * Remove a particle from the system.\n   */\n\n\n  remove(particle) {\n    const idx = this.particles.indexOf(particle);\n\n    if (idx !== -1) {\n      this.particles.splice(idx, 1);\n\n      if (this.neighbors.length > this.particles.length) {\n        this.neighbors.pop();\n      }\n    }\n  }\n  /**\n   * Get neighbors within smoothing volume, save in the array neighbors\n   */\n\n\n  getNeighbors(particle, neighbors) {\n    const N = this.particles.length;\n    const id = particle.id;\n    const R2 = this.smoothingRadius * this.smoothingRadius;\n    const dist = SPHSystem_getNeighbors_dist;\n\n    for (let i = 0; i !== N; i++) {\n      const p = this.particles[i];\n      p.position.vsub(particle.position, dist);\n\n      if (id !== p.id && dist.lengthSquared() < R2) {\n        neighbors.push(p);\n      }\n    }\n  }\n\n  update() {\n    const N = this.particles.length;\n    const dist = SPHSystem_update_dist;\n    const cs = this.speedOfSound;\n    const eps = this.eps;\n\n    for (let i = 0; i !== N; i++) {\n      const p = this.particles[i]; // Current particle\n\n      const neighbors = this.neighbors[i]; // Get neighbors\n\n      neighbors.length = 0;\n      this.getNeighbors(p, neighbors);\n      neighbors.push(this.particles[i]); // Add current too\n\n      const numNeighbors = neighbors.length; // Accumulate density for the particle\n\n      let sum = 0.0;\n\n      for (let j = 0; j !== numNeighbors; j++) {\n        //printf(\"Current particle has position %f %f %f\\n\",objects[id].pos.x(),objects[id].pos.y(),objects[id].pos.z());\n        p.position.vsub(neighbors[j].position, dist);\n        const len = dist.length();\n        const weight = this.w(len);\n        sum += neighbors[j].mass * weight;\n      } // Save\n\n\n      this.densities[i] = sum;\n      this.pressures[i] = cs * cs * (this.densities[i] - this.density);\n    } // Add forces\n    // Sum to these accelerations\n\n\n    const a_pressure = SPHSystem_update_a_pressure;\n    const a_visc = SPHSystem_update_a_visc;\n    const gradW = SPHSystem_update_gradW;\n    const r_vec = SPHSystem_update_r_vec;\n    const u = SPHSystem_update_u;\n\n    for (let i = 0; i !== N; i++) {\n      const particle = this.particles[i];\n      a_pressure.set(0, 0, 0);\n      a_visc.set(0, 0, 0); // Init vars\n\n      let Pij;\n      let nabla;\n\n      const neighbors = this.neighbors[i];\n      const numNeighbors = neighbors.length; //printf(\"Neighbors: \");\n\n      for (let j = 0; j !== numNeighbors; j++) {\n        const neighbor = neighbors[j]; //printf(\"%d \",nj);\n        // Get r once for all..\n\n        particle.position.vsub(neighbor.position, r_vec);\n        const r = r_vec.length(); // Pressure contribution\n\n        Pij = -neighbor.mass * (this.pressures[i] / (this.densities[i] * this.densities[i] + eps) + this.pressures[j] / (this.densities[j] * this.densities[j] + eps));\n        this.gradw(r_vec, gradW); // Add to pressure acceleration\n\n        gradW.scale(Pij, gradW);\n        a_pressure.vadd(gradW, a_pressure); // Viscosity contribution\n\n        neighbor.velocity.vsub(particle.velocity, u);\n        u.scale(1.0 / (0.0001 + this.densities[i] * this.densities[j]) * this.viscosity * neighbor.mass, u);\n        nabla = this.nablaw(r);\n        u.scale(nabla, u); // Add to viscosity acceleration\n\n        a_visc.vadd(u, a_visc);\n      } // Calculate force\n\n\n      a_visc.scale(particle.mass, a_visc);\n      a_pressure.scale(particle.mass, a_pressure); // Add force to particles\n\n      particle.force.vadd(a_visc, particle.force);\n      particle.force.vadd(a_pressure, particle.force);\n    }\n  } // Calculate the weight using the W(r) weightfunction\n\n\n  w(r) {\n    // 315\n    const h = this.smoothingRadius;\n    return 315.0 / (64.0 * Math.PI * h ** 9) * (h * h - r * r) ** 3;\n  } // calculate gradient of the weight function\n\n\n  gradw(rVec, resultVec) {\n    const r = rVec.length();\n    const h = this.smoothingRadius;\n    rVec.scale(945.0 / (32.0 * Math.PI * h ** 9) * (h * h - r * r) ** 2, resultVec);\n  } // Calculate nabla(W)\n\n\n  nablaw(r) {\n    const h = this.smoothingRadius;\n    const nabla = 945.0 / (32.0 * Math.PI * h ** 9) * (h * h - r * r) * (7 * r * r - 3 * h * h);\n    return nabla;\n  }\n\n}\nconst SPHSystem_getNeighbors_dist = new Vec3(); // Temp vectors for calculation\n\nconst SPHSystem_update_dist = new Vec3(); // Relative velocity\n\nconst SPHSystem_update_a_pressure = new Vec3();\nconst SPHSystem_update_a_visc = new Vec3();\nconst SPHSystem_update_gradW = new Vec3();\nconst SPHSystem_update_r_vec = new Vec3();\nconst SPHSystem_update_u = new Vec3();\n\n/**\n * Cylinder class.\n * @example\n *     const radiusTop = 0.5\n *     const radiusBottom = 0.5\n *     const height = 2\n *     const numSegments = 12\n *     const cylinderShape = new CANNON.Cylinder(radiusTop, radiusBottom, height, numSegments)\n *     const cylinderBody = new CANNON.Body({ mass: 1, shape: cylinderShape })\n *     world.addBody(cylinderBody)\n */\n\nclass Cylinder extends ConvexPolyhedron {\n  /** The radius of the top of the Cylinder. */\n\n  /** The radius of the bottom of the Cylinder. */\n\n  /** The height of the Cylinder. */\n\n  /** The number of segments to build the cylinder out of. */\n\n  /**\n   * @param radiusTop The radius of the top of the Cylinder.\n   * @param radiusBottom The radius of the bottom of the Cylinder.\n   * @param height The height of the Cylinder.\n   * @param numSegments The number of segments to build the cylinder out of.\n   */\n  constructor(radiusTop, radiusBottom, height, numSegments) {\n    if (radiusTop === void 0) {\n      radiusTop = 1;\n    }\n\n    if (radiusBottom === void 0) {\n      radiusBottom = 1;\n    }\n\n    if (height === void 0) {\n      height = 1;\n    }\n\n    if (numSegments === void 0) {\n      numSegments = 8;\n    }\n\n    if (radiusTop < 0) {\n      throw new Error('The cylinder radiusTop cannot be negative.');\n    }\n\n    if (radiusBottom < 0) {\n      throw new Error('The cylinder radiusBottom cannot be negative.');\n    }\n\n    const N = numSegments;\n    const vertices = [];\n    const axes = [];\n    const faces = [];\n    const bottomface = [];\n    const topface = [];\n    const cos = Math.cos;\n    const sin = Math.sin; // First bottom point\n\n    vertices.push(new Vec3(-radiusBottom * sin(0), -height * 0.5, radiusBottom * cos(0)));\n    bottomface.push(0); // First top point\n\n    vertices.push(new Vec3(-radiusTop * sin(0), height * 0.5, radiusTop * cos(0)));\n    topface.push(1);\n\n    for (let i = 0; i < N; i++) {\n      const theta = 2 * Math.PI / N * (i + 1);\n      const thetaN = 2 * Math.PI / N * (i + 0.5);\n\n      if (i < N - 1) {\n        // Bottom\n        vertices.push(new Vec3(-radiusBottom * sin(theta), -height * 0.5, radiusBottom * cos(theta)));\n        bottomface.push(2 * i + 2); // Top\n\n        vertices.push(new Vec3(-radiusTop * sin(theta), height * 0.5, radiusTop * cos(theta)));\n        topface.push(2 * i + 3); // Face\n\n        faces.push([2 * i, 2 * i + 1, 2 * i + 3, 2 * i + 2]);\n      } else {\n        faces.push([2 * i, 2 * i + 1, 1, 0]); // Connect\n      } // Axis: we can cut off half of them if we have even number of segments\n\n\n      if (N % 2 === 1 || i < N / 2) {\n        axes.push(new Vec3(-sin(thetaN), 0, cos(thetaN)));\n      }\n    }\n\n    faces.push(bottomface);\n    axes.push(new Vec3(0, 1, 0)); // Reorder top face\n\n    const temp = [];\n\n    for (let i = 0; i < topface.length; i++) {\n      temp.push(topface[topface.length - i - 1]);\n    }\n\n    faces.push(temp);\n    super({\n      vertices,\n      faces,\n      axes\n    });\n    this.type = Shape.types.CYLINDER;\n    this.radiusTop = radiusTop;\n    this.radiusBottom = radiusBottom;\n    this.height = height;\n    this.numSegments = numSegments;\n  }\n\n}\n\n/**\n * Particle shape.\n * @example\n *     const particleShape = new CANNON.Particle()\n *     const particleBody = new CANNON.Body({ mass: 1, shape: particleShape })\n *     world.addBody(particleBody)\n */\nclass Particle extends Shape {\n  constructor() {\n    super({\n      type: Shape.types.PARTICLE\n    });\n  }\n  /**\n   * calculateLocalInertia\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.set(0, 0, 0);\n    return target;\n  }\n\n  volume() {\n    return 0;\n  }\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = 0;\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    // Get each axis max\n    min.copy(pos);\n    max.copy(pos);\n  }\n\n}\n\n/**\n * A plane, facing in the Z direction. The plane has its surface at z=0 and everything below z=0 is assumed to be solid plane. To make the plane face in some other direction than z, you must put it inside a Body and rotate that body. See the demos.\n * @example\n *     const planeShape = new CANNON.Plane()\n *     const planeBody = new CANNON.Body({ mass: 0, shape:  planeShape })\n *     planeBody.quaternion.setFromEuler(-Math.PI / 2, 0, 0) // make it face up\n *     world.addBody(planeBody)\n */\nclass Plane extends Shape {\n  /** worldNormal */\n\n  /** worldNormalNeedsUpdate */\n  constructor() {\n    super({\n      type: Shape.types.PLANE\n    }); // World oriented normal\n\n    this.worldNormal = new Vec3();\n    this.worldNormalNeedsUpdate = true;\n    this.boundingSphereRadius = Number.MAX_VALUE;\n  }\n  /** computeWorldNormal */\n\n\n  computeWorldNormal(quat) {\n    const n = this.worldNormal;\n    n.set(0, 0, 1);\n    quat.vmult(n, n);\n    this.worldNormalNeedsUpdate = false;\n  }\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    return target;\n  }\n\n  volume() {\n    return (// The plane is infinite...\n      Number.MAX_VALUE\n    );\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    // The plane AABB is infinite, except if the normal is pointing along any axis\n    tempNormal.set(0, 0, 1); // Default plane normal is z\n\n    quat.vmult(tempNormal, tempNormal);\n    const maxVal = Number.MAX_VALUE;\n    min.set(-maxVal, -maxVal, -maxVal);\n    max.set(maxVal, maxVal, maxVal);\n\n    if (tempNormal.x === 1) {\n      max.x = pos.x;\n    } else if (tempNormal.x === -1) {\n      min.x = pos.x;\n    }\n\n    if (tempNormal.y === 1) {\n      max.y = pos.y;\n    } else if (tempNormal.y === -1) {\n      min.y = pos.y;\n    }\n\n    if (tempNormal.z === 1) {\n      max.z = pos.z;\n    } else if (tempNormal.z === -1) {\n      min.z = pos.z;\n    }\n  }\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = Number.MAX_VALUE;\n  }\n\n}\nconst tempNormal = new Vec3();\n\n/**\n * Heightfield shape class. Height data is given as an array. These data points are spread out evenly with a given distance.\n * @todo Should be possible to use along all axes, not just y\n * @todo should be possible to scale along all axes\n * @todo Refactor elementSize to elementSizeX and elementSizeY\n *\n * @example\n *     // Generate some height data (y-values).\n *     const data = []\n *     for (let i = 0; i < 1000; i++) {\n *         const y = 0.5 * Math.cos(0.2 * i)\n *         data.push(y)\n *     }\n *\n *     // Create the heightfield shape\n *     const heightfieldShape = new CANNON.Heightfield(data, {\n *         elementSize: 1 // Distance between the data points in X and Y directions\n *     })\n *     const heightfieldBody = new CANNON.Body({ shape: heightfieldShape })\n *     world.addBody(heightfieldBody)\n */\nclass Heightfield extends Shape {\n  /**\n   * An array of numbers, or height values, that are spread out along the x axis.\n   */\n\n  /**\n   * Max value of the data points in the data array.\n   */\n\n  /**\n   * Minimum value of the data points in the data array.\n   */\n\n  /**\n   * World spacing between the data points in X and Y direction.\n   * @todo elementSizeX and Y\n   * @default 1\n   */\n\n  /**\n   * @default true\n   */\n\n  /**\n   * @param data An array of numbers, or height values, that are spread out along the x axis.\n   */\n  constructor(data, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options = Utils.defaults(options, {\n      maxValue: null,\n      minValue: null,\n      elementSize: 1\n    });\n    super({\n      type: Shape.types.HEIGHTFIELD\n    });\n    this.data = data;\n    this.maxValue = options.maxValue;\n    this.minValue = options.minValue;\n    this.elementSize = options.elementSize;\n\n    if (options.minValue === null) {\n      this.updateMinValue();\n    }\n\n    if (options.maxValue === null) {\n      this.updateMaxValue();\n    }\n\n    this.cacheEnabled = true;\n    this.pillarConvex = new ConvexPolyhedron();\n    this.pillarOffset = new Vec3();\n    this.updateBoundingSphereRadius(); // \"i_j_isUpper\" => { convex: ..., offset: ... }\n    // for example:\n    // _cachedPillars[\"0_2_1\"]\n\n    this._cachedPillars = {};\n  }\n  /**\n   * Call whenever you change the data array.\n   */\n\n\n  update() {\n    this._cachedPillars = {};\n  }\n  /**\n   * Update the `minValue` property\n   */\n\n\n  updateMinValue() {\n    const data = this.data;\n    let minValue = data[0][0];\n\n    for (let i = 0; i !== data.length; i++) {\n      for (let j = 0; j !== data[i].length; j++) {\n        const v = data[i][j];\n\n        if (v < minValue) {\n          minValue = v;\n        }\n      }\n    }\n\n    this.minValue = minValue;\n  }\n  /**\n   * Update the `maxValue` property\n   */\n\n\n  updateMaxValue() {\n    const data = this.data;\n    let maxValue = data[0][0];\n\n    for (let i = 0; i !== data.length; i++) {\n      for (let j = 0; j !== data[i].length; j++) {\n        const v = data[i][j];\n\n        if (v > maxValue) {\n          maxValue = v;\n        }\n      }\n    }\n\n    this.maxValue = maxValue;\n  }\n  /**\n   * Set the height value at an index. Don't forget to update maxValue and minValue after you're done.\n   */\n\n\n  setHeightValueAtIndex(xi, yi, value) {\n    const data = this.data;\n    data[xi][yi] = value; // Invalidate cache\n\n    this.clearCachedConvexTrianglePillar(xi, yi, false);\n\n    if (xi > 0) {\n      this.clearCachedConvexTrianglePillar(xi - 1, yi, true);\n      this.clearCachedConvexTrianglePillar(xi - 1, yi, false);\n    }\n\n    if (yi > 0) {\n      this.clearCachedConvexTrianglePillar(xi, yi - 1, true);\n      this.clearCachedConvexTrianglePillar(xi, yi - 1, false);\n    }\n\n    if (yi > 0 && xi > 0) {\n      this.clearCachedConvexTrianglePillar(xi - 1, yi - 1, true);\n    }\n  }\n  /**\n   * Get max/min in a rectangle in the matrix data\n   * @param result An array to store the results in.\n   * @return The result array, if it was passed in. Minimum will be at position 0 and max at 1.\n   */\n\n\n  getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, result) {\n    if (result === void 0) {\n      result = [];\n    }\n\n    // Get max and min of the data\n    const data = this.data; // Set first value\n\n    let max = this.minValue;\n\n    for (let i = iMinX; i <= iMaxX; i++) {\n      for (let j = iMinY; j <= iMaxY; j++) {\n        const height = data[i][j];\n\n        if (height > max) {\n          max = height;\n        }\n      }\n    }\n\n    result[0] = this.minValue;\n    result[1] = max;\n  }\n  /**\n   * Get the index of a local position on the heightfield. The indexes indicate the rectangles, so if your terrain is made of N x N height data points, you will have rectangle indexes ranging from 0 to N-1.\n   * @param result Two-element array\n   * @param clamp If the position should be clamped to the heightfield edge.\n   */\n\n\n  getIndexOfPosition(x, y, result, clamp) {\n    // Get the index of the data points to test against\n    const w = this.elementSize;\n    const data = this.data;\n    let xi = Math.floor(x / w);\n    let yi = Math.floor(y / w);\n    result[0] = xi;\n    result[1] = yi;\n\n    if (clamp) {\n      // Clamp index to edges\n      if (xi < 0) {\n        xi = 0;\n      }\n\n      if (yi < 0) {\n        yi = 0;\n      }\n\n      if (xi >= data.length - 1) {\n        xi = data.length - 1;\n      }\n\n      if (yi >= data[0].length - 1) {\n        yi = data[0].length - 1;\n      }\n    } // Bail out if we are out of the terrain\n\n\n    if (xi < 0 || yi < 0 || xi >= data.length - 1 || yi >= data[0].length - 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getTriangleAt(x, y, edgeClamp, a, b, c) {\n    const idx = getHeightAt_idx;\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\n    let xi = idx[0];\n    let yi = idx[1];\n    const data = this.data;\n\n    if (edgeClamp) {\n      xi = Math.min(data.length - 2, Math.max(0, xi));\n      yi = Math.min(data[0].length - 2, Math.max(0, yi));\n    }\n\n    const elementSize = this.elementSize;\n    const lowerDist2 = (x / elementSize - xi) ** 2 + (y / elementSize - yi) ** 2;\n    const upperDist2 = (x / elementSize - (xi + 1)) ** 2 + (y / elementSize - (yi + 1)) ** 2;\n    const upper = lowerDist2 > upperDist2;\n    this.getTriangle(xi, yi, upper, a, b, c);\n    return upper;\n  }\n\n  getNormalAt(x, y, edgeClamp, result) {\n    const a = getNormalAt_a;\n    const b = getNormalAt_b;\n    const c = getNormalAt_c;\n    const e0 = getNormalAt_e0;\n    const e1 = getNormalAt_e1;\n    this.getTriangleAt(x, y, edgeClamp, a, b, c);\n    b.vsub(a, e0);\n    c.vsub(a, e1);\n    e0.cross(e1, result);\n    result.normalize();\n  }\n  /**\n   * Get an AABB of a square in the heightfield\n   * @param xi\n   * @param yi\n   * @param result\n   */\n\n\n  getAabbAtIndex(xi, yi, _ref) {\n    let {\n      lowerBound,\n      upperBound\n    } = _ref;\n    const data = this.data;\n    const elementSize = this.elementSize;\n    lowerBound.set(xi * elementSize, yi * elementSize, data[xi][yi]);\n    upperBound.set((xi + 1) * elementSize, (yi + 1) * elementSize, data[xi + 1][yi + 1]);\n  }\n  /**\n   * Get the height in the heightfield at a given position\n   */\n\n\n  getHeightAt(x, y, edgeClamp) {\n    const data = this.data;\n    const a = getHeightAt_a;\n    const b = getHeightAt_b;\n    const c = getHeightAt_c;\n    const idx = getHeightAt_idx;\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\n    let xi = idx[0];\n    let yi = idx[1];\n\n    if (edgeClamp) {\n      xi = Math.min(data.length - 2, Math.max(0, xi));\n      yi = Math.min(data[0].length - 2, Math.max(0, yi));\n    }\n\n    const upper = this.getTriangleAt(x, y, edgeClamp, a, b, c);\n    barycentricWeights(x, y, a.x, a.y, b.x, b.y, c.x, c.y, getHeightAt_weights);\n    const w = getHeightAt_weights;\n\n    if (upper) {\n      // Top triangle verts\n      return data[xi + 1][yi + 1] * w.x + data[xi][yi + 1] * w.y + data[xi + 1][yi] * w.z;\n    } else {\n      // Top triangle verts\n      return data[xi][yi] * w.x + data[xi + 1][yi] * w.y + data[xi][yi + 1] * w.z;\n    }\n  }\n\n  getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle) {\n    return `${xi}_${yi}_${getUpperTriangle ? 1 : 0}`;\n  }\n\n  getCachedConvexTrianglePillar(xi, yi, getUpperTriangle) {\n    return this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n  }\n\n  setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, convex, offset) {\n    this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)] = {\n      convex,\n      offset\n    };\n  }\n\n  clearCachedConvexTrianglePillar(xi, yi, getUpperTriangle) {\n    delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n  }\n  /**\n   * Get a triangle from the heightfield\n   */\n\n\n  getTriangle(xi, yi, upper, a, b, c) {\n    const data = this.data;\n    const elementSize = this.elementSize;\n\n    if (upper) {\n      // Top triangle verts\n      a.set((xi + 1) * elementSize, (yi + 1) * elementSize, data[xi + 1][yi + 1]);\n      b.set(xi * elementSize, (yi + 1) * elementSize, data[xi][yi + 1]);\n      c.set((xi + 1) * elementSize, yi * elementSize, data[xi + 1][yi]);\n    } else {\n      // Top triangle verts\n      a.set(xi * elementSize, yi * elementSize, data[xi][yi]);\n      b.set((xi + 1) * elementSize, yi * elementSize, data[xi + 1][yi]);\n      c.set(xi * elementSize, (yi + 1) * elementSize, data[xi][yi + 1]);\n    }\n  }\n  /**\n   * Get a triangle in the terrain in the form of a triangular convex shape.\n   */\n\n\n  getConvexTrianglePillar(xi, yi, getUpperTriangle) {\n    let result = this.pillarConvex;\n    let offsetResult = this.pillarOffset;\n\n    if (this.cacheEnabled) {\n      const data = this.getCachedConvexTrianglePillar(xi, yi, getUpperTriangle);\n\n      if (data) {\n        this.pillarConvex = data.convex;\n        this.pillarOffset = data.offset;\n        return;\n      }\n\n      result = new ConvexPolyhedron();\n      offsetResult = new Vec3();\n      this.pillarConvex = result;\n      this.pillarOffset = offsetResult;\n    }\n\n    const data = this.data;\n    const elementSize = this.elementSize;\n    const faces = result.faces; // Reuse verts if possible\n\n    result.vertices.length = 6;\n\n    for (let i = 0; i < 6; i++) {\n      if (!result.vertices[i]) {\n        result.vertices[i] = new Vec3();\n      }\n    } // Reuse faces if possible\n\n\n    faces.length = 5;\n\n    for (let i = 0; i < 5; i++) {\n      if (!faces[i]) {\n        faces[i] = [];\n      }\n    }\n\n    const verts = result.vertices;\n    const h = (Math.min(data[xi][yi], data[xi + 1][yi], data[xi][yi + 1], data[xi + 1][yi + 1]) - this.minValue) / 2 + this.minValue;\n\n    if (!getUpperTriangle) {\n      // Center of the triangle pillar - all polygons are given relative to this one\n      offsetResult.set((xi + 0.25) * elementSize, // sort of center of a triangle\n      (yi + 0.25) * elementSize, h // vertical center\n      ); // Top triangle verts\n\n      verts[0].set(-0.25 * elementSize, -0.25 * elementSize, data[xi][yi] - h);\n      verts[1].set(0.75 * elementSize, -0.25 * elementSize, data[xi + 1][yi] - h);\n      verts[2].set(-0.25 * elementSize, 0.75 * elementSize, data[xi][yi + 1] - h); // bottom triangle verts\n\n      verts[3].set(-0.25 * elementSize, -0.25 * elementSize, -Math.abs(h) - 1);\n      verts[4].set(0.75 * elementSize, -0.25 * elementSize, -Math.abs(h) - 1);\n      verts[5].set(-0.25 * elementSize, 0.75 * elementSize, -Math.abs(h) - 1); // top triangle\n\n      faces[0][0] = 0;\n      faces[0][1] = 1;\n      faces[0][2] = 2; // bottom triangle\n\n      faces[1][0] = 5;\n      faces[1][1] = 4;\n      faces[1][2] = 3; // -x facing quad\n\n      faces[2][0] = 0;\n      faces[2][1] = 2;\n      faces[2][2] = 5;\n      faces[2][3] = 3; // -y facing quad\n\n      faces[3][0] = 1;\n      faces[3][1] = 0;\n      faces[3][2] = 3;\n      faces[3][3] = 4; // +xy facing quad\n\n      faces[4][0] = 4;\n      faces[4][1] = 5;\n      faces[4][2] = 2;\n      faces[4][3] = 1;\n    } else {\n      // Center of the triangle pillar - all polygons are given relative to this one\n      offsetResult.set((xi + 0.75) * elementSize, // sort of center of a triangle\n      (yi + 0.75) * elementSize, h // vertical center\n      ); // Top triangle verts\n\n      verts[0].set(0.25 * elementSize, 0.25 * elementSize, data[xi + 1][yi + 1] - h);\n      verts[1].set(-0.75 * elementSize, 0.25 * elementSize, data[xi][yi + 1] - h);\n      verts[2].set(0.25 * elementSize, -0.75 * elementSize, data[xi + 1][yi] - h); // bottom triangle verts\n\n      verts[3].set(0.25 * elementSize, 0.25 * elementSize, -Math.abs(h) - 1);\n      verts[4].set(-0.75 * elementSize, 0.25 * elementSize, -Math.abs(h) - 1);\n      verts[5].set(0.25 * elementSize, -0.75 * elementSize, -Math.abs(h) - 1); // Top triangle\n\n      faces[0][0] = 0;\n      faces[0][1] = 1;\n      faces[0][2] = 2; // bottom triangle\n\n      faces[1][0] = 5;\n      faces[1][1] = 4;\n      faces[1][2] = 3; // +x facing quad\n\n      faces[2][0] = 2;\n      faces[2][1] = 5;\n      faces[2][2] = 3;\n      faces[2][3] = 0; // +y facing quad\n\n      faces[3][0] = 3;\n      faces[3][1] = 4;\n      faces[3][2] = 1;\n      faces[3][3] = 0; // -xy facing quad\n\n      faces[4][0] = 1;\n      faces[4][1] = 4;\n      faces[4][2] = 5;\n      faces[4][3] = 2;\n    }\n\n    result.computeNormals();\n    result.computeEdges();\n    result.updateBoundingSphereRadius();\n    this.setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, result, offsetResult);\n  }\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.set(0, 0, 0);\n    return target;\n  }\n\n  volume() {\n    return (// The terrain is infinite\n      Number.MAX_VALUE\n    );\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    /** @TODO do it properly */\n    min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n    max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n  }\n\n  updateBoundingSphereRadius() {\n    // Use the bounding box of the min/max values\n    const data = this.data;\n    const s = this.elementSize;\n    this.boundingSphereRadius = new Vec3(data.length * s, data[0].length * s, Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).length();\n  }\n  /**\n   * Sets the height values from an image. Currently only supported in browser.\n   */\n\n\n  setHeightsFromImage(image, scale) {\n    const {\n      x,\n      z,\n      y\n    } = scale;\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const context = canvas.getContext('2d');\n    context.drawImage(image, 0, 0);\n    const imageData = context.getImageData(0, 0, image.width, image.height);\n    const matrix = this.data;\n    matrix.length = 0;\n    this.elementSize = Math.abs(x) / imageData.width;\n\n    for (let i = 0; i < imageData.height; i++) {\n      const row = [];\n\n      for (let j = 0; j < imageData.width; j++) {\n        const a = imageData.data[(i * imageData.height + j) * 4];\n        const b = imageData.data[(i * imageData.height + j) * 4 + 1];\n        const c = imageData.data[(i * imageData.height + j) * 4 + 2];\n        const height = (a + b + c) / 4 / 255 * z;\n\n        if (x < 0) {\n          row.push(height);\n        } else {\n          row.unshift(height);\n        }\n      }\n\n      if (y < 0) {\n        matrix.unshift(row);\n      } else {\n        matrix.push(row);\n      }\n    }\n\n    this.updateMaxValue();\n    this.updateMinValue();\n    this.update();\n  }\n\n}\nconst getHeightAt_idx = [];\nconst getHeightAt_weights = new Vec3();\nconst getHeightAt_a = new Vec3();\nconst getHeightAt_b = new Vec3();\nconst getHeightAt_c = new Vec3();\nconst getNormalAt_a = new Vec3();\nconst getNormalAt_b = new Vec3();\nconst getNormalAt_c = new Vec3();\nconst getNormalAt_e0 = new Vec3();\nconst getNormalAt_e1 = new Vec3(); // from https://en.wikipedia.org/wiki/Barycentric_coordinate_system\n\nfunction barycentricWeights(x, y, ax, ay, bx, by, cx, cy, result) {\n  result.x = ((by - cy) * (x - cx) + (cx - bx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\n  result.y = ((cy - ay) * (x - cx) + (ax - cx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\n  result.z = 1 - result.x - result.y;\n}\n\n/**\n * OctreeNode\n */\nclass OctreeNode {\n  /** The root node */\n\n  /** Boundary of this node */\n\n  /** Contained data at the current node level */\n\n  /** Children to this node */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.root = options.root || null;\n    this.aabb = options.aabb ? options.aabb.clone() : new AABB();\n    this.data = [];\n    this.children = [];\n  }\n  /**\n   * reset\n   */\n\n\n  reset() {\n    this.children.length = this.data.length = 0;\n  }\n  /**\n   * Insert data into this node\n   * @return True if successful, otherwise false\n   */\n\n\n  insert(aabb, elementData, level) {\n    if (level === void 0) {\n      level = 0;\n    }\n\n    const nodeData = this.data; // Ignore objects that do not belong in this node\n\n    if (!this.aabb.contains(aabb)) {\n      return false; // object cannot be added\n    }\n\n    const children = this.children;\n    const maxDepth = this.maxDepth || this.root.maxDepth;\n\n    if (level < maxDepth) {\n      // Subdivide if there are no children yet\n      let subdivided = false;\n\n      if (!children.length) {\n        this.subdivide();\n        subdivided = true;\n      } // add to whichever node will accept it\n\n\n      for (let i = 0; i !== 8; i++) {\n        if (children[i].insert(aabb, elementData, level + 1)) {\n          return true;\n        }\n      }\n\n      if (subdivided) {\n        // No children accepted! Might as well just remove em since they contain none\n        children.length = 0;\n      }\n    } // Too deep, or children didnt want it. add it in current node\n\n\n    nodeData.push(elementData);\n    return true;\n  }\n  /**\n   * Create 8 equally sized children nodes and put them in the `children` array.\n   */\n\n\n  subdivide() {\n    const aabb = this.aabb;\n    const l = aabb.lowerBound;\n    const u = aabb.upperBound;\n    const children = this.children;\n    children.push(new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 0, 0)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 0, 0)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 1, 0)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 1, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 1, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 0, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 0, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 1, 0)\n      })\n    }));\n    u.vsub(l, halfDiagonal);\n    halfDiagonal.scale(0.5, halfDiagonal);\n    const root = this.root || this;\n\n    for (let i = 0; i !== 8; i++) {\n      const child = children[i]; // Set current node as root\n\n      child.root = root; // Compute bounds\n\n      const lowerBound = child.aabb.lowerBound;\n      lowerBound.x *= halfDiagonal.x;\n      lowerBound.y *= halfDiagonal.y;\n      lowerBound.z *= halfDiagonal.z;\n      lowerBound.vadd(l, lowerBound); // Upper bound is always lower bound + halfDiagonal\n\n      lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\n    }\n  }\n  /**\n   * Get all data, potentially within an AABB\n   * @return The \"result\" object\n   */\n\n\n  aabbQuery(aabb, result) {\n    this.data; // abort if the range does not intersect this node\n    // if (!this.aabb.overlaps(aabb)){\n    //     return result;\n    // }\n    // Add objects at this level\n    // Array.prototype.push.apply(result, nodeData);\n    // Add child data\n    // @todo unwrap recursion into a queue / loop, that's faster in JS\n\n    this.children; // for (let i = 0, N = this.children.length; i !== N; i++) {\n    //     children[i].aabbQuery(aabb, result);\n    // }\n\n    const queue = [this];\n\n    while (queue.length) {\n      const node = queue.pop();\n\n      if (node.aabb.overlaps(aabb)) {\n        Array.prototype.push.apply(result, node.data);\n      }\n\n      Array.prototype.push.apply(queue, node.children);\n    }\n\n    return result;\n  }\n  /**\n   * Get all data, potentially intersected by a ray.\n   * @return The \"result\" object\n   */\n\n\n  rayQuery(ray, treeTransform, result) {\n    // Use aabb query for now.\n\n    /** @todo implement real ray query which needs less lookups */\n    ray.getAABB(tmpAABB);\n    tmpAABB.toLocalFrame(treeTransform, tmpAABB);\n    this.aabbQuery(tmpAABB, result);\n    return result;\n  }\n  /**\n   * removeEmptyNodes\n   */\n\n\n  removeEmptyNodes() {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      this.children[i].removeEmptyNodes();\n\n      if (!this.children[i].children.length && !this.children[i].data.length) {\n        this.children.splice(i, 1);\n      }\n    }\n  }\n\n}\n/**\n * Octree\n */\n\n\nclass Octree extends OctreeNode {\n  /**\n   * Maximum subdivision depth\n   * @default 8\n   */\n\n  /**\n   * @param aabb The total AABB of the tree\n   */\n  constructor(aabb, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    super({\n      root: null,\n      aabb\n    });\n    this.maxDepth = typeof options.maxDepth !== 'undefined' ? options.maxDepth : 8;\n  }\n\n}\nconst halfDiagonal = new Vec3();\nconst tmpAABB = new AABB();\n\n/**\n * Trimesh.\n * @example\n *     // How to make a mesh with a single triangle\n *     const vertices = [\n *         0, 0, 0, // vertex 0\n *         1, 0, 0, // vertex 1\n *         0, 1, 0  // vertex 2\n *     ]\n *     const indices = [\n *         0, 1, 2  // triangle 0\n *     ]\n *     const trimeshShape = new CANNON.Trimesh(vertices, indices)\n */\nclass Trimesh extends Shape {\n  /**\n   * vertices\n   */\n\n  /**\n   * Array of integers, indicating which vertices each triangle consists of. The length of this array is thus 3 times the number of triangles.\n   */\n\n  /**\n   * The normals data.\n   */\n\n  /**\n   * The local AABB of the mesh.\n   */\n\n  /**\n   * References to vertex pairs, making up all unique edges in the trimesh.\n   */\n\n  /**\n   * Local scaling of the mesh. Use .setScale() to set it.\n   */\n\n  /**\n   * The indexed triangles. Use .updateTree() to update it.\n   */\n  constructor(vertices, indices) {\n    super({\n      type: Shape.types.TRIMESH\n    });\n    this.vertices = new Float32Array(vertices);\n    this.indices = new Int16Array(indices);\n    this.normals = new Float32Array(indices.length);\n    this.aabb = new AABB();\n    this.edges = null;\n    this.scale = new Vec3(1, 1, 1);\n    this.tree = new Octree();\n    this.updateEdges();\n    this.updateNormals();\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n    this.updateTree();\n  }\n  /**\n   * updateTree\n   */\n\n\n  updateTree() {\n    const tree = this.tree;\n    tree.reset();\n    tree.aabb.copy(this.aabb);\n    const scale = this.scale; // The local mesh AABB is scaled, but the octree AABB should be unscaled\n\n    tree.aabb.lowerBound.x *= 1 / scale.x;\n    tree.aabb.lowerBound.y *= 1 / scale.y;\n    tree.aabb.lowerBound.z *= 1 / scale.z;\n    tree.aabb.upperBound.x *= 1 / scale.x;\n    tree.aabb.upperBound.y *= 1 / scale.y;\n    tree.aabb.upperBound.z *= 1 / scale.z; // Insert all triangles\n\n    const triangleAABB = new AABB();\n    const a = new Vec3();\n    const b = new Vec3();\n    const c = new Vec3();\n    const points = [a, b, c];\n\n    for (let i = 0; i < this.indices.length / 3; i++) {\n      //this.getTriangleVertices(i, a, b, c);\n      // Get unscaled triangle verts\n      const i3 = i * 3;\n\n      this._getUnscaledVertex(this.indices[i3], a);\n\n      this._getUnscaledVertex(this.indices[i3 + 1], b);\n\n      this._getUnscaledVertex(this.indices[i3 + 2], c);\n\n      triangleAABB.setFromPoints(points);\n      tree.insert(triangleAABB, i);\n    }\n\n    tree.removeEmptyNodes();\n  }\n  /**\n   * Get triangles in a local AABB from the trimesh.\n   * @param result An array of integers, referencing the queried triangles.\n   */\n\n\n  getTrianglesInAABB(aabb, result) {\n    unscaledAABB.copy(aabb); // Scale it to local\n\n    const scale = this.scale;\n    const isx = scale.x;\n    const isy = scale.y;\n    const isz = scale.z;\n    const l = unscaledAABB.lowerBound;\n    const u = unscaledAABB.upperBound;\n    l.x /= isx;\n    l.y /= isy;\n    l.z /= isz;\n    u.x /= isx;\n    u.y /= isy;\n    u.z /= isz;\n    return this.tree.aabbQuery(unscaledAABB, result);\n  }\n  /**\n   * setScale\n   */\n\n\n  setScale(scale) {\n    const wasUniform = this.scale.x === this.scale.y && this.scale.y === this.scale.z;\n    const isUniform = scale.x === scale.y && scale.y === scale.z;\n\n    if (!(wasUniform && isUniform)) {\n      // Non-uniform scaling. Need to update normals.\n      this.updateNormals();\n    }\n\n    this.scale.copy(scale);\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n  }\n  /**\n   * Compute the normals of the faces. Will save in the `.normals` array.\n   */\n\n\n  updateNormals() {\n    const n = computeNormals_n; // Generate normals\n\n    const normals = this.normals;\n\n    for (let i = 0; i < this.indices.length / 3; i++) {\n      const i3 = i * 3;\n      const a = this.indices[i3];\n      const b = this.indices[i3 + 1];\n      const c = this.indices[i3 + 2];\n      this.getVertex(a, va);\n      this.getVertex(b, vb);\n      this.getVertex(c, vc);\n      Trimesh.computeNormal(vb, va, vc, n);\n      normals[i3] = n.x;\n      normals[i3 + 1] = n.y;\n      normals[i3 + 2] = n.z;\n    }\n  }\n  /**\n   * Update the `.edges` property\n   */\n\n\n  updateEdges() {\n    const edges = {};\n\n    const add = (a, b) => {\n      const key = a < b ? `${a}_${b}` : `${b}_${a}`;\n      edges[key] = true;\n    };\n\n    for (let i = 0; i < this.indices.length / 3; i++) {\n      const i3 = i * 3;\n      const a = this.indices[i3];\n      const b = this.indices[i3 + 1];\n      const c = this.indices[i3 + 2];\n      add(a, b);\n      add(b, c);\n      add(c, a);\n    }\n\n    const keys = Object.keys(edges);\n    this.edges = new Int16Array(keys.length * 2);\n\n    for (let i = 0; i < keys.length; i++) {\n      const indices = keys[i].split('_');\n      this.edges[2 * i] = parseInt(indices[0], 10);\n      this.edges[2 * i + 1] = parseInt(indices[1], 10);\n    }\n  }\n  /**\n   * Get an edge vertex\n   * @param firstOrSecond 0 or 1, depending on which one of the vertices you need.\n   * @param vertexStore Where to store the result\n   */\n\n\n  getEdgeVertex(edgeIndex, firstOrSecond, vertexStore) {\n    const vertexIndex = this.edges[edgeIndex * 2 + (firstOrSecond ? 1 : 0)];\n    this.getVertex(vertexIndex, vertexStore);\n  }\n  /**\n   * Get a vector along an edge.\n   */\n\n\n  getEdgeVector(edgeIndex, vectorStore) {\n    const va = getEdgeVector_va;\n    const vb = getEdgeVector_vb;\n    this.getEdgeVertex(edgeIndex, 0, va);\n    this.getEdgeVertex(edgeIndex, 1, vb);\n    vb.vsub(va, vectorStore);\n  }\n  /**\n   * Get face normal given 3 vertices\n   */\n\n\n  static computeNormal(va, vb, vc, target) {\n    vb.vsub(va, ab);\n    vc.vsub(vb, cb);\n    cb.cross(ab, target);\n\n    if (!target.isZero()) {\n      target.normalize();\n    }\n  }\n  /**\n   * Get vertex i.\n   * @return The \"out\" vector object\n   */\n\n\n  getVertex(i, out) {\n    const scale = this.scale;\n\n    this._getUnscaledVertex(i, out);\n\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    return out;\n  }\n  /**\n   * Get raw vertex i\n   * @return The \"out\" vector object\n   */\n\n\n  _getUnscaledVertex(i, out) {\n    const i3 = i * 3;\n    const vertices = this.vertices;\n    return out.set(vertices[i3], vertices[i3 + 1], vertices[i3 + 2]);\n  }\n  /**\n   * Get a vertex from the trimesh,transformed by the given position and quaternion.\n   * @return The \"out\" vector object\n   */\n\n\n  getWorldVertex(i, pos, quat, out) {\n    this.getVertex(i, out);\n    Transform.pointToWorldFrame(pos, quat, out, out);\n    return out;\n  }\n  /**\n   * Get the three vertices for triangle i.\n   */\n\n\n  getTriangleVertices(i, a, b, c) {\n    const i3 = i * 3;\n    this.getVertex(this.indices[i3], a);\n    this.getVertex(this.indices[i3 + 1], b);\n    this.getVertex(this.indices[i3 + 2], c);\n  }\n  /**\n   * Compute the normal of triangle i.\n   * @return The \"target\" vector object\n   */\n\n\n  getNormal(i, target) {\n    const i3 = i * 3;\n    return target.set(this.normals[i3], this.normals[i3 + 1], this.normals[i3 + 2]);\n  }\n  /**\n   * @return The \"target\" vector object\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    this.computeLocalAABB(cli_aabb);\n    const x = cli_aabb.upperBound.x - cli_aabb.lowerBound.x;\n    const y = cli_aabb.upperBound.y - cli_aabb.lowerBound.y;\n    const z = cli_aabb.upperBound.z - cli_aabb.lowerBound.z;\n    return target.set(1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * z * 2 * z), 1.0 / 12.0 * mass * (2 * x * 2 * x + 2 * z * 2 * z), 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * x * 2 * x));\n  }\n  /**\n   * Compute the local AABB for the trimesh\n   */\n\n\n  computeLocalAABB(aabb) {\n    const l = aabb.lowerBound;\n    const u = aabb.upperBound;\n    const n = this.vertices.length;\n    this.vertices;\n    const v = computeLocalAABB_worldVert;\n    this.getVertex(0, v);\n    l.copy(v);\n    u.copy(v);\n\n    for (let i = 0; i !== n; i++) {\n      this.getVertex(i, v);\n\n      if (v.x < l.x) {\n        l.x = v.x;\n      } else if (v.x > u.x) {\n        u.x = v.x;\n      }\n\n      if (v.y < l.y) {\n        l.y = v.y;\n      } else if (v.y > u.y) {\n        u.y = v.y;\n      }\n\n      if (v.z < l.z) {\n        l.z = v.z;\n      } else if (v.z > u.z) {\n        u.z = v.z;\n      }\n    }\n  }\n  /**\n   * Update the `.aabb` property\n   */\n\n\n  updateAABB() {\n    this.computeLocalAABB(this.aabb);\n  }\n  /**\n   * Will update the `.boundingSphereRadius` property\n   */\n\n\n  updateBoundingSphereRadius() {\n    // Assume points are distributed with local (0,0,0) as center\n    let max2 = 0;\n    const vertices = this.vertices;\n    const v = new Vec3();\n\n    for (let i = 0, N = vertices.length / 3; i !== N; i++) {\n      this.getVertex(i, v);\n      const norm2 = v.lengthSquared();\n\n      if (norm2 > max2) {\n        max2 = norm2;\n      }\n    }\n\n    this.boundingSphereRadius = Math.sqrt(max2);\n  }\n  /**\n   * calculateWorldAABB\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    /*\n        const n = this.vertices.length / 3,\n            verts = this.vertices;\n        const minx,miny,minz,maxx,maxy,maxz;\n         const v = tempWorldVertex;\n        for(let i=0; i<n; i++){\n            this.getVertex(i, v);\n            quat.vmult(v, v);\n            pos.vadd(v, v);\n            if (v.x < minx || minx===undefined){\n                minx = v.x;\n            } else if(v.x > maxx || maxx===undefined){\n                maxx = v.x;\n            }\n             if (v.y < miny || miny===undefined){\n                miny = v.y;\n            } else if(v.y > maxy || maxy===undefined){\n                maxy = v.y;\n            }\n             if (v.z < minz || minz===undefined){\n                minz = v.z;\n            } else if(v.z > maxz || maxz===undefined){\n                maxz = v.z;\n            }\n        }\n        min.set(minx,miny,minz);\n        max.set(maxx,maxy,maxz);\n        */\n    // Faster approximation using local AABB\n    const frame = calculateWorldAABB_frame;\n    const result = calculateWorldAABB_aabb;\n    frame.position = pos;\n    frame.quaternion = quat;\n    this.aabb.toWorldFrame(frame, result);\n    min.copy(result.lowerBound);\n    max.copy(result.upperBound);\n  }\n  /**\n   * Get approximate volume\n   */\n\n\n  volume() {\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n  }\n  /**\n   * Create a Trimesh instance, shaped as a torus.\n   */\n\n\n  static createTorus(radius, tube, radialSegments, tubularSegments, arc) {\n    if (radius === void 0) {\n      radius = 1;\n    }\n\n    if (tube === void 0) {\n      tube = 0.5;\n    }\n\n    if (radialSegments === void 0) {\n      radialSegments = 8;\n    }\n\n    if (tubularSegments === void 0) {\n      tubularSegments = 6;\n    }\n\n    if (arc === void 0) {\n      arc = Math.PI * 2;\n    }\n\n    const vertices = [];\n    const indices = [];\n\n    for (let j = 0; j <= radialSegments; j++) {\n      for (let i = 0; i <= tubularSegments; i++) {\n        const u = i / tubularSegments * arc;\n        const v = j / radialSegments * Math.PI * 2;\n        const x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        const y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        const z = tube * Math.sin(v);\n        vertices.push(x, y, z);\n      }\n    }\n\n    for (let j = 1; j <= radialSegments; j++) {\n      for (let i = 1; i <= tubularSegments; i++) {\n        const a = (tubularSegments + 1) * j + i - 1;\n        const b = (tubularSegments + 1) * (j - 1) + i - 1;\n        const c = (tubularSegments + 1) * (j - 1) + i;\n        const d = (tubularSegments + 1) * j + i;\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    return new Trimesh(vertices, indices);\n  }\n\n}\nconst computeNormals_n = new Vec3();\nconst unscaledAABB = new AABB();\nconst getEdgeVector_va = new Vec3();\nconst getEdgeVector_vb = new Vec3();\nconst cb = new Vec3();\nconst ab = new Vec3();\nconst va = new Vec3();\nconst vb = new Vec3();\nconst vc = new Vec3();\nconst cli_aabb = new AABB();\nconst computeLocalAABB_worldVert = new Vec3();\nconst calculateWorldAABB_frame = new Transform();\nconst calculateWorldAABB_aabb = new AABB();\n\n/**\n * Constraint equation solver base class.\n */\nclass Solver {\n  /**\n   * All equations to be solved\n   */\n\n  /**\n   * @todo remove useless constructor\n   */\n  constructor() {\n    this.equations = [];\n  }\n  /**\n   * Should be implemented in subclasses!\n   * @todo use abstract\n   * @return number of iterations performed\n   */\n\n\n  solve(dt, world) {\n    return (// Should return the number of iterations done!\n      0\n    );\n  }\n  /**\n   * Add an equation\n   */\n\n\n  addEquation(eq) {\n    if (eq.enabled && !eq.bi.isTrigger && !eq.bj.isTrigger) {\n      this.equations.push(eq);\n    }\n  }\n  /**\n   * Remove an equation\n   */\n\n\n  removeEquation(eq) {\n    const eqs = this.equations;\n    const i = eqs.indexOf(eq);\n\n    if (i !== -1) {\n      eqs.splice(i, 1);\n    }\n  }\n  /**\n   * Add all equations\n   */\n\n\n  removeAllEquations() {\n    this.equations.length = 0;\n  }\n\n}\n\n/**\n * Constraint equation Gauss-Seidel solver.\n * @todo The spook parameters should be specified for each constraint, not globally.\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\n */\nclass GSSolver extends Solver {\n  /**\n   * The number of solver iterations determines quality of the constraints in the world.\n   * The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n   */\n\n  /**\n   * When tolerance is reached, the system is assumed to be converged.\n   */\n\n  /**\n   * @todo remove useless constructor\n   */\n  constructor() {\n    super();\n    this.iterations = 10;\n    this.tolerance = 1e-7;\n  }\n  /**\n   * Solve\n   * @return number of iterations performed\n   */\n\n\n  solve(dt, world) {\n    let iter = 0;\n    const maxIter = this.iterations;\n    const tolSquared = this.tolerance * this.tolerance;\n    const equations = this.equations;\n    const Neq = equations.length;\n    const bodies = world.bodies;\n    const Nbodies = bodies.length;\n    const h = dt;\n    let B;\n    let invC;\n    let deltalambda;\n    let deltalambdaTot;\n    let GWlambda;\n    let lambdaj; // Update solve mass\n\n    if (Neq !== 0) {\n      for (let i = 0; i !== Nbodies; i++) {\n        bodies[i].updateSolveMassProperties();\n      }\n    } // Things that do not change during iteration can be computed once\n\n\n    const invCs = GSSolver_solve_invCs;\n    const Bs = GSSolver_solve_Bs;\n    const lambda = GSSolver_solve_lambda;\n    invCs.length = Neq;\n    Bs.length = Neq;\n    lambda.length = Neq;\n\n    for (let i = 0; i !== Neq; i++) {\n      const c = equations[i];\n      lambda[i] = 0.0;\n      Bs[i] = c.computeB(h);\n      invCs[i] = 1.0 / c.computeC();\n    }\n\n    if (Neq !== 0) {\n      // Reset vlambda\n      for (let i = 0; i !== Nbodies; i++) {\n        const b = bodies[i];\n        const vlambda = b.vlambda;\n        const wlambda = b.wlambda;\n        vlambda.set(0, 0, 0);\n        wlambda.set(0, 0, 0);\n      } // Iterate over equations\n\n\n      for (iter = 0; iter !== maxIter; iter++) {\n        // Accumulate the total error for each iteration.\n        deltalambdaTot = 0.0;\n\n        for (let j = 0; j !== Neq; j++) {\n          const c = equations[j]; // Compute iteration\n\n          B = Bs[j];\n          invC = invCs[j];\n          lambdaj = lambda[j];\n          GWlambda = c.computeGWlambda();\n          deltalambda = invC * (B - GWlambda - c.eps * lambdaj); // Clamp if we are not within the min/max interval\n\n          if (lambdaj + deltalambda < c.minForce) {\n            deltalambda = c.minForce - lambdaj;\n          } else if (lambdaj + deltalambda > c.maxForce) {\n            deltalambda = c.maxForce - lambdaj;\n          }\n\n          lambda[j] += deltalambda;\n          deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\n\n          c.addToWlambda(deltalambda);\n        } // If the total error is small enough - stop iterate\n\n\n        if (deltalambdaTot * deltalambdaTot < tolSquared) {\n          break;\n        }\n      } // Add result to velocity\n\n\n      for (let i = 0; i !== Nbodies; i++) {\n        const b = bodies[i];\n        const v = b.velocity;\n        const w = b.angularVelocity;\n        b.vlambda.vmul(b.linearFactor, b.vlambda);\n        v.vadd(b.vlambda, v);\n        b.wlambda.vmul(b.angularFactor, b.wlambda);\n        w.vadd(b.wlambda, w);\n      } // Set the `.multiplier` property of each equation\n\n\n      let l = equations.length;\n      const invDt = 1 / h;\n\n      while (l--) {\n        equations[l].multiplier = lambda[l] * invDt;\n      }\n    }\n\n    return iter;\n  }\n\n} // Just temporary number holders that we want to reuse each iteration.\n\nconst GSSolver_solve_lambda = [];\nconst GSSolver_solve_invCs = [];\nconst GSSolver_solve_Bs = [];\n\n/**\n * Splits the equations into islands and solves them independently. Can improve performance.\n */\nclass SplitSolver extends Solver {\n  /**\n   * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n   */\n\n  /**\n   * When tolerance is reached, the system is assumed to be converged.\n   */\n\n  /** subsolver */\n  constructor(subsolver) {\n    super();\n    this.iterations = 10;\n    this.tolerance = 1e-7;\n    this.subsolver = subsolver;\n    this.nodes = [];\n    this.nodePool = []; // Create needed nodes, reuse if possible\n\n    while (this.nodePool.length < 128) {\n      this.nodePool.push(this.createNode());\n    }\n  }\n  /**\n   * createNode\n   */\n\n\n  createNode() {\n    return {\n      body: null,\n      children: [],\n      eqs: [],\n      visited: false\n    };\n  }\n  /**\n   * Solve the subsystems\n   * @return number of iterations performed\n   */\n\n\n  solve(dt, world) {\n    const nodes = SplitSolver_solve_nodes;\n    const nodePool = this.nodePool;\n    const bodies = world.bodies;\n    const equations = this.equations;\n    const Neq = equations.length;\n    const Nbodies = bodies.length;\n    const subsolver = this.subsolver; // Create needed nodes, reuse if possible\n\n    while (nodePool.length < Nbodies) {\n      nodePool.push(this.createNode());\n    }\n\n    nodes.length = Nbodies;\n\n    for (let i = 0; i < Nbodies; i++) {\n      nodes[i] = nodePool[i];\n    } // Reset node values\n\n\n    for (let i = 0; i !== Nbodies; i++) {\n      const node = nodes[i];\n      node.body = bodies[i];\n      node.children.length = 0;\n      node.eqs.length = 0;\n      node.visited = false;\n    }\n\n    for (let k = 0; k !== Neq; k++) {\n      const eq = equations[k];\n      const i = bodies.indexOf(eq.bi);\n      const j = bodies.indexOf(eq.bj);\n      const ni = nodes[i];\n      const nj = nodes[j];\n      ni.children.push(nj);\n      ni.eqs.push(eq);\n      nj.children.push(ni);\n      nj.eqs.push(eq);\n    }\n\n    let child;\n    let n = 0;\n    let eqs = SplitSolver_solve_eqs;\n    subsolver.tolerance = this.tolerance;\n    subsolver.iterations = this.iterations;\n    const dummyWorld = SplitSolver_solve_dummyWorld;\n\n    while (child = getUnvisitedNode(nodes)) {\n      eqs.length = 0;\n      dummyWorld.bodies.length = 0;\n      bfs(child, visitFunc, dummyWorld.bodies, eqs);\n      const Neqs = eqs.length;\n      eqs = eqs.sort(sortById);\n\n      for (let i = 0; i !== Neqs; i++) {\n        subsolver.addEquation(eqs[i]);\n      }\n\n      subsolver.solve(dt, dummyWorld);\n      subsolver.removeAllEquations();\n      n++;\n    }\n\n    return n;\n  }\n\n} // Returns the number of subsystems\n\nconst SplitSolver_solve_nodes = []; // All allocated node objects\n\nconst SplitSolver_solve_eqs = []; // Temp array\n\nconst SplitSolver_solve_dummyWorld = {\n  bodies: []\n}; // Temp object\n\nconst STATIC = Body.STATIC;\n\nfunction getUnvisitedNode(nodes) {\n  const Nnodes = nodes.length;\n\n  for (let i = 0; i !== Nnodes; i++) {\n    const node = nodes[i];\n\n    if (!node.visited && !(node.body.type & STATIC)) {\n      return node;\n    }\n  }\n\n  return false;\n}\n\nconst queue = [];\n\nfunction bfs(root, visitFunc, bds, eqs) {\n  queue.push(root);\n  root.visited = true;\n  visitFunc(root, bds, eqs);\n\n  while (queue.length) {\n    const node = queue.pop(); // Loop over unvisited child nodes\n\n    let child;\n\n    while (child = getUnvisitedNode(node.children)) {\n      child.visited = true;\n      visitFunc(child, bds, eqs);\n      queue.push(child);\n    }\n  }\n}\n\nfunction visitFunc(node, bds, eqs) {\n  bds.push(node.body);\n  const Neqs = node.eqs.length;\n\n  for (let i = 0; i !== Neqs; i++) {\n    const eq = node.eqs[i];\n\n    if (!eqs.includes(eq)) {\n      eqs.push(eq);\n    }\n  }\n}\n\nfunction sortById(a, b) {\n  return b.id - a.id;\n}\n\n/**\n * For pooling objects that can be reused.\n */\nclass Pool {\n  constructor() {\n    this.objects = [];\n    this.type = Object;\n  }\n\n  /**\n   * Release an object after use\n   */\n  release() {\n    const Nargs = arguments.length;\n\n    for (let i = 0; i !== Nargs; i++) {\n      this.objects.push(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    }\n\n    return this;\n  }\n  /**\n   * Get an object\n   */\n\n\n  get() {\n    if (this.objects.length === 0) {\n      return this.constructObject();\n    } else {\n      return this.objects.pop();\n    }\n  }\n  /**\n   * Construct an object. Should be implemented in each subclass.\n   */\n\n\n  constructObject() {\n    throw new Error('constructObject() not implemented in this Pool subclass yet!');\n  }\n  /**\n   * @return Self, for chaining\n   */\n\n\n  resize(size) {\n    const objects = this.objects;\n\n    while (objects.length > size) {\n      objects.pop();\n    }\n\n    while (objects.length < size) {\n      objects.push(this.constructObject());\n    }\n\n    return this;\n  }\n\n}\n\n/**\n * Vec3Pool\n */\n\nclass Vec3Pool extends Pool {\n  constructor() {\n    super(...arguments);\n    this.type = Vec3;\n  }\n\n  /**\n   * Construct a vector\n   */\n  constructObject() {\n    return new Vec3();\n  }\n\n}\n\n// Naming rule: based of the order in SHAPE_TYPES,\n// the first part of the method is formed by the\n// shape type that comes before, in the second part\n// there is the shape type that comes after in the SHAPE_TYPES list\nconst COLLISION_TYPES = {\n  sphereSphere: Shape.types.SPHERE,\n  spherePlane: Shape.types.SPHERE | Shape.types.PLANE,\n  boxBox: Shape.types.BOX | Shape.types.BOX,\n  sphereBox: Shape.types.SPHERE | Shape.types.BOX,\n  planeBox: Shape.types.PLANE | Shape.types.BOX,\n  convexConvex: Shape.types.CONVEXPOLYHEDRON,\n  sphereConvex: Shape.types.SPHERE | Shape.types.CONVEXPOLYHEDRON,\n  planeConvex: Shape.types.PLANE | Shape.types.CONVEXPOLYHEDRON,\n  boxConvex: Shape.types.BOX | Shape.types.CONVEXPOLYHEDRON,\n  sphereHeightfield: Shape.types.SPHERE | Shape.types.HEIGHTFIELD,\n  boxHeightfield: Shape.types.BOX | Shape.types.HEIGHTFIELD,\n  convexHeightfield: Shape.types.CONVEXPOLYHEDRON | Shape.types.HEIGHTFIELD,\n  sphereParticle: Shape.types.PARTICLE | Shape.types.SPHERE,\n  planeParticle: Shape.types.PLANE | Shape.types.PARTICLE,\n  boxParticle: Shape.types.BOX | Shape.types.PARTICLE,\n  convexParticle: Shape.types.PARTICLE | Shape.types.CONVEXPOLYHEDRON,\n  cylinderCylinder: Shape.types.CYLINDER,\n  sphereCylinder: Shape.types.SPHERE | Shape.types.CYLINDER,\n  planeCylinder: Shape.types.PLANE | Shape.types.CYLINDER,\n  boxCylinder: Shape.types.BOX | Shape.types.CYLINDER,\n  convexCylinder: Shape.types.CONVEXPOLYHEDRON | Shape.types.CYLINDER,\n  heightfieldCylinder: Shape.types.HEIGHTFIELD | Shape.types.CYLINDER,\n  particleCylinder: Shape.types.PARTICLE | Shape.types.CYLINDER,\n  sphereTrimesh: Shape.types.SPHERE | Shape.types.TRIMESH,\n  planeTrimesh: Shape.types.PLANE | Shape.types.TRIMESH\n};\n\n/**\n * Helper class for the World. Generates ContactEquations.\n * @todo Sphere-ConvexPolyhedron contacts\n * @todo Contact reduction\n * @todo should move methods to prototype\n */\nclass Narrowphase {\n  /**\n   * Internal storage of pooled contact points.\n   */\n\n  /**\n   * Pooled vectors.\n   */\n  get [COLLISION_TYPES.sphereSphere]() {\n    return this.sphereSphere;\n  }\n\n  get [COLLISION_TYPES.spherePlane]() {\n    return this.spherePlane;\n  }\n\n  get [COLLISION_TYPES.boxBox]() {\n    return this.boxBox;\n  }\n\n  get [COLLISION_TYPES.sphereBox]() {\n    return this.sphereBox;\n  }\n\n  get [COLLISION_TYPES.planeBox]() {\n    return this.planeBox;\n  }\n\n  get [COLLISION_TYPES.convexConvex]() {\n    return this.convexConvex;\n  }\n\n  get [COLLISION_TYPES.sphereConvex]() {\n    return this.sphereConvex;\n  }\n\n  get [COLLISION_TYPES.planeConvex]() {\n    return this.planeConvex;\n  }\n\n  get [COLLISION_TYPES.boxConvex]() {\n    return this.boxConvex;\n  }\n\n  get [COLLISION_TYPES.sphereHeightfield]() {\n    return this.sphereHeightfield;\n  }\n\n  get [COLLISION_TYPES.boxHeightfield]() {\n    return this.boxHeightfield;\n  }\n\n  get [COLLISION_TYPES.convexHeightfield]() {\n    return this.convexHeightfield;\n  }\n\n  get [COLLISION_TYPES.sphereParticle]() {\n    return this.sphereParticle;\n  }\n\n  get [COLLISION_TYPES.planeParticle]() {\n    return this.planeParticle;\n  }\n\n  get [COLLISION_TYPES.boxParticle]() {\n    return this.boxParticle;\n  }\n\n  get [COLLISION_TYPES.convexParticle]() {\n    return this.convexParticle;\n  }\n\n  get [COLLISION_TYPES.cylinderCylinder]() {\n    return this.convexConvex;\n  }\n\n  get [COLLISION_TYPES.sphereCylinder]() {\n    return this.sphereConvex;\n  }\n\n  get [COLLISION_TYPES.planeCylinder]() {\n    return this.planeConvex;\n  }\n\n  get [COLLISION_TYPES.boxCylinder]() {\n    return this.boxConvex;\n  }\n\n  get [COLLISION_TYPES.convexCylinder]() {\n    return this.convexConvex;\n  }\n\n  get [COLLISION_TYPES.heightfieldCylinder]() {\n    return this.heightfieldCylinder;\n  }\n\n  get [COLLISION_TYPES.particleCylinder]() {\n    return this.particleCylinder;\n  }\n\n  get [COLLISION_TYPES.sphereTrimesh]() {\n    return this.sphereTrimesh;\n  }\n\n  get [COLLISION_TYPES.planeTrimesh]() {\n    return this.planeTrimesh;\n  } // get [COLLISION_TYPES.convexTrimesh]() {\n  //   return this.convexTrimesh\n  // }\n\n\n  constructor(world) {\n    this.contactPointPool = [];\n    this.frictionEquationPool = [];\n    this.result = [];\n    this.frictionResult = [];\n    this.v3pool = new Vec3Pool();\n    this.world = world;\n    this.currentContactMaterial = world.defaultContactMaterial;\n    this.enableFrictionReduction = false;\n  }\n  /**\n   * Make a contact object, by using the internal pool or creating a new one.\n   */\n\n\n  createContactEquation(bi, bj, si, sj, overrideShapeA, overrideShapeB) {\n    let c;\n\n    if (this.contactPointPool.length) {\n      c = this.contactPointPool.pop();\n      c.bi = bi;\n      c.bj = bj;\n    } else {\n      c = new ContactEquation(bi, bj);\n    }\n\n    c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n    const cm = this.currentContactMaterial;\n    c.restitution = cm.restitution;\n    c.setSpookParams(cm.contactEquationStiffness, cm.contactEquationRelaxation, this.world.dt);\n    const matA = si.material || bi.material;\n    const matB = sj.material || bj.material;\n\n    if (matA && matB && matA.restitution >= 0 && matB.restitution >= 0) {\n      c.restitution = matA.restitution * matB.restitution;\n    }\n\n    c.si = overrideShapeA || si;\n    c.sj = overrideShapeB || sj;\n    return c;\n  }\n\n  createFrictionEquationsFromContact(contactEquation, outArray) {\n    const bodyA = contactEquation.bi;\n    const bodyB = contactEquation.bj;\n    const shapeA = contactEquation.si;\n    const shapeB = contactEquation.sj;\n    const world = this.world;\n    const cm = this.currentContactMaterial; // If friction or restitution were specified in the material, use them\n\n    let friction = cm.friction;\n    const matA = shapeA.material || bodyA.material;\n    const matB = shapeB.material || bodyB.material;\n\n    if (matA && matB && matA.friction >= 0 && matB.friction >= 0) {\n      friction = matA.friction * matB.friction;\n    }\n\n    if (friction > 0) {\n      // Create 2 tangent equations\n      // Users may provide a force different from global gravity to use when computing contact friction.\n      const mug = friction * (world.frictionGravity || world.gravity).length();\n      let reducedMass = bodyA.invMass + bodyB.invMass;\n\n      if (reducedMass > 0) {\n        reducedMass = 1 / reducedMass;\n      }\n\n      const pool = this.frictionEquationPool;\n      const c1 = pool.length ? pool.pop() : new FrictionEquation(bodyA, bodyB, mug * reducedMass);\n      const c2 = pool.length ? pool.pop() : new FrictionEquation(bodyA, bodyB, mug * reducedMass);\n      c1.bi = c2.bi = bodyA;\n      c1.bj = c2.bj = bodyB;\n      c1.minForce = c2.minForce = -mug * reducedMass;\n      c1.maxForce = c2.maxForce = mug * reducedMass; // Copy over the relative vectors\n\n      c1.ri.copy(contactEquation.ri);\n      c1.rj.copy(contactEquation.rj);\n      c2.ri.copy(contactEquation.ri);\n      c2.rj.copy(contactEquation.rj); // Construct tangents\n\n      contactEquation.ni.tangents(c1.t, c2.t); // Set spook params\n\n      c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n      c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n      c1.enabled = c2.enabled = contactEquation.enabled;\n      outArray.push(c1, c2);\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Take the average N latest contact point on the plane.\n   */\n\n\n  createFrictionFromAverage(numContacts) {\n    // The last contactEquation\n    let c = this.result[this.result.length - 1]; // Create the result: two \"average\" friction equations\n\n    if (!this.createFrictionEquationsFromContact(c, this.frictionResult) || numContacts === 1) {\n      return;\n    }\n\n    const f1 = this.frictionResult[this.frictionResult.length - 2];\n    const f2 = this.frictionResult[this.frictionResult.length - 1];\n    averageNormal.setZero();\n    averageContactPointA.setZero();\n    averageContactPointB.setZero();\n    const bodyA = c.bi;\n    c.bj;\n\n    for (let i = 0; i !== numContacts; i++) {\n      c = this.result[this.result.length - 1 - i];\n\n      if (c.bi !== bodyA) {\n        averageNormal.vadd(c.ni, averageNormal);\n        averageContactPointA.vadd(c.ri, averageContactPointA);\n        averageContactPointB.vadd(c.rj, averageContactPointB);\n      } else {\n        averageNormal.vsub(c.ni, averageNormal);\n        averageContactPointA.vadd(c.rj, averageContactPointA);\n        averageContactPointB.vadd(c.ri, averageContactPointB);\n      }\n    }\n\n    const invNumContacts = 1 / numContacts;\n    averageContactPointA.scale(invNumContacts, f1.ri);\n    averageContactPointB.scale(invNumContacts, f1.rj);\n    f2.ri.copy(f1.ri); // Should be the same\n\n    f2.rj.copy(f1.rj);\n    averageNormal.normalize();\n    averageNormal.tangents(f1.t, f2.t); // return eq;\n  }\n  /**\n   * Generate all contacts between a list of body pairs\n   * @param p1 Array of body indices\n   * @param p2 Array of body indices\n   * @param result Array to store generated contacts\n   * @param oldcontacts Optional. Array of reusable contact objects\n   */\n\n\n  getContacts(p1, p2, world, result, oldcontacts, frictionResult, frictionPool) {\n    // Save old contact objects\n    this.contactPointPool = oldcontacts;\n    this.frictionEquationPool = frictionPool;\n    this.result = result;\n    this.frictionResult = frictionResult;\n    const qi = tmpQuat1;\n    const qj = tmpQuat2;\n    const xi = tmpVec1;\n    const xj = tmpVec2;\n\n    for (let k = 0, N = p1.length; k !== N; k++) {\n      // Get current collision bodies\n      const bi = p1[k];\n      const bj = p2[k]; // Get contact material\n\n      let bodyContactMaterial = null;\n\n      if (bi.material && bj.material) {\n        bodyContactMaterial = world.getContactMaterial(bi.material, bj.material) || null;\n      }\n\n      const justTest = bi.type & Body.KINEMATIC && bj.type & Body.STATIC || bi.type & Body.STATIC && bj.type & Body.KINEMATIC || bi.type & Body.KINEMATIC && bj.type & Body.KINEMATIC;\n\n      for (let i = 0; i < bi.shapes.length; i++) {\n        bi.quaternion.mult(bi.shapeOrientations[i], qi);\n        bi.quaternion.vmult(bi.shapeOffsets[i], xi);\n        xi.vadd(bi.position, xi);\n        const si = bi.shapes[i];\n\n        for (let j = 0; j < bj.shapes.length; j++) {\n          // Compute world transform of shapes\n          bj.quaternion.mult(bj.shapeOrientations[j], qj);\n          bj.quaternion.vmult(bj.shapeOffsets[j], xj);\n          xj.vadd(bj.position, xj);\n          const sj = bj.shapes[j];\n\n          if (!(si.collisionFilterMask & sj.collisionFilterGroup && sj.collisionFilterMask & si.collisionFilterGroup)) {\n            continue;\n          }\n\n          if (xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius) {\n            continue;\n          } // Get collision material\n\n\n          let shapeContactMaterial = null;\n\n          if (si.material && sj.material) {\n            shapeContactMaterial = world.getContactMaterial(si.material, sj.material) || null;\n          }\n\n          this.currentContactMaterial = shapeContactMaterial || bodyContactMaterial || world.defaultContactMaterial; // Get contacts\n\n          const resolverIndex = si.type | sj.type;\n          const resolver = this[resolverIndex];\n\n          if (resolver) {\n            let retval = false; // TO DO: investigate why sphereParticle and convexParticle\n            // resolvers expect si and sj shapes to be in reverse order\n            // (i.e. larger integer value type first instead of smaller first)\n\n            if (si.type < sj.type) {\n              retval = resolver.call(this, si, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n            } else {\n              retval = resolver.call(this, sj, si, xj, xi, qj, qi, bj, bi, si, sj, justTest);\n            }\n\n            if (retval && justTest) {\n              // Register overlap\n              world.shapeOverlapKeeper.set(si.id, sj.id);\n              world.bodyOverlapKeeper.set(bi.id, bj.id);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  sphereSphere(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    if (justTest) {\n      return xi.distanceSquared(xj) < (si.radius + sj.radius) ** 2;\n    } // We will have only one contact in this case\n\n\n    const contactEq = this.createContactEquation(bi, bj, si, sj, rsi, rsj); // Contact normal\n\n    xj.vsub(xi, contactEq.ni);\n    contactEq.ni.normalize(); // Contact point locations\n\n    contactEq.ri.copy(contactEq.ni);\n    contactEq.rj.copy(contactEq.ni);\n    contactEq.ri.scale(si.radius, contactEq.ri);\n    contactEq.rj.scale(-sj.radius, contactEq.rj);\n    contactEq.ri.vadd(xi, contactEq.ri);\n    contactEq.ri.vsub(bi.position, contactEq.ri);\n    contactEq.rj.vadd(xj, contactEq.rj);\n    contactEq.rj.vsub(bj.position, contactEq.rj);\n    this.result.push(contactEq);\n    this.createFrictionEquationsFromContact(contactEq, this.frictionResult);\n  }\n\n  spherePlane(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    // We will have one contact in this case\n    const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj); // Contact normal\n\n    r.ni.set(0, 0, 1);\n    qj.vmult(r.ni, r.ni);\n    r.ni.negate(r.ni); // body i is the sphere, flip normal\n\n    r.ni.normalize(); // Needed?\n    // Vector from sphere center to contact point\n\n    r.ni.scale(si.radius, r.ri); // Project down sphere on plane\n\n    xi.vsub(xj, point_on_plane_to_sphere);\n    r.ni.scale(r.ni.dot(point_on_plane_to_sphere), plane_to_sphere_ortho);\n    point_on_plane_to_sphere.vsub(plane_to_sphere_ortho, r.rj); // The sphere position projected to plane\n\n    if (-point_on_plane_to_sphere.dot(r.ni) <= si.radius) {\n      if (justTest) {\n        return true;\n      } // Make it relative to the body\n\n\n      const ri = r.ri;\n      const rj = r.rj;\n      ri.vadd(xi, ri);\n      ri.vsub(bi.position, ri);\n      rj.vadd(xj, rj);\n      rj.vsub(bj.position, rj);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n  }\n\n  boxBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    return this.convexConvex(si.convexPolyhedronRepresentation, sj.convexPolyhedronRepresentation, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  sphereBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    const v3pool = this.v3pool; // we refer to the box as body j\n\n    const sides = sphereBox_sides;\n    xi.vsub(xj, box_to_sphere);\n    sj.getSideNormals(sides, qj);\n    const R = si.radius;\n\n    let found = false; // Store the resulting side penetration info\n\n    const side_ns = sphereBox_side_ns;\n    const side_ns1 = sphereBox_side_ns1;\n    const side_ns2 = sphereBox_side_ns2;\n    let side_h = null;\n    let side_penetrations = 0;\n    let side_dot1 = 0;\n    let side_dot2 = 0;\n    let side_distance = null;\n\n    for (let idx = 0, nsides = sides.length; idx !== nsides && found === false; idx++) {\n      // Get the plane side normal (ns)\n      const ns = sphereBox_ns;\n      ns.copy(sides[idx]);\n      const h = ns.length();\n      ns.normalize(); // The normal/distance dot product tells which side of the plane we are\n\n      const dot = box_to_sphere.dot(ns);\n\n      if (dot < h + R && dot > 0) {\n        // Intersects plane. Now check the other two dimensions\n        const ns1 = sphereBox_ns1;\n        const ns2 = sphereBox_ns2;\n        ns1.copy(sides[(idx + 1) % 3]);\n        ns2.copy(sides[(idx + 2) % 3]);\n        const h1 = ns1.length();\n        const h2 = ns2.length();\n        ns1.normalize();\n        ns2.normalize();\n        const dot1 = box_to_sphere.dot(ns1);\n        const dot2 = box_to_sphere.dot(ns2);\n\n        if (dot1 < h1 && dot1 > -h1 && dot2 < h2 && dot2 > -h2) {\n          const dist = Math.abs(dot - h - R);\n\n          if (side_distance === null || dist < side_distance) {\n            side_distance = dist;\n            side_dot1 = dot1;\n            side_dot2 = dot2;\n            side_h = h;\n            side_ns.copy(ns);\n            side_ns1.copy(ns1);\n            side_ns2.copy(ns2);\n            side_penetrations++;\n\n            if (justTest) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n\n    if (side_penetrations) {\n      found = true;\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n      side_ns.scale(-R, r.ri); // Sphere r\n\n      r.ni.copy(side_ns);\n      r.ni.negate(r.ni); // Normal should be out of sphere\n\n      side_ns.scale(side_h, side_ns);\n      side_ns1.scale(side_dot1, side_ns1);\n      side_ns.vadd(side_ns1, side_ns);\n      side_ns2.scale(side_dot2, side_ns2);\n      side_ns.vadd(side_ns2, r.rj); // Make relative to bodies\n\n      r.ri.vadd(xi, r.ri);\n      r.ri.vsub(bi.position, r.ri);\n      r.rj.vadd(xj, r.rj);\n      r.rj.vsub(bj.position, r.rj);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    } // Check corners\n\n\n    let rj = v3pool.get();\n    const sphere_to_corner = sphereBox_sphere_to_corner;\n\n    for (let j = 0; j !== 2 && !found; j++) {\n      for (let k = 0; k !== 2 && !found; k++) {\n        for (let l = 0; l !== 2 && !found; l++) {\n          rj.set(0, 0, 0);\n\n          if (j) {\n            rj.vadd(sides[0], rj);\n          } else {\n            rj.vsub(sides[0], rj);\n          }\n\n          if (k) {\n            rj.vadd(sides[1], rj);\n          } else {\n            rj.vsub(sides[1], rj);\n          }\n\n          if (l) {\n            rj.vadd(sides[2], rj);\n          } else {\n            rj.vsub(sides[2], rj);\n          } // World position of corner\n\n\n          xj.vadd(rj, sphere_to_corner);\n          sphere_to_corner.vsub(xi, sphere_to_corner);\n\n          if (sphere_to_corner.lengthSquared() < R * R) {\n            if (justTest) {\n              return true;\n            }\n\n            found = true;\n            const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n            r.ri.copy(sphere_to_corner);\n            r.ri.normalize();\n            r.ni.copy(r.ri);\n            r.ri.scale(R, r.ri);\n            r.rj.copy(rj); // Make relative to bodies\n\n            r.ri.vadd(xi, r.ri);\n            r.ri.vsub(bi.position, r.ri);\n            r.rj.vadd(xj, r.rj);\n            r.rj.vsub(bj.position, r.rj);\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n          }\n        }\n      }\n    }\n\n    v3pool.release(rj);\n    rj = null; // Check edges\n\n    const edgeTangent = v3pool.get();\n    const edgeCenter = v3pool.get();\n    const r = v3pool.get(); // r = edge center to sphere center\n\n    const orthogonal = v3pool.get();\n    const dist = v3pool.get();\n    const Nsides = sides.length;\n\n    for (let j = 0; j !== Nsides && !found; j++) {\n      for (let k = 0; k !== Nsides && !found; k++) {\n        if (j % 3 !== k % 3) {\n          // Get edge tangent\n          sides[k].cross(sides[j], edgeTangent);\n          edgeTangent.normalize();\n          sides[j].vadd(sides[k], edgeCenter);\n          r.copy(xi);\n          r.vsub(edgeCenter, r);\n          r.vsub(xj, r);\n          const orthonorm = r.dot(edgeTangent); // distance from edge center to sphere center in the tangent direction\n\n          edgeTangent.scale(orthonorm, orthogonal); // Vector from edge center to sphere center in the tangent direction\n          // Find the third side orthogonal to this one\n\n          let l = 0;\n\n          while (l === j % 3 || l === k % 3) {\n            l++;\n          } // vec from edge center to sphere projected to the plane orthogonal to the edge tangent\n\n\n          dist.copy(xi);\n          dist.vsub(orthogonal, dist);\n          dist.vsub(edgeCenter, dist);\n          dist.vsub(xj, dist); // Distances in tangent direction and distance in the plane orthogonal to it\n\n          const tdist = Math.abs(orthonorm);\n          const ndist = dist.length();\n\n          if (tdist < sides[l].length() && ndist < R) {\n            if (justTest) {\n              return true;\n            }\n\n            found = true;\n            const res = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n            edgeCenter.vadd(orthogonal, res.rj); // box rj\n\n            res.rj.copy(res.rj);\n            dist.negate(res.ni);\n            res.ni.normalize();\n            res.ri.copy(res.rj);\n            res.ri.vadd(xj, res.ri);\n            res.ri.vsub(xi, res.ri);\n            res.ri.normalize();\n            res.ri.scale(R, res.ri); // Make relative to bodies\n\n            res.ri.vadd(xi, res.ri);\n            res.ri.vsub(bi.position, res.ri);\n            res.rj.vadd(xj, res.rj);\n            res.rj.vsub(bj.position, res.rj);\n            this.result.push(res);\n            this.createFrictionEquationsFromContact(res, this.frictionResult);\n          }\n        }\n      }\n    }\n\n    v3pool.release(edgeTangent, edgeCenter, r, orthogonal, dist);\n  }\n\n  planeBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    sj.convexPolyhedronRepresentation.id = sj.id;\n    return this.planeConvex(si, sj.convexPolyhedronRepresentation, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  convexConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest, faceListA, faceListB) {\n    const sepAxis = convexConvex_sepAxis;\n\n    if (xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius) {\n      return;\n    }\n\n    if (si.findSeparatingAxis(sj, xi, qi, xj, qj, sepAxis, faceListA, faceListB)) {\n      const res = [];\n      const q = convexConvex_q;\n      si.clipAgainstHull(xi, qi, sj, xj, qj, sepAxis, -100, 100, res);\n      let numContacts = 0;\n\n      for (let j = 0; j !== res.length; j++) {\n        if (justTest) {\n          return true;\n        }\n\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n        const ri = r.ri;\n        const rj = r.rj;\n        sepAxis.negate(r.ni);\n        res[j].normal.negate(q);\n        q.scale(res[j].depth, q);\n        res[j].point.vadd(q, ri);\n        rj.copy(res[j].point); // Contact points are in world coordinates. Transform back to relative\n\n        ri.vsub(xi, ri);\n        rj.vsub(xj, rj); // Make relative to bodies\n\n        ri.vadd(xi, ri);\n        ri.vsub(bi.position, ri);\n        rj.vadd(xj, rj);\n        rj.vsub(bj.position, rj);\n        this.result.push(r);\n        numContacts++;\n\n        if (!this.enableFrictionReduction) {\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n      }\n\n      if (this.enableFrictionReduction && numContacts) {\n        this.createFrictionFromAverage(numContacts);\n      }\n    }\n  }\n\n  sphereConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    const v3pool = this.v3pool;\n    xi.vsub(xj, convex_to_sphere);\n    const normals = sj.faceNormals;\n    const faces = sj.faces;\n    const verts = sj.vertices;\n    const R = si.radius;\n    //     return;\n    // }\n\n    let found = false; // Check corners\n\n    for (let i = 0; i !== verts.length; i++) {\n      const v = verts[i]; // World position of corner\n\n      const worldCorner = sphereConvex_worldCorner;\n      qj.vmult(v, worldCorner);\n      xj.vadd(worldCorner, worldCorner);\n      const sphere_to_corner = sphereConvex_sphereToCorner;\n      worldCorner.vsub(xi, sphere_to_corner);\n\n      if (sphere_to_corner.lengthSquared() < R * R) {\n        if (justTest) {\n          return true;\n        }\n\n        found = true;\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n        r.ri.copy(sphere_to_corner);\n        r.ri.normalize();\n        r.ni.copy(r.ri);\n        r.ri.scale(R, r.ri);\n        worldCorner.vsub(xj, r.rj); // Should be relative to the body.\n\n        r.ri.vadd(xi, r.ri);\n        r.ri.vsub(bi.position, r.ri); // Should be relative to the body.\n\n        r.rj.vadd(xj, r.rj);\n        r.rj.vsub(bj.position, r.rj);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n        return;\n      }\n    } // Check side (plane) intersections\n\n\n    for (let i = 0, nfaces = faces.length; i !== nfaces && found === false; i++) {\n      const normal = normals[i];\n      const face = faces[i]; // Get world-transformed normal of the face\n\n      const worldNormal = sphereConvex_worldNormal;\n      qj.vmult(normal, worldNormal); // Get a world vertex from the face\n\n      const worldPoint = sphereConvex_worldPoint;\n      qj.vmult(verts[face[0]], worldPoint);\n      worldPoint.vadd(xj, worldPoint); // Get a point on the sphere, closest to the face normal\n\n      const worldSpherePointClosestToPlane = sphereConvex_worldSpherePointClosestToPlane;\n      worldNormal.scale(-R, worldSpherePointClosestToPlane);\n      xi.vadd(worldSpherePointClosestToPlane, worldSpherePointClosestToPlane); // Vector from a face point to the closest point on the sphere\n\n      const penetrationVec = sphereConvex_penetrationVec;\n      worldSpherePointClosestToPlane.vsub(worldPoint, penetrationVec); // The penetration. Negative value means overlap.\n\n      const penetration = penetrationVec.dot(worldNormal);\n      const worldPointToSphere = sphereConvex_sphereToWorldPoint;\n      xi.vsub(worldPoint, worldPointToSphere);\n\n      if (penetration < 0 && worldPointToSphere.dot(worldNormal) > 0) {\n        // Intersects plane. Now check if the sphere is inside the face polygon\n        const faceVerts = []; // Face vertices, in world coords\n\n        for (let j = 0, Nverts = face.length; j !== Nverts; j++) {\n          const worldVertex = v3pool.get();\n          qj.vmult(verts[face[j]], worldVertex);\n          xj.vadd(worldVertex, worldVertex);\n          faceVerts.push(worldVertex);\n        }\n\n        if (pointInPolygon(faceVerts, worldNormal, xi)) {\n          // Is the sphere center in the face polygon?\n          if (justTest) {\n            return true;\n          }\n\n          found = true;\n          const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n          worldNormal.scale(-R, r.ri); // Contact offset, from sphere center to contact\n\n          worldNormal.negate(r.ni); // Normal pointing out of sphere\n\n          const penetrationVec2 = v3pool.get();\n          worldNormal.scale(-penetration, penetrationVec2);\n          const penetrationSpherePoint = v3pool.get();\n          worldNormal.scale(-R, penetrationSpherePoint); //xi.vsub(xj).vadd(penetrationSpherePoint).vadd(penetrationVec2 , r.rj);\n\n          xi.vsub(xj, r.rj);\n          r.rj.vadd(penetrationSpherePoint, r.rj);\n          r.rj.vadd(penetrationVec2, r.rj); // Should be relative to the body.\n\n          r.rj.vadd(xj, r.rj);\n          r.rj.vsub(bj.position, r.rj); // Should be relative to the body.\n\n          r.ri.vadd(xi, r.ri);\n          r.ri.vsub(bi.position, r.ri);\n          v3pool.release(penetrationVec2);\n          v3pool.release(penetrationSpherePoint);\n          this.result.push(r);\n          this.createFrictionEquationsFromContact(r, this.frictionResult); // Release world vertices\n\n          for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n            v3pool.release(faceVerts[j]);\n          }\n\n          return; // We only expect *one* face contact\n        } else {\n          // Edge?\n          for (let j = 0; j !== face.length; j++) {\n            // Get two world transformed vertices\n            const v1 = v3pool.get();\n            const v2 = v3pool.get();\n            qj.vmult(verts[face[(j + 1) % face.length]], v1);\n            qj.vmult(verts[face[(j + 2) % face.length]], v2);\n            xj.vadd(v1, v1);\n            xj.vadd(v2, v2); // Construct edge vector\n\n            const edge = sphereConvex_edge;\n            v2.vsub(v1, edge); // Construct the same vector, but normalized\n\n            const edgeUnit = sphereConvex_edgeUnit;\n            edge.unit(edgeUnit); // p is xi projected onto the edge\n\n            const p = v3pool.get();\n            const v1_to_xi = v3pool.get();\n            xi.vsub(v1, v1_to_xi);\n            const dot = v1_to_xi.dot(edgeUnit);\n            edgeUnit.scale(dot, p);\n            p.vadd(v1, p); // Compute a vector from p to the center of the sphere\n\n            const xi_to_p = v3pool.get();\n            p.vsub(xi, xi_to_p); // Collision if the edge-sphere distance is less than the radius\n            // AND if p is in between v1 and v2\n\n            if (dot > 0 && dot * dot < edge.lengthSquared() && xi_to_p.lengthSquared() < R * R) {\n              // Collision if the edge-sphere distance is less than the radius\n              // Edge contact!\n              if (justTest) {\n                return true;\n              }\n\n              const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n              p.vsub(xj, r.rj);\n              p.vsub(xi, r.ni);\n              r.ni.normalize();\n              r.ni.scale(R, r.ri); // Should be relative to the body.\n\n              r.rj.vadd(xj, r.rj);\n              r.rj.vsub(bj.position, r.rj); // Should be relative to the body.\n\n              r.ri.vadd(xi, r.ri);\n              r.ri.vsub(bi.position, r.ri);\n              this.result.push(r);\n              this.createFrictionEquationsFromContact(r, this.frictionResult); // Release world vertices\n\n              for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n                v3pool.release(faceVerts[j]);\n              }\n\n              v3pool.release(v1);\n              v3pool.release(v2);\n              v3pool.release(p);\n              v3pool.release(xi_to_p);\n              v3pool.release(v1_to_xi);\n              return;\n            }\n\n            v3pool.release(v1);\n            v3pool.release(v2);\n            v3pool.release(p);\n            v3pool.release(xi_to_p);\n            v3pool.release(v1_to_xi);\n          }\n        } // Release world vertices\n\n\n        for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n          v3pool.release(faceVerts[j]);\n        }\n      }\n    }\n  }\n\n  planeConvex(planeShape, convexShape, planePosition, convexPosition, planeQuat, convexQuat, planeBody, convexBody, si, sj, justTest) {\n    // Simply return the points behind the plane.\n    const worldVertex = planeConvex_v;\n    const worldNormal = planeConvex_normal;\n    worldNormal.set(0, 0, 1);\n    planeQuat.vmult(worldNormal, worldNormal); // Turn normal according to plane orientation\n\n    let numContacts = 0;\n    const relpos = planeConvex_relpos;\n\n    for (let i = 0; i !== convexShape.vertices.length; i++) {\n      // Get world convex vertex\n      worldVertex.copy(convexShape.vertices[i]);\n      convexQuat.vmult(worldVertex, worldVertex);\n      convexPosition.vadd(worldVertex, worldVertex);\n      worldVertex.vsub(planePosition, relpos);\n      const dot = worldNormal.dot(relpos);\n\n      if (dot <= 0.0) {\n        if (justTest) {\n          return true;\n        }\n\n        const r = this.createContactEquation(planeBody, convexBody, planeShape, convexShape, si, sj); // Get vertex position projected on plane\n\n        const projected = planeConvex_projected;\n        worldNormal.scale(worldNormal.dot(relpos), projected);\n        worldVertex.vsub(projected, projected);\n        projected.vsub(planePosition, r.ri); // From plane to vertex projected on plane\n\n        r.ni.copy(worldNormal); // Contact normal is the plane normal out from plane\n        // rj is now just the vector from the convex center to the vertex\n\n        worldVertex.vsub(convexPosition, r.rj); // Make it relative to the body\n\n        r.ri.vadd(planePosition, r.ri);\n        r.ri.vsub(planeBody.position, r.ri);\n        r.rj.vadd(convexPosition, r.rj);\n        r.rj.vsub(convexBody.position, r.rj);\n        this.result.push(r);\n        numContacts++;\n\n        if (!this.enableFrictionReduction) {\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n      }\n    }\n\n    if (this.enableFrictionReduction && numContacts) {\n      this.createFrictionFromAverage(numContacts);\n    }\n  }\n\n  boxConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexConvex(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  sphereHeightfield(sphereShape, hfShape, spherePos, hfPos, sphereQuat, hfQuat, sphereBody, hfBody, rsi, rsj, justTest) {\n    const data = hfShape.data;\n    const radius = sphereShape.radius;\n    const w = hfShape.elementSize;\n    const worldPillarOffset = sphereHeightfield_tmp2; // Get sphere position to heightfield local!\n\n    const localSpherePos = sphereHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, spherePos, localSpherePos); // Get the index of the data points to test against\n\n    let iMinX = Math.floor((localSpherePos.x - radius) / w) - 1;\n    let iMaxX = Math.ceil((localSpherePos.x + radius) / w) + 1;\n    let iMinY = Math.floor((localSpherePos.y - radius) / w) - 1;\n    let iMaxY = Math.ceil((localSpherePos.y + radius) / w) + 1; // Bail out if we are out of the terrain\n\n    if (iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length) {\n      return;\n    } // Clamp index to edges\n\n\n    if (iMinX < 0) {\n      iMinX = 0;\n    }\n\n    if (iMaxX < 0) {\n      iMaxX = 0;\n    }\n\n    if (iMinY < 0) {\n      iMinY = 0;\n    }\n\n    if (iMaxY < 0) {\n      iMaxY = 0;\n    }\n\n    if (iMinX >= data.length) {\n      iMinX = data.length - 1;\n    }\n\n    if (iMaxX >= data.length) {\n      iMaxX = data.length - 1;\n    }\n\n    if (iMaxY >= data[0].length) {\n      iMaxY = data[0].length - 1;\n    }\n\n    if (iMinY >= data[0].length) {\n      iMinY = data[0].length - 1;\n    }\n\n    const minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    const min = minMax[0];\n    const max = minMax[1]; // Bail out if we can't touch the bounding height box\n\n    if (localSpherePos.z - radius > max || localSpherePos.z + radius < min) {\n      return;\n    }\n\n    const result = this.result;\n\n    for (let i = iMinX; i < iMaxX; i++) {\n      for (let j = iMinY; j < iMaxY; j++) {\n        const numContactsBefore = result.length;\n        let intersecting = false; // Lower triangle\n\n        hfShape.getConvexTrianglePillar(i, j, false);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n          intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        } // Upper triangle\n\n\n        hfShape.getConvexTrianglePillar(i, j, true);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n          intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        }\n\n        const numContacts = result.length - numContactsBefore;\n\n        if (numContacts > 2) {\n          return;\n        }\n        /*\n          // Skip all but 1\n          for (let k = 0; k < numContacts - 1; k++) {\n              result.pop();\n          }\n        */\n\n      }\n    }\n  }\n\n  boxHeightfield(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexHeightfield(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  convexHeightfield(convexShape, hfShape, convexPos, hfPos, convexQuat, hfQuat, convexBody, hfBody, rsi, rsj, justTest) {\n    const data = hfShape.data;\n    const w = hfShape.elementSize;\n    const radius = convexShape.boundingSphereRadius;\n    const worldPillarOffset = convexHeightfield_tmp2;\n    const faceList = convexHeightfield_faceList; // Get sphere position to heightfield local!\n\n    const localConvexPos = convexHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, convexPos, localConvexPos); // Get the index of the data points to test against\n\n    let iMinX = Math.floor((localConvexPos.x - radius) / w) - 1;\n    let iMaxX = Math.ceil((localConvexPos.x + radius) / w) + 1;\n    let iMinY = Math.floor((localConvexPos.y - radius) / w) - 1;\n    let iMaxY = Math.ceil((localConvexPos.y + radius) / w) + 1; // Bail out if we are out of the terrain\n\n    if (iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length) {\n      return;\n    } // Clamp index to edges\n\n\n    if (iMinX < 0) {\n      iMinX = 0;\n    }\n\n    if (iMaxX < 0) {\n      iMaxX = 0;\n    }\n\n    if (iMinY < 0) {\n      iMinY = 0;\n    }\n\n    if (iMaxY < 0) {\n      iMaxY = 0;\n    }\n\n    if (iMinX >= data.length) {\n      iMinX = data.length - 1;\n    }\n\n    if (iMaxX >= data.length) {\n      iMaxX = data.length - 1;\n    }\n\n    if (iMaxY >= data[0].length) {\n      iMaxY = data[0].length - 1;\n    }\n\n    if (iMinY >= data[0].length) {\n      iMinY = data[0].length - 1;\n    }\n\n    const minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    const min = minMax[0];\n    const max = minMax[1]; // Bail out if we're cant touch the bounding height box\n\n    if (localConvexPos.z - radius > max || localConvexPos.z + radius < min) {\n      return;\n    }\n\n    for (let i = iMinX; i < iMaxX; i++) {\n      for (let j = iMinY; j < iMaxY; j++) {\n        let intersecting = false; // Lower triangle\n\n        hfShape.getConvexTrianglePillar(i, j, false);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n          intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        } // Upper triangle\n\n\n        hfShape.getConvexTrianglePillar(i, j, true);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n          intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        }\n      }\n    }\n  }\n\n  sphereParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n    // The normal is the unit vector from sphere center to particle center\n    const normal = particleSphere_normal;\n    normal.set(0, 0, 1);\n    xi.vsub(xj, normal);\n    const lengthSquared = normal.lengthSquared();\n\n    if (lengthSquared <= sj.radius * sj.radius) {\n      if (justTest) {\n        return true;\n      }\n\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n      normal.normalize();\n      r.rj.copy(normal);\n      r.rj.scale(sj.radius, r.rj);\n      r.ni.copy(normal); // Contact normal\n\n      r.ni.negate(r.ni);\n      r.ri.set(0, 0, 0); // Center of particle\n\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n  }\n\n  planeParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n    const normal = particlePlane_normal;\n    normal.set(0, 0, 1);\n    bj.quaternion.vmult(normal, normal); // Turn normal according to plane orientation\n\n    const relpos = particlePlane_relpos;\n    xi.vsub(bj.position, relpos);\n    const dot = normal.dot(relpos);\n\n    if (dot <= 0.0) {\n      if (justTest) {\n        return true;\n      }\n\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n      r.ni.copy(normal); // Contact normal is the plane normal\n\n      r.ni.negate(r.ni);\n      r.ri.set(0, 0, 0); // Center of particle\n      // Get particle position projected on plane\n\n      const projected = particlePlane_projected;\n      normal.scale(normal.dot(xi), projected);\n      xi.vsub(projected, projected); //projected.vadd(bj.position,projected);\n      // rj is now the projected world position minus plane position\n\n      r.rj.copy(projected);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n  }\n\n  boxParticle(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexParticle(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  convexParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n    let penetratedFaceIndex = -1;\n    const penetratedFaceNormal = convexParticle_penetratedFaceNormal;\n    const worldPenetrationVec = convexParticle_worldPenetrationVec;\n    let minPenetration = null;\n\n    const local = convexParticle_local;\n    local.copy(xi);\n    local.vsub(xj, local); // Convert position to relative the convex origin\n\n    qj.conjugate(cqj);\n    cqj.vmult(local, local);\n\n    if (sj.pointIsInside(local)) {\n      if (sj.worldVerticesNeedsUpdate) {\n        sj.computeWorldVertices(xj, qj);\n      }\n\n      if (sj.worldFaceNormalsNeedsUpdate) {\n        sj.computeWorldFaceNormals(qj);\n      } // For each world polygon in the polyhedra\n\n\n      for (let i = 0, nfaces = sj.faces.length; i !== nfaces; i++) {\n        // Construct world face vertices\n        const verts = [sj.worldVertices[sj.faces[i][0]]];\n        const normal = sj.worldFaceNormals[i]; // Check how much the particle penetrates the polygon plane.\n\n        xi.vsub(verts[0], convexParticle_vertexToParticle);\n        const penetration = -normal.dot(convexParticle_vertexToParticle);\n\n        if (minPenetration === null || Math.abs(penetration) < Math.abs(minPenetration)) {\n          if (justTest) {\n            return true;\n          }\n\n          minPenetration = penetration;\n          penetratedFaceIndex = i;\n          penetratedFaceNormal.copy(normal);\n        }\n      }\n\n      if (penetratedFaceIndex !== -1) {\n        // Setup contact\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n        penetratedFaceNormal.scale(minPenetration, worldPenetrationVec); // rj is the particle position projected to the face\n\n        worldPenetrationVec.vadd(xi, worldPenetrationVec);\n        worldPenetrationVec.vsub(xj, worldPenetrationVec);\n        r.rj.copy(worldPenetrationVec); //const projectedToFace = xi.vsub(xj).vadd(worldPenetrationVec);\n        //projectedToFace.copy(r.rj);\n        //qj.vmult(r.rj,r.rj);\n\n        penetratedFaceNormal.negate(r.ni); // Contact normal\n\n        r.ri.set(0, 0, 0); // Center of particle\n\n        const ri = r.ri;\n        const rj = r.rj; // Make relative to bodies\n\n        ri.vadd(xi, ri);\n        ri.vsub(bi.position, ri);\n        rj.vadd(xj, rj);\n        rj.vsub(bj.position, rj);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      } else {\n        console.warn('Point found inside convex, but did not find penetrating face!');\n      }\n    }\n  }\n\n  heightfieldCylinder(hfShape, convexShape, hfPos, convexPos, hfQuat, convexQuat, hfBody, convexBody, rsi, rsj, justTest) {\n    return this.convexHeightfield(convexShape, hfShape, convexPos, hfPos, convexQuat, hfQuat, convexBody, hfBody, rsi, rsj, justTest);\n  }\n\n  particleCylinder(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    return this.convexParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest);\n  }\n\n  sphereTrimesh(sphereShape, trimeshShape, spherePos, trimeshPos, sphereQuat, trimeshQuat, sphereBody, trimeshBody, rsi, rsj, justTest) {\n    const edgeVertexA = sphereTrimesh_edgeVertexA;\n    const edgeVertexB = sphereTrimesh_edgeVertexB;\n    const edgeVector = sphereTrimesh_edgeVector;\n    const edgeVectorUnit = sphereTrimesh_edgeVectorUnit;\n    const localSpherePos = sphereTrimesh_localSpherePos;\n    const tmp = sphereTrimesh_tmp;\n    const localSphereAABB = sphereTrimesh_localSphereAABB;\n    const v2 = sphereTrimesh_v2;\n    const relpos = sphereTrimesh_relpos;\n    const triangles = sphereTrimesh_triangles; // Convert sphere position to local in the trimesh\n\n    Transform.pointToLocalFrame(trimeshPos, trimeshQuat, spherePos, localSpherePos); // Get the aabb of the sphere locally in the trimesh\n\n    const sphereRadius = sphereShape.radius;\n    localSphereAABB.lowerBound.set(localSpherePos.x - sphereRadius, localSpherePos.y - sphereRadius, localSpherePos.z - sphereRadius);\n    localSphereAABB.upperBound.set(localSpherePos.x + sphereRadius, localSpherePos.y + sphereRadius, localSpherePos.z + sphereRadius);\n    trimeshShape.getTrianglesInAABB(localSphereAABB, triangles); //for (let i = 0; i < trimeshShape.indices.length / 3; i++) triangles.push(i); // All\n    // Vertices\n\n    const v = sphereTrimesh_v;\n    const radiusSquared = sphereShape.radius * sphereShape.radius;\n\n    for (let i = 0; i < triangles.length; i++) {\n      for (let j = 0; j < 3; j++) {\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], v); // Check vertex overlap in sphere\n\n        v.vsub(localSpherePos, relpos);\n\n        if (relpos.lengthSquared() <= radiusSquared) {\n          // Safe up\n          v2.copy(v);\n          Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\n          v.vsub(spherePos, relpos);\n\n          if (justTest) {\n            return true;\n          }\n\n          let r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n          r.ni.copy(relpos);\n          r.ni.normalize(); // ri is the vector from sphere center to the sphere surface\n\n          r.ri.copy(r.ni);\n          r.ri.scale(sphereShape.radius, r.ri);\n          r.ri.vadd(spherePos, r.ri);\n          r.ri.vsub(sphereBody.position, r.ri);\n          r.rj.copy(v);\n          r.rj.vsub(trimeshBody.position, r.rj); // Store result\n\n          this.result.push(r);\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n      }\n    } // Check all edges\n\n\n    for (let i = 0; i < triangles.length; i++) {\n      for (let j = 0; j < 3; j++) {\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], edgeVertexA);\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + (j + 1) % 3], edgeVertexB);\n        edgeVertexB.vsub(edgeVertexA, edgeVector); // Project sphere position to the edge\n\n        localSpherePos.vsub(edgeVertexB, tmp);\n        const positionAlongEdgeB = tmp.dot(edgeVector);\n        localSpherePos.vsub(edgeVertexA, tmp);\n        let positionAlongEdgeA = tmp.dot(edgeVector);\n\n        if (positionAlongEdgeA > 0 && positionAlongEdgeB < 0) {\n          // Now check the orthogonal distance from edge to sphere center\n          localSpherePos.vsub(edgeVertexA, tmp);\n          edgeVectorUnit.copy(edgeVector);\n          edgeVectorUnit.normalize();\n          positionAlongEdgeA = tmp.dot(edgeVectorUnit);\n          edgeVectorUnit.scale(positionAlongEdgeA, tmp);\n          tmp.vadd(edgeVertexA, tmp); // tmp is now the sphere center position projected to the edge, defined locally in the trimesh frame\n\n          const dist = tmp.distanceTo(localSpherePos);\n\n          if (dist < sphereShape.radius) {\n            if (justTest) {\n              return true;\n            }\n\n            const r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n            tmp.vsub(localSpherePos, r.ni);\n            r.ni.normalize();\n            r.ni.scale(sphereShape.radius, r.ri);\n            r.ri.vadd(spherePos, r.ri);\n            r.ri.vsub(sphereBody.position, r.ri);\n            Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n            tmp.vsub(trimeshBody.position, r.rj);\n            Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n            Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n          }\n        }\n      }\n    } // Triangle faces\n\n\n    const va = sphereTrimesh_va;\n    const vb = sphereTrimesh_vb;\n    const vc = sphereTrimesh_vc;\n    const normal = sphereTrimesh_normal;\n\n    for (let i = 0, N = triangles.length; i !== N; i++) {\n      trimeshShape.getTriangleVertices(triangles[i], va, vb, vc);\n      trimeshShape.getNormal(triangles[i], normal);\n      localSpherePos.vsub(va, tmp);\n      let dist = tmp.dot(normal);\n      normal.scale(dist, tmp);\n      localSpherePos.vsub(tmp, tmp); // tmp is now the sphere position projected to the triangle plane\n\n      dist = tmp.distanceTo(localSpherePos);\n\n      if (Ray.pointInTriangle(tmp, va, vb, vc) && dist < sphereShape.radius) {\n        if (justTest) {\n          return true;\n        }\n\n        let r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n        tmp.vsub(localSpherePos, r.ni);\n        r.ni.normalize();\n        r.ni.scale(sphereShape.radius, r.ri);\n        r.ri.vadd(spherePos, r.ri);\n        r.ri.vsub(sphereBody.position, r.ri);\n        Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n        tmp.vsub(trimeshBody.position, r.rj);\n        Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n        Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      }\n    }\n\n    triangles.length = 0;\n  }\n\n  planeTrimesh(planeShape, trimeshShape, planePos, trimeshPos, planeQuat, trimeshQuat, planeBody, trimeshBody, rsi, rsj, justTest) {\n    // Make contacts!\n    const v = new Vec3();\n    const normal = planeTrimesh_normal;\n    normal.set(0, 0, 1);\n    planeQuat.vmult(normal, normal); // Turn normal according to plane\n\n    for (let i = 0; i < trimeshShape.vertices.length / 3; i++) {\n      // Get world vertex from trimesh\n      trimeshShape.getVertex(i, v); // Safe up\n\n      const v2 = new Vec3();\n      v2.copy(v);\n      Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v); // Check plane side\n\n      const relpos = planeTrimesh_relpos;\n      v.vsub(planePos, relpos);\n      const dot = normal.dot(relpos);\n\n      if (dot <= 0.0) {\n        if (justTest) {\n          return true;\n        }\n\n        const r = this.createContactEquation(planeBody, trimeshBody, planeShape, trimeshShape, rsi, rsj);\n        r.ni.copy(normal); // Contact normal is the plane normal\n        // Get vertex position projected on plane\n\n        const projected = planeTrimesh_projected;\n        normal.scale(relpos.dot(normal), projected);\n        v.vsub(projected, projected); // ri is the projected world position minus plane position\n\n        r.ri.copy(projected);\n        r.ri.vsub(planeBody.position, r.ri);\n        r.rj.copy(v);\n        r.rj.vsub(trimeshBody.position, r.rj); // Store result\n\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      }\n    }\n  } // convexTrimesh(\n  //   si: ConvexPolyhedron, sj: Trimesh, xi: Vec3, xj: Vec3, qi: Quaternion, qj: Quaternion,\n  //   bi: Body, bj: Body, rsi?: Shape | null, rsj?: Shape | null,\n  //   faceListA?: number[] | null, faceListB?: number[] | null,\n  // ) {\n  //   const sepAxis = convexConvex_sepAxis;\n  //   if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n  //       return;\n  //   }\n  //   // Construct a temp hull for each triangle\n  //   const hullB = new ConvexPolyhedron();\n  //   hullB.faces = [[0,1,2]];\n  //   const va = new Vec3();\n  //   const vb = new Vec3();\n  //   const vc = new Vec3();\n  //   hullB.vertices = [\n  //       va,\n  //       vb,\n  //       vc\n  //   ];\n  //   for (let i = 0; i < sj.indices.length / 3; i++) {\n  //       const triangleNormal = new Vec3();\n  //       sj.getNormal(i, triangleNormal);\n  //       hullB.faceNormals = [triangleNormal];\n  //       sj.getTriangleVertices(i, va, vb, vc);\n  //       let d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n  //       if(!d){\n  //           triangleNormal.scale(-1, triangleNormal);\n  //           d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n  //           if(!d){\n  //               continue;\n  //           }\n  //       }\n  //       const res: ConvexPolyhedronContactPoint[] = [];\n  //       const q = convexConvex_q;\n  //       si.clipAgainstHull(xi,qi,hullB,xj,qj,triangleNormal,-100,100,res);\n  //       for(let j = 0; j !== res.length; j++){\n  //           const r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\n  //               ri = r.ri,\n  //               rj = r.rj;\n  //           r.ni.copy(triangleNormal);\n  //           r.ni.negate(r.ni);\n  //           res[j].normal.negate(q);\n  //           q.mult(res[j].depth, q);\n  //           res[j].point.vadd(q, ri);\n  //           rj.copy(res[j].point);\n  //           // Contact points are in world coordinates. Transform back to relative\n  //           ri.vsub(xi,ri);\n  //           rj.vsub(xj,rj);\n  //           // Make relative to bodies\n  //           ri.vadd(xi, ri);\n  //           ri.vsub(bi.position, ri);\n  //           rj.vadd(xj, rj);\n  //           rj.vsub(bj.position, rj);\n  //           result.push(r);\n  //       }\n  //   }\n  // }\n\n\n}\nconst averageNormal = new Vec3();\nconst averageContactPointA = new Vec3();\nconst averageContactPointB = new Vec3();\nconst tmpVec1 = new Vec3();\nconst tmpVec2 = new Vec3();\nconst tmpQuat1 = new Quaternion();\nconst tmpQuat2 = new Quaternion();\n\nconst planeTrimesh_normal = new Vec3();\nconst planeTrimesh_relpos = new Vec3();\nconst planeTrimesh_projected = new Vec3();\nconst sphereTrimesh_normal = new Vec3();\nconst sphereTrimesh_relpos = new Vec3();\nnew Vec3();\nconst sphereTrimesh_v = new Vec3();\nconst sphereTrimesh_v2 = new Vec3();\nconst sphereTrimesh_edgeVertexA = new Vec3();\nconst sphereTrimesh_edgeVertexB = new Vec3();\nconst sphereTrimesh_edgeVector = new Vec3();\nconst sphereTrimesh_edgeVectorUnit = new Vec3();\nconst sphereTrimesh_localSpherePos = new Vec3();\nconst sphereTrimesh_tmp = new Vec3();\nconst sphereTrimesh_va = new Vec3();\nconst sphereTrimesh_vb = new Vec3();\nconst sphereTrimesh_vc = new Vec3();\nconst sphereTrimesh_localSphereAABB = new AABB();\nconst sphereTrimesh_triangles = [];\nconst point_on_plane_to_sphere = new Vec3();\nconst plane_to_sphere_ortho = new Vec3(); // See http://bulletphysics.com/Bullet/BulletFull/SphereTriangleDetector_8cpp_source.html\n\nconst pointInPolygon_edge = new Vec3();\nconst pointInPolygon_edge_x_normal = new Vec3();\nconst pointInPolygon_vtp = new Vec3();\n\nfunction pointInPolygon(verts, normal, p) {\n  let positiveResult = null;\n  const N = verts.length;\n\n  for (let i = 0; i !== N; i++) {\n    const v = verts[i]; // Get edge to the next vertex\n\n    const edge = pointInPolygon_edge;\n    verts[(i + 1) % N].vsub(v, edge); // Get cross product between polygon normal and the edge\n\n    const edge_x_normal = pointInPolygon_edge_x_normal; //const edge_x_normal = new Vec3();\n\n    edge.cross(normal, edge_x_normal); // Get vector between point and current vertex\n\n    const vertex_to_p = pointInPolygon_vtp;\n    p.vsub(v, vertex_to_p); // This dot product determines which side of the edge the point is\n\n    const r = edge_x_normal.dot(vertex_to_p); // If all such dot products have same sign, we are inside the polygon.\n\n    if (positiveResult === null || r > 0 && positiveResult === true || r <= 0 && positiveResult === false) {\n      if (positiveResult === null) {\n        positiveResult = r > 0;\n      }\n\n      continue;\n    } else {\n      return false; // Encountered some other sign. Exit.\n    }\n  } // If we got here, all dot products were of the same sign.\n\n\n  return true;\n}\n\nconst box_to_sphere = new Vec3();\nconst sphereBox_ns = new Vec3();\nconst sphereBox_ns1 = new Vec3();\nconst sphereBox_ns2 = new Vec3();\nconst sphereBox_sides = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\nconst sphereBox_sphere_to_corner = new Vec3();\nconst sphereBox_side_ns = new Vec3();\nconst sphereBox_side_ns1 = new Vec3();\nconst sphereBox_side_ns2 = new Vec3();\nconst convex_to_sphere = new Vec3();\nconst sphereConvex_edge = new Vec3();\nconst sphereConvex_edgeUnit = new Vec3();\nconst sphereConvex_sphereToCorner = new Vec3();\nconst sphereConvex_worldCorner = new Vec3();\nconst sphereConvex_worldNormal = new Vec3();\nconst sphereConvex_worldPoint = new Vec3();\nconst sphereConvex_worldSpherePointClosestToPlane = new Vec3();\nconst sphereConvex_penetrationVec = new Vec3();\nconst sphereConvex_sphereToWorldPoint = new Vec3();\nnew Vec3();\nnew Vec3();\nconst planeConvex_v = new Vec3();\nconst planeConvex_normal = new Vec3();\nconst planeConvex_relpos = new Vec3();\nconst planeConvex_projected = new Vec3();\nconst convexConvex_sepAxis = new Vec3();\nconst convexConvex_q = new Vec3();\nconst particlePlane_normal = new Vec3();\nconst particlePlane_relpos = new Vec3();\nconst particlePlane_projected = new Vec3();\nconst particleSphere_normal = new Vec3(); // WIP\n\nconst cqj = new Quaternion();\nconst convexParticle_local = new Vec3();\nnew Vec3();\nconst convexParticle_penetratedFaceNormal = new Vec3();\nconst convexParticle_vertexToParticle = new Vec3();\nconst convexParticle_worldPenetrationVec = new Vec3();\nconst convexHeightfield_tmp1 = new Vec3();\nconst convexHeightfield_tmp2 = new Vec3();\nconst convexHeightfield_faceList = [0];\nconst sphereHeightfield_tmp1 = new Vec3();\nconst sphereHeightfield_tmp2 = new Vec3();\n\nclass OverlapKeeper {\n  /**\n   * @todo Remove useless constructor\n   */\n  constructor() {\n    this.current = [];\n    this.previous = [];\n  }\n  /**\n   * getKey\n   */\n\n\n  getKey(i, j) {\n    if (j < i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    return i << 16 | j;\n  }\n  /**\n   * set\n   */\n\n\n  set(i, j) {\n    // Insertion sort. This way the diff will have linear complexity.\n    const key = this.getKey(i, j);\n    const current = this.current;\n    let index = 0;\n\n    while (key > current[index]) {\n      index++;\n    }\n\n    if (key === current[index]) {\n      return; // Pair was already added\n    }\n\n    for (let j = current.length - 1; j >= index; j--) {\n      current[j + 1] = current[j];\n    }\n\n    current[index] = key;\n  }\n  /**\n   * tick\n   */\n\n\n  tick() {\n    const tmp = this.current;\n    this.current = this.previous;\n    this.previous = tmp;\n    this.current.length = 0;\n  }\n  /**\n   * getDiff\n   */\n\n\n  getDiff(additions, removals) {\n    const a = this.current;\n    const b = this.previous;\n    const al = a.length;\n    const bl = b.length;\n    let j = 0;\n\n    for (let i = 0; i < al; i++) {\n      let found = false;\n      const keyA = a[i];\n\n      while (keyA > b[j]) {\n        j++;\n      }\n\n      found = keyA === b[j];\n\n      if (!found) {\n        unpackAndPush(additions, keyA);\n      }\n    }\n\n    j = 0;\n\n    for (let i = 0; i < bl; i++) {\n      let found = false;\n      const keyB = b[i];\n\n      while (keyB > a[j]) {\n        j++;\n      }\n\n      found = a[j] === keyB;\n\n      if (!found) {\n        unpackAndPush(removals, keyB);\n      }\n    }\n  }\n\n}\n\nfunction unpackAndPush(array, key) {\n  array.push((key & 0xffff0000) >> 16, key & 0x0000ffff);\n}\n\nconst getKey = (i, j) => i < j ? `${i}-${j}` : `${j}-${i}`;\n/**\n * TupleDictionary\n */\n\n\nclass TupleDictionary {\n  constructor() {\n    this.data = {\n      keys: []\n    };\n  }\n\n  /** get */\n  get(i, j) {\n    const key = getKey(i, j);\n    return this.data[key];\n  }\n  /** set */\n\n\n  set(i, j, value) {\n    const key = getKey(i, j); // Check if key already exists\n\n    if (!this.get(i, j)) {\n      this.data.keys.push(key);\n    }\n\n    this.data[key] = value;\n  }\n  /** delete */\n\n\n  delete(i, j) {\n    const key = getKey(i, j);\n    const index = this.data.keys.indexOf(key);\n\n    if (index !== -1) {\n      this.data.keys.splice(index, 1);\n    }\n\n    delete this.data[key];\n  }\n  /** reset */\n\n\n  reset() {\n    const data = this.data;\n    const keys = data.keys;\n\n    while (keys.length > 0) {\n      const key = keys.pop();\n      delete data[key];\n    }\n  }\n\n}\n\n/**\n * The physics world\n */\nclass World extends EventTarget {\n  /**\n   * Currently / last used timestep. Is set to -1 if not available. This value is updated before each internal step, which means that it is \"fresh\" inside event callbacks.\n   */\n\n  /**\n   * Makes bodies go to sleep when they've been inactive.\n   * @default false\n   */\n\n  /**\n   * All the current contacts (instances of ContactEquation) in the world.\n   */\n\n  /**\n   * How often to normalize quaternions. Set to 0 for every step, 1 for every second etc.. A larger value increases performance. If bodies tend to explode, set to a smaller value (zero to be sure nothing can go wrong).\n   * @default 0\n   */\n\n  /**\n   * Set to true to use fast quaternion normalization. It is often enough accurate to use.\n   * If bodies tend to explode, set to false.\n   * @default false\n   */\n\n  /**\n   * The wall-clock time since simulation start.\n   */\n\n  /**\n   * Number of timesteps taken since start.\n   */\n\n  /**\n   * Default and last timestep sizes.\n   */\n\n  /**\n   * The gravity of the world.\n   */\n\n  /**\n   * Gravity to use when approximating the friction max force (mu*mass*gravity).\n   * If undefined, global gravity will be used.\n   * Use to enable friction in a World with a null gravity vector (no gravity).\n   */\n\n  /**\n   * The broadphase algorithm to use.\n   * @default NaiveBroadphase\n   */\n\n  /**\n   * All bodies in this world\n   */\n\n  /**\n   * True if any bodies are not sleeping, false if every body is sleeping.\n   */\n\n  /**\n   * The solver algorithm to use.\n   * @default GSSolver\n   */\n\n  /**\n   * collisionMatrix\n   */\n\n  /**\n   * CollisionMatrix from the previous step.\n   */\n\n  /**\n   * All added contactmaterials.\n   */\n\n  /**\n   * Used to look up a ContactMaterial given two instances of Material.\n   */\n\n  /**\n   * The default material of the bodies.\n   */\n\n  /**\n   * This contact material is used if no suitable contactmaterial is found for a contact.\n   */\n\n  /**\n   * Time accumulator for interpolation.\n   * @see https://gafferongames.com/game-physics/fix-your-timestep/\n   */\n\n  /**\n   * Dispatched after a body has been added to the world.\n   */\n\n  /**\n   * Dispatched after a body has been removed from the world.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    super();\n    this.dt = -1;\n    this.allowSleep = !!options.allowSleep;\n    this.contacts = [];\n    this.frictionEquations = [];\n    this.quatNormalizeSkip = options.quatNormalizeSkip !== undefined ? options.quatNormalizeSkip : 0;\n    this.quatNormalizeFast = options.quatNormalizeFast !== undefined ? options.quatNormalizeFast : false;\n    this.time = 0.0;\n    this.stepnumber = 0;\n    this.default_dt = 1 / 60;\n    this.nextId = 0;\n    this.gravity = new Vec3();\n\n    if (options.gravity) {\n      this.gravity.copy(options.gravity);\n    }\n\n    if (options.frictionGravity) {\n      this.frictionGravity = new Vec3();\n      this.frictionGravity.copy(options.frictionGravity);\n    }\n\n    this.broadphase = options.broadphase !== undefined ? options.broadphase : new NaiveBroadphase();\n    this.bodies = [];\n    this.hasActiveBodies = false;\n    this.solver = options.solver !== undefined ? options.solver : new GSSolver();\n    this.constraints = [];\n    this.narrowphase = new Narrowphase(this);\n    this.collisionMatrix = new ArrayCollisionMatrix();\n    this.collisionMatrixPrevious = new ArrayCollisionMatrix();\n    this.bodyOverlapKeeper = new OverlapKeeper();\n    this.shapeOverlapKeeper = new OverlapKeeper();\n    this.contactmaterials = [];\n    this.contactMaterialTable = new TupleDictionary();\n    this.defaultMaterial = new Material('default');\n    this.defaultContactMaterial = new ContactMaterial(this.defaultMaterial, this.defaultMaterial, {\n      friction: 0.3,\n      restitution: 0.0\n    });\n    this.doProfiling = false;\n    this.profile = {\n      solve: 0,\n      makeContactConstraints: 0,\n      broadphase: 0,\n      integrate: 0,\n      narrowphase: 0\n    };\n    this.accumulator = 0;\n    this.subsystems = [];\n    this.addBodyEvent = {\n      type: 'addBody',\n      body: null\n    };\n    this.removeBodyEvent = {\n      type: 'removeBody',\n      body: null\n    };\n    this.idToBodyMap = {};\n    this.broadphase.setWorld(this);\n  }\n  /**\n   * Get the contact material between materials m1 and m2\n   * @return The contact material if it was found.\n   */\n\n\n  getContactMaterial(m1, m2) {\n    return this.contactMaterialTable.get(m1.id, m2.id);\n  }\n  /**\n   * Store old collision state info\n   */\n\n\n  collisionMatrixTick() {\n    const temp = this.collisionMatrixPrevious;\n    this.collisionMatrixPrevious = this.collisionMatrix;\n    this.collisionMatrix = temp;\n    this.collisionMatrix.reset();\n    this.bodyOverlapKeeper.tick();\n    this.shapeOverlapKeeper.tick();\n  }\n  /**\n   * Add a constraint to the simulation.\n   */\n\n\n  addConstraint(c) {\n    this.constraints.push(c);\n  }\n  /**\n   * Removes a constraint\n   */\n\n\n  removeConstraint(c) {\n    const idx = this.constraints.indexOf(c);\n\n    if (idx !== -1) {\n      this.constraints.splice(idx, 1);\n    }\n  }\n  /**\n   * Raycast test\n   * @deprecated Use .raycastAll, .raycastClosest or .raycastAny instead.\n   */\n\n\n  rayTest(from, to, result) {\n    if (result instanceof RaycastResult) {\n      // Do raycastClosest\n      this.raycastClosest(from, to, {\n        skipBackfaces: true\n      }, result);\n    } else {\n      // Do raycastAll\n      this.raycastAll(from, to, {\n        skipBackfaces: true\n      }, result);\n    }\n  }\n  /**\n   * Ray cast against all bodies. The provided callback will be executed for each hit with a RaycastResult as single argument.\n   * @return True if any body was hit.\n   */\n\n\n  raycastAll(from, to, options, callback) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.mode = Ray.ALL;\n    options.from = from;\n    options.to = to;\n    options.callback = callback;\n    return tmpRay.intersectWorld(this, options);\n  }\n  /**\n   * Ray cast, and stop at the first result. Note that the order is random - but the method is fast.\n   * @return True if any body was hit.\n   */\n\n\n  raycastAny(from, to, options, result) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.mode = Ray.ANY;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n  }\n  /**\n   * Ray cast, and return information of the closest hit.\n   * @return True if any body was hit.\n   */\n\n\n  raycastClosest(from, to, options, result) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.mode = Ray.CLOSEST;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n  }\n  /**\n   * Add a rigid body to the simulation.\n   * @todo If the simulation has not yet started, why recrete and copy arrays for each body? Accumulate in dynamic arrays in this case.\n   * @todo Adding an array of bodies should be possible. This would save some loops too\n   */\n\n\n  addBody(body) {\n    if (this.bodies.includes(body)) {\n      return;\n    }\n\n    body.index = this.bodies.length;\n    this.bodies.push(body);\n    body.world = this;\n    body.initPosition.copy(body.position);\n    body.initVelocity.copy(body.velocity);\n    body.timeLastSleepy = this.time;\n\n    if (body instanceof Body) {\n      body.initAngularVelocity.copy(body.angularVelocity);\n      body.initQuaternion.copy(body.quaternion);\n    }\n\n    this.collisionMatrix.setNumObjects(this.bodies.length);\n    this.addBodyEvent.body = body;\n    this.idToBodyMap[body.id] = body;\n    this.dispatchEvent(this.addBodyEvent);\n  }\n  /**\n   * Remove a rigid body from the simulation.\n   */\n\n\n  removeBody(body) {\n    body.world = null;\n    const n = this.bodies.length - 1;\n    const bodies = this.bodies;\n    const idx = bodies.indexOf(body);\n\n    if (idx !== -1) {\n      bodies.splice(idx, 1); // Todo: should use a garbage free method\n      // Recompute index\n\n      for (let i = 0; i !== bodies.length; i++) {\n        bodies[i].index = i;\n      }\n\n      this.collisionMatrix.setNumObjects(n);\n      this.removeBodyEvent.body = body;\n      delete this.idToBodyMap[body.id];\n      this.dispatchEvent(this.removeBodyEvent);\n    }\n  }\n\n  getBodyById(id) {\n    return this.idToBodyMap[id];\n  }\n  /**\n   * @todo Make a faster map\n   */\n\n\n  getShapeById(id) {\n    const bodies = this.bodies;\n\n    for (let i = 0; i < bodies.length; i++) {\n      const shapes = bodies[i].shapes;\n\n      for (let j = 0; j < shapes.length; j++) {\n        const shape = shapes[j];\n\n        if (shape.id === id) {\n          return shape;\n        }\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Adds a contact material to the World\n   */\n\n\n  addContactMaterial(cmat) {\n    // Add contact material\n    this.contactmaterials.push(cmat); // Add current contact material to the material table\n\n    this.contactMaterialTable.set(cmat.materials[0].id, cmat.materials[1].id, cmat);\n  }\n  /**\n   * Removes a contact material from the World.\n   */\n\n\n  removeContactMaterial(cmat) {\n    const idx = this.contactmaterials.indexOf(cmat);\n\n    if (idx === -1) {\n      return;\n    }\n\n    this.contactmaterials.splice(idx, 1);\n    this.contactMaterialTable.delete(cmat.materials[0].id, cmat.materials[1].id);\n  }\n  /**\n   * Step the simulation forward keeping track of last called time\n   * to be able to step the world at a fixed rate, independently of framerate.\n   *\n   * @param dt The fixed time step size to use (default: 1 / 60).\n   * @param maxSubSteps Maximum number of fixed steps to take per function call (default: 10).\n   * @see https://gafferongames.com/post/fix_your_timestep/\n   * @example\n   *     // Run the simulation independently of framerate every 1 / 60 ms\n   *     world.fixedStep()\n   */\n\n\n  fixedStep(dt, maxSubSteps) {\n    if (dt === void 0) {\n      dt = 1 / 60;\n    }\n\n    if (maxSubSteps === void 0) {\n      maxSubSteps = 10;\n    }\n\n    const time = performance.now() / 1000; // seconds\n\n    if (!this.lastCallTime) {\n      this.step(dt, undefined, maxSubSteps);\n    } else {\n      const timeSinceLastCalled = time - this.lastCallTime;\n      this.step(dt, timeSinceLastCalled, maxSubSteps);\n    }\n\n    this.lastCallTime = time;\n  }\n  /**\n   * Step the physics world forward in time.\n   *\n   * There are two modes. The simple mode is fixed timestepping without interpolation. In this case you only use the first argument. The second case uses interpolation. In that you also provide the time since the function was last used, as well as the maximum fixed timesteps to take.\n   *\n   * @param dt The fixed time step size to use.\n   * @param timeSinceLastCalled The time elapsed since the function was last called.\n   * @param maxSubSteps Maximum number of fixed steps to take per function call (default: 10).\n   * @see https://web.archive.org/web/20180426154531/http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World#What_do_the_parameters_to_btDynamicsWorld::stepSimulation_mean.3F\n   * @example\n   *     // fixed timestepping without interpolation\n   *     world.step(1 / 60)\n   */\n\n\n  step(dt, timeSinceLastCalled, maxSubSteps) {\n    if (maxSubSteps === void 0) {\n      maxSubSteps = 10;\n    }\n\n    if (timeSinceLastCalled === undefined) {\n      // Fixed, simple stepping\n      this.internalStep(dt); // Increment time\n\n      this.time += dt;\n    } else {\n      this.accumulator += timeSinceLastCalled;\n      const t0 = performance.now();\n      let substeps = 0;\n\n      while (this.accumulator >= dt && substeps < maxSubSteps) {\n        // Do fixed steps to catch up\n        this.internalStep(dt);\n        this.accumulator -= dt;\n        substeps++;\n\n        if (performance.now() - t0 > dt * 1000) {\n          // The framerate is not interactive anymore.\n          // We are below the target framerate.\n          // Better bail out.\n          break;\n        }\n      } // Remove the excess accumulator, since we may not\n      // have had enough substeps available to catch up\n\n\n      this.accumulator = this.accumulator % dt;\n      const t = this.accumulator / dt;\n\n      for (let j = 0; j !== this.bodies.length; j++) {\n        const b = this.bodies[j];\n        b.previousPosition.lerp(b.position, t, b.interpolatedPosition);\n        b.previousQuaternion.slerp(b.quaternion, t, b.interpolatedQuaternion);\n        b.previousQuaternion.normalize();\n      }\n\n      this.time += timeSinceLastCalled;\n    }\n  }\n\n  internalStep(dt) {\n    this.dt = dt;\n    const contacts = this.contacts;\n    const p1 = World_step_p1;\n    const p2 = World_step_p2;\n    const N = this.bodies.length;\n    const bodies = this.bodies;\n    const solver = this.solver;\n    const gravity = this.gravity;\n    const doProfiling = this.doProfiling;\n    const profile = this.profile;\n    const DYNAMIC = Body.DYNAMIC;\n    let profilingStart = -Infinity;\n    const constraints = this.constraints;\n    const frictionEquationPool = World_step_frictionEquationPool;\n    gravity.length();\n    const gx = gravity.x;\n    const gy = gravity.y;\n    const gz = gravity.z;\n    let i = 0;\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    } // Add gravity to all objects\n\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      if (bi.type === DYNAMIC) {\n        // Only for dynamic bodies\n        const f = bi.force;\n        const m = bi.mass;\n        f.x += m * gx;\n        f.y += m * gy;\n        f.z += m * gz;\n      }\n    } // Update subsystems\n\n\n    for (let i = 0, Nsubsystems = this.subsystems.length; i !== Nsubsystems; i++) {\n      this.subsystems[i].update();\n    } // Collision detection\n\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    }\n\n    p1.length = 0; // Clean up pair arrays from last step\n\n    p2.length = 0;\n    this.broadphase.collisionPairs(this, p1, p2);\n\n    if (doProfiling) {\n      profile.broadphase = performance.now() - profilingStart;\n    } // Remove constrained pairs with collideConnected == false\n\n\n    let Nconstraints = constraints.length;\n\n    for (i = 0; i !== Nconstraints; i++) {\n      const c = constraints[i];\n\n      if (!c.collideConnected) {\n        for (let j = p1.length - 1; j >= 0; j -= 1) {\n          if (c.bodyA === p1[j] && c.bodyB === p2[j] || c.bodyB === p1[j] && c.bodyA === p2[j]) {\n            p1.splice(j, 1);\n            p2.splice(j, 1);\n          }\n        }\n      }\n    }\n\n    this.collisionMatrixTick(); // Generate contacts\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    }\n\n    const oldcontacts = World_step_oldContacts;\n    const NoldContacts = contacts.length;\n\n    for (i = 0; i !== NoldContacts; i++) {\n      oldcontacts.push(contacts[i]);\n    }\n\n    contacts.length = 0; // Transfer FrictionEquation from current list to the pool for reuse\n\n    const NoldFrictionEquations = this.frictionEquations.length;\n\n    for (i = 0; i !== NoldFrictionEquations; i++) {\n      frictionEquationPool.push(this.frictionEquations[i]);\n    }\n\n    this.frictionEquations.length = 0;\n    this.narrowphase.getContacts(p1, p2, this, contacts, oldcontacts, // To be reused\n    this.frictionEquations, frictionEquationPool);\n\n    if (doProfiling) {\n      profile.narrowphase = performance.now() - profilingStart;\n    } // Loop over all collisions\n\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    } // Add all friction eqs\n\n\n    for (i = 0; i < this.frictionEquations.length; i++) {\n      solver.addEquation(this.frictionEquations[i]);\n    }\n\n    const ncontacts = contacts.length;\n\n    for (let k = 0; k !== ncontacts; k++) {\n      // Current contact\n      const c = contacts[k]; // Get current collision indeces\n\n      const bi = c.bi;\n      const bj = c.bj;\n      const si = c.si;\n      const sj = c.sj; // Get collision properties\n\n      let cm;\n\n      if (bi.material && bj.material) {\n        cm = this.getContactMaterial(bi.material, bj.material) || this.defaultContactMaterial;\n      } else {\n        cm = this.defaultContactMaterial;\n      } // c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n\n\n      cm.friction; // c.restitution = cm.restitution;\n      // If friction or restitution were specified in the material, use them\n\n      if (bi.material && bj.material) {\n        if (bi.material.friction >= 0 && bj.material.friction >= 0) {\n          bi.material.friction * bj.material.friction;\n        }\n\n        if (bi.material.restitution >= 0 && bj.material.restitution >= 0) {\n          c.restitution = bi.material.restitution * bj.material.restitution;\n        }\n      } // c.setSpookParams(\n      //           cm.contactEquationStiffness,\n      //           cm.contactEquationRelaxation,\n      //           dt\n      //       );\n\n\n      solver.addEquation(c); // // Add friction constraint equation\n      // if(mu > 0){\n      // \t// Create 2 tangent equations\n      // \tconst mug = mu * gnorm;\n      // \tconst reducedMass = (bi.invMass + bj.invMass);\n      // \tif(reducedMass > 0){\n      // \t\treducedMass = 1/reducedMass;\n      // \t}\n      // \tconst pool = frictionEquationPool;\n      // \tconst c1 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n      // \tconst c2 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n      // \tthis.frictionEquations.push(c1, c2);\n      // \tc1.bi = c2.bi = bi;\n      // \tc1.bj = c2.bj = bj;\n      // \tc1.minForce = c2.minForce = -mug*reducedMass;\n      // \tc1.maxForce = c2.maxForce = mug*reducedMass;\n      // \t// Copy over the relative vectors\n      // \tc1.ri.copy(c.ri);\n      // \tc1.rj.copy(c.rj);\n      // \tc2.ri.copy(c.ri);\n      // \tc2.rj.copy(c.rj);\n      // \t// Construct tangents\n      // \tc.ni.tangents(c1.t, c2.t);\n      //           // Set spook params\n      //           c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n      //           c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n      //           c1.enabled = c2.enabled = c.enabled;\n      // \t// Add equations to solver\n      // \tsolver.addEquation(c1);\n      // \tsolver.addEquation(c2);\n      // }\n\n      if (bi.allowSleep && bi.type === Body.DYNAMIC && bi.sleepState === Body.SLEEPING && bj.sleepState === Body.AWAKE && bj.type !== Body.STATIC) {\n        const speedSquaredB = bj.velocity.lengthSquared() + bj.angularVelocity.lengthSquared();\n        const speedLimitSquaredB = bj.sleepSpeedLimit ** 2;\n\n        if (speedSquaredB >= speedLimitSquaredB * 2) {\n          bi.wakeUpAfterNarrowphase = true;\n        }\n      }\n\n      if (bj.allowSleep && bj.type === Body.DYNAMIC && bj.sleepState === Body.SLEEPING && bi.sleepState === Body.AWAKE && bi.type !== Body.STATIC) {\n        const speedSquaredA = bi.velocity.lengthSquared() + bi.angularVelocity.lengthSquared();\n        const speedLimitSquaredA = bi.sleepSpeedLimit ** 2;\n\n        if (speedSquaredA >= speedLimitSquaredA * 2) {\n          bj.wakeUpAfterNarrowphase = true;\n        }\n      } // Now we know that i and j are in contact. Set collision matrix state\n\n\n      this.collisionMatrix.set(bi, bj, true);\n\n      if (!this.collisionMatrixPrevious.get(bi, bj)) {\n        // First contact!\n        // We reuse the collideEvent object, otherwise we will end up creating new objects for each new contact, even if there's no event listener attached.\n        World_step_collideEvent.body = bj;\n        World_step_collideEvent.contact = c;\n        bi.dispatchEvent(World_step_collideEvent);\n        World_step_collideEvent.body = bi;\n        bj.dispatchEvent(World_step_collideEvent);\n      }\n\n      this.bodyOverlapKeeper.set(bi.id, bj.id);\n      this.shapeOverlapKeeper.set(si.id, sj.id);\n    }\n\n    this.emitContactEvents();\n\n    if (doProfiling) {\n      profile.makeContactConstraints = performance.now() - profilingStart;\n      profilingStart = performance.now();\n    } // Wake up bodies\n\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      if (bi.wakeUpAfterNarrowphase) {\n        bi.wakeUp();\n        bi.wakeUpAfterNarrowphase = false;\n      }\n    } // Add user-added constraints\n\n\n    Nconstraints = constraints.length;\n\n    for (i = 0; i !== Nconstraints; i++) {\n      const c = constraints[i];\n      c.update();\n\n      for (let j = 0, Neq = c.equations.length; j !== Neq; j++) {\n        const eq = c.equations[j];\n        solver.addEquation(eq);\n      }\n    } // Solve the constrained system\n\n\n    solver.solve(dt, this);\n\n    if (doProfiling) {\n      profile.solve = performance.now() - profilingStart;\n    } // Remove all contacts from solver\n\n\n    solver.removeAllEquations(); // Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details\n\n    const pow = Math.pow;\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      if (bi.type & DYNAMIC) {\n        // Only for dynamic bodies\n        const ld = pow(1.0 - bi.linearDamping, dt);\n        const v = bi.velocity;\n        v.scale(ld, v);\n        const av = bi.angularVelocity;\n\n        if (av) {\n          const ad = pow(1.0 - bi.angularDamping, dt);\n          av.scale(ad, av);\n        }\n      }\n    }\n\n    this.dispatchEvent(World_step_preStepEvent); // Leap frog\n    // vnew = v + h*f/m\n    // xnew = x + h*vnew\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    }\n\n    const stepnumber = this.stepnumber;\n    const quatNormalize = stepnumber % (this.quatNormalizeSkip + 1) === 0;\n    const quatNormalizeFast = this.quatNormalizeFast;\n\n    for (i = 0; i !== N; i++) {\n      bodies[i].integrate(dt, quatNormalize, quatNormalizeFast);\n    }\n\n    this.clearForces();\n    this.broadphase.dirty = true;\n\n    if (doProfiling) {\n      profile.integrate = performance.now() - profilingStart;\n    } // Update step number\n\n\n    this.stepnumber += 1;\n    this.dispatchEvent(World_step_postStepEvent); // Sleeping update\n\n    let hasActiveBodies = true;\n\n    if (this.allowSleep) {\n      hasActiveBodies = false;\n\n      for (i = 0; i !== N; i++) {\n        const bi = bodies[i];\n        bi.sleepTick(this.time);\n\n        if (bi.sleepState !== Body.SLEEPING) {\n          hasActiveBodies = true;\n        }\n      }\n    }\n\n    this.hasActiveBodies = hasActiveBodies;\n  }\n\n  emitContactEvents() {\n    const hasBeginContact = this.hasAnyEventListener('beginContact');\n    const hasEndContact = this.hasAnyEventListener('endContact');\n\n    if (hasBeginContact || hasEndContact) {\n      this.bodyOverlapKeeper.getDiff(additions, removals);\n    }\n\n    if (hasBeginContact) {\n      for (let i = 0, l = additions.length; i < l; i += 2) {\n        beginContactEvent.bodyA = this.getBodyById(additions[i]);\n        beginContactEvent.bodyB = this.getBodyById(additions[i + 1]);\n        this.dispatchEvent(beginContactEvent);\n      }\n\n      beginContactEvent.bodyA = beginContactEvent.bodyB = null;\n    }\n\n    if (hasEndContact) {\n      for (let i = 0, l = removals.length; i < l; i += 2) {\n        endContactEvent.bodyA = this.getBodyById(removals[i]);\n        endContactEvent.bodyB = this.getBodyById(removals[i + 1]);\n        this.dispatchEvent(endContactEvent);\n      }\n\n      endContactEvent.bodyA = endContactEvent.bodyB = null;\n    }\n\n    additions.length = removals.length = 0;\n    const hasBeginShapeContact = this.hasAnyEventListener('beginShapeContact');\n    const hasEndShapeContact = this.hasAnyEventListener('endShapeContact');\n\n    if (hasBeginShapeContact || hasEndShapeContact) {\n      this.shapeOverlapKeeper.getDiff(additions, removals);\n    }\n\n    if (hasBeginShapeContact) {\n      for (let i = 0, l = additions.length; i < l; i += 2) {\n        const shapeA = this.getShapeById(additions[i]);\n        const shapeB = this.getShapeById(additions[i + 1]);\n        beginShapeContactEvent.shapeA = shapeA;\n        beginShapeContactEvent.shapeB = shapeB;\n        if (shapeA) beginShapeContactEvent.bodyA = shapeA.body;\n        if (shapeB) beginShapeContactEvent.bodyB = shapeB.body;\n        this.dispatchEvent(beginShapeContactEvent);\n      }\n\n      beginShapeContactEvent.bodyA = beginShapeContactEvent.bodyB = beginShapeContactEvent.shapeA = beginShapeContactEvent.shapeB = null;\n    }\n\n    if (hasEndShapeContact) {\n      for (let i = 0, l = removals.length; i < l; i += 2) {\n        const shapeA = this.getShapeById(removals[i]);\n        const shapeB = this.getShapeById(removals[i + 1]);\n        endShapeContactEvent.shapeA = shapeA;\n        endShapeContactEvent.shapeB = shapeB;\n        if (shapeA) endShapeContactEvent.bodyA = shapeA.body;\n        if (shapeB) endShapeContactEvent.bodyB = shapeB.body;\n        this.dispatchEvent(endShapeContactEvent);\n      }\n\n      endShapeContactEvent.bodyA = endShapeContactEvent.bodyB = endShapeContactEvent.shapeA = endShapeContactEvent.shapeB = null;\n    }\n  }\n  /**\n   * Sets all body forces in the world to zero.\n   */\n\n\n  clearForces() {\n    const bodies = this.bodies;\n    const N = bodies.length;\n\n    for (let i = 0; i !== N; i++) {\n      const b = bodies[i];\n      b.force;\n      b.torque;\n      b.force.set(0, 0, 0);\n      b.torque.set(0, 0, 0);\n    }\n  }\n\n} // Temp stuff\n\nnew AABB();\nconst tmpRay = new Ray(); // performance.now() fallback on Date.now()\n\nconst performance = globalThis.performance || {};\n\nif (!performance.now) {\n  let nowOffset = Date.now();\n\n  if (performance.timing && performance.timing.navigationStart) {\n    nowOffset = performance.timing.navigationStart;\n  }\n\n  performance.now = () => Date.now() - nowOffset;\n}\n\nnew Vec3(); // Dispatched after the world has stepped forward in time.\n// Reusable event objects to save memory.\n\nconst World_step_postStepEvent = {\n  type: 'postStep'\n}; // Dispatched before the world steps forward in time.\n\nconst World_step_preStepEvent = {\n  type: 'preStep'\n};\nconst World_step_collideEvent = {\n  type: Body.COLLIDE_EVENT_NAME,\n  body: null,\n  contact: null\n}; // Pools for unused objects\n\nconst World_step_oldContacts = [];\nconst World_step_frictionEquationPool = []; // Reusable arrays for collision pairs\n\nconst World_step_p1 = [];\nconst World_step_p2 = []; // Stuff for emitContactEvents\n\nconst additions = [];\nconst removals = [];\nconst beginContactEvent = {\n  type: 'beginContact',\n  bodyA: null,\n  bodyB: null\n};\nconst endContactEvent = {\n  type: 'endContact',\n  bodyA: null,\n  bodyB: null\n};\nconst beginShapeContactEvent = {\n  type: 'beginShapeContact',\n  bodyA: null,\n  bodyB: null,\n  shapeA: null,\n  shapeB: null\n};\nconst endShapeContactEvent = {\n  type: 'endShapeContact',\n  bodyA: null,\n  bodyB: null,\n  shapeA: null,\n  shapeB: null\n};\n\nexport { AABB, ArrayCollisionMatrix, BODY_SLEEP_STATES, BODY_TYPES, Body, Box, Broadphase, COLLISION_TYPES, ConeTwistConstraint, Constraint, ContactEquation, ContactMaterial, ConvexPolyhedron, Cylinder, DistanceConstraint, Equation, EventTarget, FrictionEquation, GSSolver, GridBroadphase, Heightfield, HingeConstraint, JacobianElement, LockConstraint, Mat3, Material, NaiveBroadphase, Narrowphase, ObjectCollisionMatrix, Particle, Plane, PointToPointConstraint, Pool, Quaternion, RAY_MODES, Ray, RaycastResult, RaycastVehicle, RigidVehicle, RotationalEquation, RotationalMotorEquation, SAPBroadphase, SHAPE_TYPES, SPHSystem, Shape, Solver, Sphere, SplitSolver, Spring, Transform, Trimesh, Vec3, Vec3Pool, WheelInfo, World };\n","import * as THREE from 'three';\nimport {\n  OrbitControls\n} from \"three/examples/jsm/controls/OrbitControls\";\nimport * as dat from 'dat.gui';\nimport * as CANNON from 'cannon-es';\n\nconst scene = new THREE.Scene();\n\nconst camera = new THREE.PerspectiveCamera(\n  75,\n  window.innerWidth / window.innerHeight,\n  0.1,\n  1000\n);\ncamera.position.set(0, 0, 18);\nscene.add(camera);\n\nconst cubeArr = [];\n\n// 设置物体材质\nconst cubeMaterial = new CANNON.Material(\"cube\");\n\nfunction createCube () {\n  const cubeGeometry = new THREE.BoxGeometry(1, 1, 1);\n  const sphereMaterial = new THREE.MeshBasicMaterial();\n  const cube = new THREE.Mesh(cubeGeometry, sphereMaterial);\n  cube.castShadow = true; // 发出阴影\n  scene.add(cube);\n  // 创建物理立方体形状\n  const cubeShape = new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5));\n\n\n  // 创建物理世界的物体\n  const cubeBody = new CANNON.Body({\n    shape: cubeShape, // 形状\n    position: new CANNON.Vec3(0, 0, 0),\n    mass: 1, // 小球质量\n    material: cubeMaterial, // 材质\n  });\n  // cubeBody.applyLocalForce(\n  //   new CANNON.Vec3(1800, 0, 0), // 添加的力的大小和方向\n  //   new CANNON.Vec3(0, 0, 0), // 施加的力所在的位置\n  // )\n  // 将物体添加到物理世界\n  world.addBody(cubeBody);\n\n  // 创建打击声音\n  const sound = require('../assets/video/collision.mp3');\n  const hitSound = new Audio(sound);\n\n  // 添加监听碰撞事件\n  function HitEvent (e) {\n    console.log('hit', e);\n    // 获取碰撞强度\n    const impactStrength = e.contact.getImpactVelocityAlongNormal();\n    console.log('碰撞强度', impactStrength);\n    if (impactStrength > 5) {\n      hitSound.currentTime = 0; // 重置播放\n      hitSound.volume = impactStrength / 20 > 1 ? 1 : impactStrength / 20;\n      hitSound.play();\n    }\n  }\n  // sphereBody.addEventListener('collide', HitEvent)\n  cubeBody.addEventListener('collide', HitEvent);\n  cubeArr.push({\n    mesh: cube,\n    body: cubeBody\n  });\n}\n\nwindow.addEventListener('click', createCube);\n\n// 创建球，立方体和平面\nconst cubeGeometry = new THREE.BoxGeometry(1, 1, 1);\nconst sphereGeometry = new THREE.SphereGeometry(1, 20, 20);\nconst sphereMaterial = new THREE.MeshBasicMaterial();\n// const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial)\nconst sphere = new THREE.Mesh(cubeGeometry, sphereMaterial);\nsphere.castShadow = true; // 发出阴影\nscene.add(sphere);\n\nconst floor = new THREE.Mesh(\n  new THREE.PlaneGeometry(20, 20),\n  new THREE.MeshStandardMaterial({\n    side: THREE.DoubleSide\n  })\n);\nfloor.position.set(0, -5, 0);\nfloor.rotation.x = -Math.PI / 2;\nfloor.receiveShadow = true; // 接收阴影\nscene.add(floor);\n\n// 创建物理世界\nconst world = new CANNON.World();\nworld.gravity.set(0, -9.8, 0); // 重力\n// // 创建物理小球形状\n// const sphereShape = new CANNON.Sphere(1)\n// // 设置物体材质\n// const sphereShapeMaterial = new CANNON.Material(\"sphere\")\n\n// // 创建物理世界的物体\n// const sphereBody = new CANNON.Body({\n//   shape: sphereShape, // 形状\n//   position: new CANNON.Vec3(0, 0, 0),\n//   mass: 1, // 小球质量\n//   material: sphereShapeMaterial, // 材质\n// })\n// // 将物体添加到物理世界\n// world.addBody(sphereBody)\n\n// // 创建物理立方体形状\n// const cubeShape = new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5))\n// // 设置物体材质\n// const cubeMaterial = new CANNON.Material(\"cube\")\n\n// // 创建物理世界的物体\n// const cubeBody = new CANNON.Body({\n//   shape: cubeShape, // 形状\n//   position: new CANNON.Vec3(0, 0, 0),\n//   mass: 1, // 小球质量\n//   material: cubeMaterial, // 材质\n// })\n// // 将物体添加到物理世界\n// world.addBody(cubeBody)\n\n// // 创建打击声音\n// const sound = require('../assets/video/collision.mp3')\n// const hitSound = new Audio(sound)\n\n// // 添加监听碰撞事件\n// function HitEvent(e) {\n//   console.log('hit', e);\n//   // 获取碰撞强度\n//   const impactStrength = e.contact.getImpactVelocityAlongNormal()\n//   console.log('碰撞强度', impactStrength);\n//   if (impactStrength > 5) {\n//     hitSound.currentTime = 0 // 重置播放\n//     hitSound.play()\n//   }\n// }\n// // sphereBody.addEventListener('collide', HitEvent)\n// cubeBody.addEventListener('collide', HitEvent)\n\n// 物理世界创建地面\nconst floorShape = new CANNON.Plane();\nconst floorBody = new CANNON.Body();\nconst floorMaterial = new CANNON.Material(\"floor\");\nfloorBody.material = floorMaterial;\n// 当质量为0时，可以使物体保持不动\nfloorBody.mass = 0;\nfloorBody.addShape(floorShape);\n// 地面位置\nfloorBody.position.set(0, -5, 0);\n// 旋转地面的位置(setFromAxisAngle设置给定轴和角度)\nfloorBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2);\nworld.addBody(floorBody);\n\n// 设置2种材质碰撞的参数\n// const defaultContactMaterial = new CANNON.ContactMaterial(\n//   sphereMaterial,\n//   floorMaterial, {\n//     friction: 0.5, // 摩擦力\n//     restitution: 0.7 // 弹性\n//   }\n// )\n\nconst defaultContactMaterial = new CANNON.ContactMaterial(\n  cubeMaterial,\n  floorMaterial, {\n  friction: 0.5, // 摩擦力\n  restitution: 0.7 // 弹性\n}\n);\n\n// 将材料的关联设置添加到物理世界\nworld.addContactMaterial(defaultContactMaterial);\n\n// 设置世界碰撞的默认材料，如果材料没有设置，默认都用这个\nworld.defaultContactMaterial = defaultContactMaterial;\n\n// 添加环境光和平行光\nconst ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\nscene.add(ambientLight);\nconst directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\ndirectionalLight.castShadow = true;\nscene.add(directionalLight);\n\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.shadowMap.enabled = true;\ndocument.body.appendChild(renderer.domElement);\n\nconst controls = new OrbitControls(camera, renderer.domElement);\ncontrols.enableDamping = true;\n\nconst axesHelper = new THREE.AxesHelper(5);\nscene.add(axesHelper);\n\nconst clock = new THREE.Clock();\n\nfunction render () {\n  let deltaTime = clock.getDelta();\n  // 更新物理世界（固定步长，相对上次的步长）\n  world.step(1 / 120, deltaTime);\n  // 将非物理世界的小球位置同步为物理世界中小球的位置\n  // sphere.position.copy(sphereBody.position)\n  // sphere.position.copy(cubeBody.position)\n  cubeArr.forEach((item) => {\n    // sphere.position.copy(cubeBody.position)\n    item.mesh.position.copy(item.body.position);\n    // 设置渲染的物体跟随物理的物体旋转\n    item.mesh.quaternion.copy(item.body.quaternion);\n  });\n\n  controls.update();\n  renderer.render(scene, camera);\n  requestAnimationFrame(render);\n}\n\nrender();\n\nwindow.addEventListener('resize', () => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  renderer.setPixelRatio(window.devicePixelRatio);\n});"]}